{
  "version": 3,
  "sources": ["../../d3/d3.js", "../../topojson/build/topojson.js", "../../datamaps/dist/datamaps.all.js"],
  "sourcesContent": ["!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));", "(function() {\n  var svg;\n\n  // Save off default references\n  var d3 = window.d3, topojson = window.topojson;\n\n  var defaultOptions = {\n    scope: 'world',\n    responsive: false,\n    aspectRatio: 0.5625,\n    setProjection: setProjection,\n    projection: 'equirectangular',\n    dataType: 'json',\n    data: {},\n    done: function() {},\n    fills: {\n      defaultFill: '#ABDDA4'\n    },\n    filters: {},\n    geographyConfig: {\n        dataUrl: null,\n        hideAntarctica: true,\n        hideHawaiiAndAlaska : false,\n        borderWidth: 1,\n        borderOpacity: 1,\n        borderColor: '#FDFDFD',\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + geography.properties.name + '</strong></div>';\n        },\n        popupOnHover: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightBorderOpacity: 1\n    },\n    projectionConfig: {\n      rotation: [97, 0]\n    },\n    bubblesConfig: {\n        borderWidth: 2,\n        borderOpacity: 1,\n        borderColor: '#FFFFFF',\n        popupOnHover: true,\n        radius: null,\n        popupTemplate: function(geography, data) {\n          return '<div class=\"hoverinfo\"><strong>' + data.name + '</strong></div>';\n        },\n        fillOpacity: 0.75,\n        animate: true,\n        highlightOnHover: true,\n        highlightFillColor: '#FC8D59',\n        highlightBorderColor: 'rgba(250, 15, 160, 0.2)',\n        highlightBorderWidth: 2,\n        highlightBorderOpacity: 1,\n        highlightFillOpacity: 0.85,\n        exitDelay: 100,\n        key: JSON.stringify\n    },\n    arcConfig: {\n      strokeColor: '#DD1C77',\n      strokeWidth: 1,\n      arcSharpness: 1,\n      animationSpeed: 600,\n      popupOnHover: false,\n      popupTemplate: function(geography, data) {\n        // Case with latitude and longitude\n        if ( ( data.origin && data.destination ) && data.origin.latitude && data.origin.longitude && data.destination.latitude && data.destination.longitude ) {\n          return '<div class=\"hoverinfo\"><strong>Arc</strong><br>Origin: ' + JSON.stringify(data.origin) + '<br>Destination: ' + JSON.stringify(data.destination) + '</div>';\n        }\n        // Case with only country name\n        else if ( data.origin && data.destination ) {\n          return '<div class=\"hoverinfo\"><strong>Arc</strong><br>' + data.origin + ' -> ' + data.destination + '</div>';\n        }\n        // Missing information\n        else {\n          return '';\n        }\n      }\n    }\n  };\n\n  /*\n    Getter for value. If not declared on datumValue, look up the chain into optionsValue\n  */\n  function val( datumValue, optionsValue, context ) {\n    if ( typeof context === 'undefined' ) {\n      context = optionsValue;\n      optionsValues = undefined;\n    }\n    var value = typeof datumValue !== 'undefined' ? datumValue : optionsValue;\n\n    if (typeof value === 'undefined') {\n      return  null;\n    }\n\n    if ( typeof value === 'function' ) {\n      var fnContext = [context];\n      if ( context.geography ) {\n        fnContext = [context.geography, context.data];\n      }\n      return value.apply(null, fnContext);\n    }\n    else {\n      return value;\n    }\n  }\n\n  function addContainer( element, height, width ) {\n    this.svg = d3.select( element ).append('svg')\n      .attr('width', width || element.offsetWidth)\n      .attr('data-width', width || element.offsetWidth)\n      .attr('class', 'datamap')\n      .attr('height', height || element.offsetHeight)\n      .style('overflow', 'hidden'); // IE10+ doesn't respect height/width when map is zoomed in\n\n    if (this.options.responsive) {\n      d3.select(this.options.element).style({'position': 'relative', 'padding-bottom': (this.options.aspectRatio*100) + '%'});\n      d3.select(this.options.element).select('svg').style({'position': 'absolute', 'width': '100%', 'height': '100%'});\n      d3.select(this.options.element).select('svg').select('g').selectAll('path').style('vector-effect', 'non-scaling-stroke');\n\n    }\n\n    return this.svg;\n  }\n\n  // setProjection takes the svg element and options\n  function setProjection( element, options ) {\n    var width = options.width || element.offsetWidth;\n    var height = options.height || element.offsetHeight;\n    var projection, path;\n    var svg = this.svg;\n\n    if ( options && typeof options.scope === 'undefined') {\n      options.scope = 'world';\n    }\n\n    if ( options.scope === 'usa' ) {\n      projection = d3.geo.albersUsa()\n        .scale(width)\n        .translate([width / 2, height / 2]);\n    }\n    else if ( options.scope === 'world' ) {\n      projection = d3.geo[options.projection]()\n        .scale((width + 1) / 2 / Math.PI)\n        .translate([width / 2, height / (options.projection === \"mercator\" ? 1.45 : 1.8)]);\n    }\n\n    if ( options.projection === 'orthographic' ) {\n\n      svg.append(\"defs\").append(\"path\")\n        .datum({type: \"Sphere\"})\n        .attr(\"id\", \"sphere\")\n        .attr(\"d\", path);\n\n      svg.append(\"use\")\n          .attr(\"class\", \"stroke\")\n          .attr(\"xlink:href\", \"#sphere\");\n\n      svg.append(\"use\")\n          .attr(\"class\", \"fill\")\n          .attr(\"xlink:href\", \"#sphere\");\n      projection.scale(250).clipAngle(90).rotate(options.projectionConfig.rotation)\n    }\n\n    path = d3.geo.path()\n      .projection( projection );\n\n    return {path: path, projection: projection};\n  }\n\n  function addStyleBlock() {\n    if ( d3.select('.datamaps-style-block').empty() ) {\n      d3.select('head').append('style').attr('class', 'datamaps-style-block')\n      .html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path:not(.datamaps-arc), .datamap circle, .datamap line {stroke: #FFFFFF; vector-effect: non-scaling-stroke; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }');\n    }\n  }\n\n  function drawSubunits( data ) {\n    var fillData = this.options.fills,\n        colorCodeData = this.options.data || {},\n        geoConfig = this.options.geographyConfig;\n\n    var subunits = this.svg.select('g.datamaps-subunits');\n    if ( subunits.empty() ) {\n      subunits = this.addLayer('datamaps-subunits', null, true);\n    }\n\n    var geoData = topojson.feature( data, data.objects[ this.options.scope ] ).features;\n    if ( geoConfig.hideAntarctica ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"ATA\";\n      });\n    }\n\n    if ( geoConfig.hideHawaiiAndAlaska ) {\n      geoData = geoData.filter(function(feature) {\n        return feature.id !== \"HI\" && feature.id !== 'AK';\n      });\n    }\n\n    var geo = subunits.selectAll('path.datamaps-subunit').data( geoData );\n\n    geo.enter()\n      .append('path')\n      .attr('d', this.path)\n      .attr('class', function(d) {\n        return 'datamaps-subunit ' + d.id;\n      })\n      .attr('data-info', function(d) {\n        return JSON.stringify( colorCodeData[d.id]);\n      })\n      .style('fill', function(d) {\n        // If fillKey - use that\n        // Otherwise check 'fill'\n        // Otherwise check 'defaultFill'\n        var fillColor;\n\n        var datum = colorCodeData[d.id];\n        if ( datum && datum.fillKey ) {\n          fillColor = fillData[ val(datum.fillKey, {data: colorCodeData[d.id], geography: d}) ];\n        }\n\n        if ( typeof fillColor === 'undefined' ) {\n          fillColor = val(datum && datum.fillColor, fillData.defaultFill, {data: colorCodeData[d.id], geography: d});\n        }\n\n        return fillColor;\n      })\n      .style('stroke-width', geoConfig.borderWidth)\n      .style('stroke-opacity', geoConfig.borderOpacity)\n      .style('stroke', geoConfig.borderColor);\n  }\n\n  function handleGeographyConfig () {\n    var hoverover;\n    var svg = this.svg;\n    var self = this;\n    var options = this.options.geographyConfig;\n\n    if ( options.highlightOnHover || options.popupOnHover ) {\n      svg.selectAll('.datamaps-subunit')\n        .on('mouseover', function(d) {\n          var $this = d3.select(this);\n          var datum = self.options.data[d.id] || {};\n          if ( options.highlightOnHover ) {\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('stroke-opacity', val(datum.highlightBorderOpacity, options.highlightBorderOpacity, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n\n            // As per discussion on https://github.com/markmarkoh/datamaps/issues/19\n            if ( ! /((MSIE)|(Trident))/.test(navigator.userAgent) ) {\n             moveToFront.call(this);\n            }\n          }\n\n          if ( options.popupOnHover ) {\n            self.updatePopup($this, d, options, svg);\n          }\n        })\n        .on('mouseout', function() {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n          $this.on('mousemove', null);\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        });\n    }\n\n    function moveToFront() {\n      this.parentNode.appendChild(this);\n    }\n  }\n\n  // Plugin to add a simple map legend\n  function addLegend(layer, data, options) {\n    data = data || {};\n    if ( !this.options.fills ) {\n      return;\n    }\n\n    var html = '<dl>';\n    var label = '';\n    if ( data.legendTitle ) {\n      html = '<h2>' + data.legendTitle + '</h2>' + html;\n    }\n    for ( var fillKey in this.options.fills ) {\n\n      if ( fillKey === 'defaultFill') {\n        if (! data.defaultFillName ) {\n          continue;\n        }\n        label = data.defaultFillName;\n      } else {\n        if (data.labels && data.labels[fillKey]) {\n          label = data.labels[fillKey];\n        } else {\n          label= fillKey + ': ';\n        }\n      }\n      html += '<dt>' + label + '</dt>';\n      html += '<dd style=\"background-color:' +  this.options.fills[fillKey] + '\">&nbsp;</dd>';\n    }\n    html += '</dl>';\n\n    var hoverover = d3.select( this.options.element ).append('div')\n      .attr('class', 'datamaps-legend')\n      .html(html);\n  }\n\n    function addGraticule ( layer, options ) {\n      var graticule = d3.geo.graticule();\n      this.svg.insert(\"path\", '.datamaps-subunits')\n        .datum(graticule)\n        .attr(\"class\", \"datamaps-graticule\")\n        .attr(\"d\", this.path);\n  }\n\n  function handleArcs (layer, data, options) {\n    var self = this,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - arcs must be an array\";\n    }\n\n    // For some reason arc options were put in an `options` object instead of the parent arc\n    // I don't like this, so to match bubbles and other plugins I'm moving it\n    // This is to keep backwards compatability\n    for ( var i = 0; i < data.length; i++ ) {\n      data[i] = defaults(data[i], data[i].options);\n      delete data[i].options;\n    }\n\n    if ( typeof options === \"undefined\" ) {\n      options = defaultOptions.arcConfig;\n    }\n\n    var arcs = layer.selectAll('path.datamaps-arc').data( data, JSON.stringify );\n\n    var path = d3.geo.path()\n        .projection(self.projection);\n\n    arcs\n      .enter()\n        .append('svg:path')\n        .attr('class', 'datamaps-arc')\n        .style('stroke-linecap', 'round')\n        .style('stroke', function(datum) {\n          return val(datum.strokeColor, options.strokeColor, datum);\n        })\n        .style('fill', 'none')\n        .style('stroke-width', function(datum) {\n            return val(datum.strokeWidth, options.strokeWidth, datum);\n        })\n        .attr('d', function(datum) {\n\n            var originXY, destXY;\n\n            if (typeof datum.origin === \"string\") {\n              switch (datum.origin) {\n                   case \"CAN\":\n                       originXY = self.latLngToXY(56.624472, -114.665293);\n                       break;\n                   case \"CHL\":\n                       originXY = self.latLngToXY(-33.448890, -70.669265);\n                       break;\n                   case \"IDN\":\n                       originXY = self.latLngToXY(-6.208763, 106.845599);\n                       break;\n                   case \"JPN\":\n                       originXY = self.latLngToXY(35.689487, 139.691706);\n                       break;\n                   case \"MYS\":\n                       originXY = self.latLngToXY(3.139003, 101.686855);\n                       break;\n                   case \"NOR\":\n                       originXY = self.latLngToXY(59.913869, 10.752245);\n                       break;\n                   case \"USA\":\n                       originXY = self.latLngToXY(41.140276, -100.760145);\n                       break;\n                   case \"VNM\":\n                       originXY = self.latLngToXY(21.027764, 105.834160);\n                       break;\n                   default:\n                       originXY = self.path.centroid(svg.select('path.' + datum.origin).data()[0]);\n               }\n            } else {\n              originXY = self.latLngToXY(val(datum.origin.latitude, datum), val(datum.origin.longitude, datum))\n            }\n\n            if (typeof datum.destination === 'string') {\n              switch (datum.destination) {\n                     case \"CAN\":\n                        destXY = self.latLngToXY(56.624472, -114.665293);\n                        break;\n                    case \"CHL\":\n                        destXY = self.latLngToXY(-33.448890, -70.669265);\n                        break;\n                    case \"IDN\":\n                        destXY = self.latLngToXY(-6.208763, 106.845599);\n                        break;\n                    case \"JPN\":\n                        destXY = self.latLngToXY(35.689487, 139.691706);\n                        break;\n                    case \"MYS\":\n                        destXY = self.latLngToXY(3.139003, 101.686855);\n                        break;\n                    case \"NOR\":\n                        destXY = self.latLngToXY(59.913869, 10.752245);\n                        break;\n                    case \"USA\":\n                        destXY = self.latLngToXY(41.140276, -100.760145);\n                        break;\n                    case \"VNM\":\n                        destXY = self.latLngToXY(21.027764, 105.834160);\n                        break;\n                    default:\n                        destXY = self.path.centroid(svg.select('path.' + datum.destination).data()[0]);\n              }\n            } else {\n              destXY = self.latLngToXY(val(datum.destination.latitude, datum), val(datum.destination.longitude, datum));\n            }\n            var midXY = [ (originXY[0] + destXY[0]) / 2, (originXY[1] + destXY[1]) / 2];\n            if (options.greatArc) {\n                  // TODO: Move this to inside `if` clause when setting attr `d`\n              var greatArc = d3.geo.greatArc()\n                  .source(function(d) { return [val(d.origin.longitude, d), val(d.origin.latitude, d)]; })\n                  .target(function(d) { return [val(d.destination.longitude, d), val(d.destination.latitude, d)]; });\n\n              return path(greatArc(datum))\n            }\n            var sharpness = val(datum.arcSharpness, options.arcSharpness, datum);\n            return \"M\" + originXY[0] + ',' + originXY[1] + \"S\" + (midXY[0] + (50 * sharpness)) + \",\" + (midXY[1] - (75 * sharpness)) + \",\" + destXY[0] + \",\" + destXY[1];\n        })\n        .attr('data-info', function(datum) {\n          return JSON.stringify(datum);\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n        .transition()\n          .delay(100)\n          .style('fill', function(datum) {\n            /*\n              Thank you Jake Archibald, this is awesome.\n              Source: http://jakearchibald.com/2013/animated-line-drawing-svg/\n            */\n            var length = this.getTotalLength();\n            this.style.transition = this.style.WebkitTransition = 'none';\n            this.style.strokeDasharray = length + ' ' + length;\n            this.style.strokeDashoffset = length;\n            this.getBoundingClientRect();\n            this.style.transition = this.style.WebkitTransition = 'stroke-dashoffset ' + val(datum.animationSpeed, options.animationSpeed, datum) + 'ms ease-out';\n            this.style.strokeDashoffset = '0';\n            return 'none';\n          })\n\n    arcs.exit()\n      .transition()\n      .style('opacity', 0)\n      .remove();\n  }\n\n  function handleLabels ( layer, options ) {\n    var self = this;\n    options = options || {};\n    var labelStartCoodinates = this.projection([-67.707617, 42.722131]);\n    this.svg.selectAll(\".datamaps-subunit\")\n      .attr(\"data-foo\", function(d) {\n        var center = self.path.centroid(d);\n        var xOffset = 7.5, yOffset = 5;\n\n        if ( [\"FL\", \"KY\", \"MI\"].indexOf(d.id) > -1 ) xOffset = -2.5;\n        if ( d.id === \"NY\" ) xOffset = -1;\n        if ( d.id === \"MI\" ) yOffset = 18;\n        if ( d.id === \"LA\" ) xOffset = 13;\n\n        var x,y;\n\n        x = center[0] - xOffset;\n        y = center[1] + yOffset;\n\n        var smallStateIndex = [\"VT\", \"NH\", \"MA\", \"RI\", \"CT\", \"NJ\", \"DE\", \"MD\", \"DC\"].indexOf(d.id);\n        if ( smallStateIndex > -1) {\n          var yStart = labelStartCoodinates[1];\n          x = labelStartCoodinates[0];\n          y = yStart + (smallStateIndex * (2+ (options.fontSize || 12)));\n          layer.append(\"line\")\n            .attr(\"x1\", x - 3)\n            .attr(\"y1\", y - 5)\n            .attr(\"x2\", center[0])\n            .attr(\"y2\", center[1])\n            .style(\"stroke\", options.labelColor || \"#000\")\n            .style(\"stroke-width\", options.lineWidth || 1)\n        }\n\n          layer.append(\"text\")\n              .attr(\"x\", x)\n              .attr(\"y\", y)\n              .style(\"font-size\", (options.fontSize || 10) + 'px')\n              .style(\"font-family\", options.fontFamily || \"Verdana\")\n              .style(\"fill\", options.labelColor || \"#000\")\n              .text(function() {\n                  if (options.customLabelText && options.customLabelText[d.id]) {\n                      return options.customLabelText[d.id]\n                  } else {\n                      return d.id\n                  }\n              });\n\n        return \"bar\";\n      });\n  }\n\n\n  function handleBubbles (layer, data, options ) {\n    var self = this,\n        fillData = this.options.fills,\n        filterData = this.options.filters,\n        svg = this.svg;\n\n    if ( !data || (data && !data.slice) ) {\n      throw \"Datamaps Error - bubbles must be an array\";\n    }\n\n    var bubbles = layer.selectAll('circle.datamaps-bubble').data( data, options.key );\n\n    bubbles\n      .enter()\n        .append('svg:circle')\n        .attr('class', 'datamaps-bubble')\n        .attr('cx', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            if ( datum.centered === 'USA' ) {\n              latLng = self.projection([-98.58333, 39.83333])\n            } else {\n              latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n            }\n          }\n          if ( latLng ) return latLng[0];\n        })\n        .attr('cy', function ( datum ) {\n          var latLng;\n          if ( datumHasCoords(datum) ) {\n            latLng = self.latLngToXY(datum.latitude, datum.longitude);\n          }\n          else if ( datum.centered ) {\n            if ( datum.centered === 'USA' ) {\n              latLng = self.projection([-98.58333, 39.83333])\n            } else {\n              latLng = self.path.centroid(svg.select('path.' + datum.centered).data()[0]);\n            }\n          }\n          if ( latLng ) return latLng[1];\n        })\n        .attr('r', function(datum) {\n          // If animation enabled start with radius 0, otherwise use full size.\n          return options.animate ? 0 : val(datum.radius, options.radius, datum);\n        })\n        .attr('data-info', function(datum) {\n          return JSON.stringify(datum);\n        })\n        .attr('filter', function (datum) {\n          var filterKey = filterData[ val(datum.filterKey, options.filterKey, datum) ];\n\n          if (filterKey) {\n            return filterKey;\n          }\n        })\n        .style('stroke', function ( datum ) {\n          return val(datum.borderColor, options.borderColor, datum);\n        })\n        .style('stroke-width', function ( datum ) {\n          return val(datum.borderWidth, options.borderWidth, datum);\n        })\n        .style('stroke-opacity', function ( datum ) {\n          return val(datum.borderOpacity, options.borderOpacity, datum);\n        })\n        .style('fill-opacity', function ( datum ) {\n          return val(datum.fillOpacity, options.fillOpacity, datum);\n        })\n        .style('fill', function ( datum ) {\n          var fillColor = fillData[ val(datum.fillKey, options.fillKey, datum) ];\n          return fillColor || fillData.defaultFill;\n        })\n        .on('mouseover', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Save all previous attributes for mouseout\n            var previousAttributes = {\n              'fill':  $this.style('fill'),\n              'stroke': $this.style('stroke'),\n              'stroke-width': $this.style('stroke-width'),\n              'fill-opacity': $this.style('fill-opacity')\n            };\n\n            $this\n              .style('fill', val(datum.highlightFillColor, options.highlightFillColor, datum))\n              .style('stroke', val(datum.highlightBorderColor, options.highlightBorderColor, datum))\n              .style('stroke-width', val(datum.highlightBorderWidth, options.highlightBorderWidth, datum))\n              .style('stroke-opacity', val(datum.highlightBorderOpacity, options.highlightBorderOpacity, datum))\n              .style('fill-opacity', val(datum.highlightFillOpacity, options.highlightFillOpacity, datum))\n              .attr('data-previousAttributes', JSON.stringify(previousAttributes));\n          }\n\n          if (options.popupOnHover) {\n            self.updatePopup($this, datum, options, svg);\n          }\n        })\n        .on('mouseout', function ( datum ) {\n          var $this = d3.select(this);\n\n          if (options.highlightOnHover) {\n            // Reapply previous attributes\n            var previousAttributes = JSON.parse( $this.attr('data-previousAttributes') );\n            for ( var attr in previousAttributes ) {\n              $this.style(attr, previousAttributes[attr]);\n            }\n          }\n\n          d3.selectAll('.datamaps-hoverover').style('display', 'none');\n        })\n\n    bubbles.transition()\n      .duration(400)\n      .attr('r', function ( datum ) {\n        return val(datum.radius, options.radius, datum);\n      })\n    .transition()\n      .duration(0)\n      .attr('data-info', function(d) {\n        return JSON.stringify(d);\n      });\n\n    bubbles.exit()\n      .transition()\n        .delay(options.exitDelay)\n        .attr(\"r\", 0)\n        .remove();\n\n    function datumHasCoords (datum) {\n      return typeof datum !== 'undefined' && typeof datum.latitude !== 'undefined' && typeof datum.longitude !== 'undefined';\n    }\n  }\n\n  function defaults(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n      if (source) {\n        for (var prop in source) {\n          // Deep copy if property not set\n          if (obj[prop] == null) {\n            if (typeof source[prop] == 'function') {\n              obj[prop] = source[prop];\n            }\n            else {\n              obj[prop] = JSON.parse(JSON.stringify(source[prop]));\n            }\n          }\n        }\n      }\n    });\n    return obj;\n  }\n  /**************************************\n             Public Functions\n  ***************************************/\n\n  function Datamap( options ) {\n\n    if ( typeof d3 === 'undefined' || typeof topojson === 'undefined' ) {\n      throw new Error('Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map');\n   }\n    // Set options for global use\n    this.options = defaults(options, defaultOptions);\n    this.options.geographyConfig = defaults(options.geographyConfig, defaultOptions.geographyConfig);\n    this.options.projectionConfig = defaults(options.projectionConfig, defaultOptions.projectionConfig);\n    this.options.bubblesConfig = defaults(options.bubblesConfig, defaultOptions.bubblesConfig);\n    this.options.arcConfig = defaults(options.arcConfig, defaultOptions.arcConfig);\n\n    // Add the SVG container\n    if ( d3.select( this.options.element ).select('svg').length > 0 ) {\n      addContainer.call(this, this.options.element, this.options.height, this.options.width );\n    }\n\n    // Add core plugins to this instance\n    this.addPlugin('bubbles', handleBubbles);\n    this.addPlugin('legend', addLegend);\n    this.addPlugin('arc', handleArcs);\n    this.addPlugin('labels', handleLabels);\n    this.addPlugin('graticule', addGraticule);\n\n    // Append style block with basic hoverover styles\n    if ( ! this.options.disableDefaultStyles ) {\n      addStyleBlock();\n    }\n\n    return this.draw();\n  }\n\n  // Resize map\n  Datamap.prototype.resize = function () {\n\n    var self = this;\n    var options = self.options;\n\n    if (options.responsive) {\n      var newsize = options.element.clientWidth,\n          oldsize = d3.select( options.element).select('svg').attr('data-width');\n\n      d3.select(options.element).select('svg').selectAll('g').attr('transform', 'scale(' + (newsize / oldsize) + ')');\n    }\n  }\n\n  // Actually draw the features(states & countries)\n  Datamap.prototype.draw = function() {\n    // Save off in a closure\n    var self = this;\n    var options = self.options;\n\n    // Set projections and paths based on scope\n    var pathAndProjection = options.setProjection.apply(this, [options.element, options] );\n\n    this.path = pathAndProjection.path;\n    this.projection = pathAndProjection.projection;\n\n    // If custom URL for topojson data, retrieve it and render\n    if ( options.geographyConfig.dataUrl ) {\n      d3.json( options.geographyConfig.dataUrl, function(error, results) {\n        if ( error ) throw new Error(error);\n        self.customTopo = results;\n        draw( results );\n      });\n    }\n    else {\n      draw( this[options.scope + 'Topo'] || options.geographyConfig.dataJson);\n    }\n\n    return this;\n\n      function draw (data) {\n        // If fetching remote data, draw the map first then call `updateChoropleth`\n        if ( self.options.dataUrl ) {\n          // Allow for csv or json data types\n          d3[self.options.dataType](self.options.dataUrl, function(data) {\n            // In the case of csv, transform data to object\n            if ( self.options.dataType === 'csv' && (data && data.slice) ) {\n              var tmpData = {};\n              for(var i = 0; i < data.length; i++) {\n                tmpData[data[i].id] = data[i];\n              }\n              data = tmpData;\n            }\n            Datamaps.prototype.updateChoropleth.call(self, data);\n          });\n        }\n        drawSubunits.call(self, data);\n        handleGeographyConfig.call(self);\n\n        if ( self.options.geographyConfig.popupOnHover || self.options.bubblesConfig.popupOnHover) {\n          hoverover = d3.select( self.options.element ).append('div')\n            .attr('class', 'datamaps-hoverover')\n            .style('z-index', 10001)\n            .style('position', 'absolute');\n        }\n\n        // Fire off finished callback\n        self.options.done(self);\n      }\n  };\n  /**************************************\n                TopoJSON\n  ***************************************/\n  Datamap.prototype.worldTopo = {\n    \"type\": \"Topology\",\n    \"objects\": {\n        \"world\": {\n            \"type\": \"GeometryCollection\",\n            \"geometries\": [{\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Afghanistan\"\n                },\n                \"id\": \"AFG\",\n                \"arcs\": [\n                    [0, 1, 2, 3, 4, 5]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Angola\"\n                },\n                \"id\": \"AGO\",\n                \"arcs\": [\n                    [\n                        [6, 7, 8, 9]\n                    ],\n                    [\n                        [10, 11, 12]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Albania\"\n                },\n                \"id\": \"ALB\",\n                \"arcs\": [\n                    [13, 14, 15, 16, 17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Arab Emirates\"\n                },\n                \"id\": \"ARE\",\n                \"arcs\": [\n                    [18, 19, 20, 21, 22]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Argentina\"\n                },\n                \"id\": \"ARG\",\n                \"arcs\": [\n                    [\n                        [23, 24]\n                    ],\n                    [\n                        [25, 26, 27, 28, 29, 30]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Armenia\"\n                },\n                \"id\": \"ARM\",\n                \"arcs\": [\n                    [31, 32, 33, 34, 35]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Antarctica\"\n                },\n                \"id\": \"ATA\",\n                \"arcs\": [\n                    [\n                        [36]\n                    ],\n                    [\n                        [37]\n                    ],\n                    [\n                        [38]\n                    ],\n                    [\n                        [39]\n                    ],\n                    [\n                        [40]\n                    ],\n                    [\n                        [41]\n                    ],\n                    [\n                        [42]\n                    ],\n                    [\n                        [43]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Southern and Antarctic Lands\"\n                },\n                \"id\": \"ATF\",\n                \"arcs\": [\n                    [44]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Australia\"\n                },\n                \"id\": \"AUS\",\n                \"arcs\": [\n                    [\n                        [45]\n                    ],\n                    [\n                        [46]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Austria\"\n                },\n                \"id\": \"AUT\",\n                \"arcs\": [\n                    [47, 48, 49, 50, 51, 52, 53]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Azerbaijan\"\n                },\n                \"id\": \"AZE\",\n                \"arcs\": [\n                    [\n                        [54, -35]\n                    ],\n                    [\n                        [55, 56, -33, 57, 58]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burundi\"\n                },\n                \"id\": \"BDI\",\n                \"arcs\": [\n                    [59, 60, 61]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belgium\"\n                },\n                \"id\": \"BEL\",\n                \"arcs\": [\n                    [62, 63, 64, 65, 66]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Benin\"\n                },\n                \"id\": \"BEN\",\n                \"arcs\": [\n                    [67, 68, 69, 70, 71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Burkina Faso\"\n                },\n                \"id\": \"BFA\",\n                \"arcs\": [\n                    [72, 73, 74, -70, 75, 76]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bangladesh\"\n                },\n                \"id\": \"BGD\",\n                \"arcs\": [\n                    [77, 78, 79]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bulgaria\"\n                },\n                \"id\": \"BGR\",\n                \"arcs\": [\n                    [80, 81, 82, 83, 84, 85]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"The Bahamas\"\n                },\n                \"id\": \"BHS\",\n                \"arcs\": [\n                    [\n                        [86]\n                    ],\n                    [\n                        [87]\n                    ],\n                    [\n                        [88]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bosnia and Herzegovina\"\n                },\n                \"id\": \"BIH\",\n                \"arcs\": [\n                    [89, 90, 91]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belarus\"\n                },\n                \"id\": \"BLR\",\n                \"arcs\": [\n                    [92, 93, 94, 95, 96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Belize\"\n                },\n                \"id\": \"BLZ\",\n                \"arcs\": [\n                    [97, 98, 99]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bolivia\"\n                },\n                \"id\": \"BOL\",\n                \"arcs\": [\n                    [100, 101, 102, 103, -31]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brazil\"\n                },\n                \"id\": \"BRA\",\n                \"arcs\": [\n                    [-27, 104, -103, 105, 106, 107, 108, 109, 110, 111, 112]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Brunei\"\n                },\n                \"id\": \"BRN\",\n                \"arcs\": [\n                    [113, 114]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Bhutan\"\n                },\n                \"id\": \"BTN\",\n                \"arcs\": [\n                    [115, 116]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Botswana\"\n                },\n                \"id\": \"BWA\",\n                \"arcs\": [\n                    [117, 118, 119, 120]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Central African Republic\"\n                },\n                \"id\": \"CAF\",\n                \"arcs\": [\n                    [121, 122, 123, 124, 125, 126, 127]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Canada\"\n                },\n                \"id\": \"CAN\",\n                \"arcs\": [\n                    [\n                        [128]\n                    ],\n                    [\n                        [129]\n                    ],\n                    [\n                        [130]\n                    ],\n                    [\n                        [131]\n                    ],\n                    [\n                        [132]\n                    ],\n                    [\n                        [133]\n                    ],\n                    [\n                        [134]\n                    ],\n                    [\n                        [135]\n                    ],\n                    [\n                        [136]\n                    ],\n                    [\n                        [137]\n                    ],\n                    [\n                        [138, 139, 140, 141]\n                    ],\n                    [\n                        [142]\n                    ],\n                    [\n                        [143]\n                    ],\n                    [\n                        [144]\n                    ],\n                    [\n                        [145]\n                    ],\n                    [\n                        [146]\n                    ],\n                    [\n                        [147]\n                    ],\n                    [\n                        [148]\n                    ],\n                    [\n                        [149]\n                    ],\n                    [\n                        [150]\n                    ],\n                    [\n                        [151]\n                    ],\n                    [\n                        [152]\n                    ],\n                    [\n                        [153]\n                    ],\n                    [\n                        [154]\n                    ],\n                    [\n                        [155]\n                    ],\n                    [\n                        [156]\n                    ],\n                    [\n                        [157]\n                    ],\n                    [\n                        [158]\n                    ],\n                    [\n                        [159]\n                    ],\n                    [\n                        [160]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Switzerland\"\n                },\n                \"id\": \"CHE\",\n                \"arcs\": [\n                    [-51, 161, 162, 163]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Chile\"\n                },\n                \"id\": \"CHL\",\n                \"arcs\": [\n                    [\n                        [-24, 164]\n                    ],\n                    [\n                        [-30, 165, 166, -101]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"China\"\n                },\n                \"id\": \"CHN\",\n                \"arcs\": [\n                    [\n                        [167]\n                    ],\n                    [\n                        [168, 169, 170, 171, 172, 173, -117, 174, 175, 176, 177, -4, 178, 179, 180, 181, 182, 183]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ivory Coast\"\n                },\n                \"id\": \"CIV\",\n                \"arcs\": [\n                    [184, 185, 186, 187, -73, 188]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cameroon\"\n                },\n                \"id\": \"CMR\",\n                \"arcs\": [\n                    [189, 190, 191, 192, 193, 194, -128, 195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Democratic Republic of the Congo\"\n                },\n                \"id\": \"COD\",\n                \"arcs\": [\n                    [196, 197, -60, 198, 199, -10, 200, -13, 201, -126, 202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of the Congo\"\n                },\n                \"id\": \"COG\",\n                \"arcs\": [\n                    [-12, 203, 204, -196, -127, -202]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Colombia\"\n                },\n                \"id\": \"COL\",\n                \"arcs\": [\n                    [205, 206, 207, 208, 209, -107, 210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Costa Rica\"\n                },\n                \"id\": \"CRI\",\n                \"arcs\": [\n                    [211, 212, 213, 214]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cuba\"\n                },\n                \"id\": \"CUB\",\n                \"arcs\": [\n                    [215]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Northern Cyprus\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [216, 217]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cyprus\"\n                },\n                \"id\": \"CYP\",\n                \"arcs\": [\n                    [218, -218]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Czech Republic\"\n                },\n                \"id\": \"CZE\",\n                \"arcs\": [\n                    [-53, 219, 220, 221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Germany\"\n                },\n                \"id\": \"DEU\",\n                \"arcs\": [\n                    [222, 223, -220, -52, -164, 224, 225, -64, 226, 227, 228]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Djibouti\"\n                },\n                \"id\": \"DJI\",\n                \"arcs\": [\n                    [229, 230, 231, 232]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Denmark\"\n                },\n                \"id\": \"DNK\",\n                \"arcs\": [\n                    [\n                        [233]\n                    ],\n                    [\n                        [-229, 234]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Dominican Republic\"\n                },\n                \"id\": \"DOM\",\n                \"arcs\": [\n                    [235, 236]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Algeria\"\n                },\n                \"id\": \"DZA\",\n                \"arcs\": [\n                    [237, 238, 239, 240, 241, 242, 243, 244]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ecuador\"\n                },\n                \"id\": \"ECU\",\n                \"arcs\": [\n                    [245, -206, 246]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Egypt\"\n                },\n                \"id\": \"EGY\",\n                \"arcs\": [\n                    [247, 248, 249, 250, 251]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Eritrea\"\n                },\n                \"id\": \"ERI\",\n                \"arcs\": [\n                    [252, 253, 254, -233]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Spain\"\n                },\n                \"id\": \"ESP\",\n                \"arcs\": [\n                    [255, 256, 257, 258]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Estonia\"\n                },\n                \"id\": \"EST\",\n                \"arcs\": [\n                    [259, 260, 261]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ethiopia\"\n                },\n                \"id\": \"ETH\",\n                \"arcs\": [\n                    [-232, 262, 263, 264, 265, 266, 267, -253]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Finland\"\n                },\n                \"id\": \"FIN\",\n                \"arcs\": [\n                    [268, 269, 270, 271]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Fiji\"\n                },\n                \"id\": \"FJI\",\n                \"arcs\": [\n                    [\n                        [272]\n                    ],\n                    [\n                        [273, 274]\n                    ],\n                    [\n                        [275, -275]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Falkland Islands\"\n                },\n                \"id\": \"FLK\",\n                \"arcs\": [\n                    [276]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"France\"\n                },\n                \"id\": \"FRA\",\n                \"arcs\": [\n                    [\n                        [277]\n                    ],\n                    [\n                        [278, -225, -163, 279, 280, -257, 281, -66]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"French Guiana\"\n                },\n                \"id\": \"GUF\",\n                \"arcs\": [\n                    [282, 283, 284, 285, -111]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gabon\"\n                },\n                \"id\": \"GAB\",\n                \"arcs\": [\n                    [286, 287, -190, -205]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United Kingdom\"\n                },\n                \"id\": \"GBR\",\n                \"arcs\": [\n                    [\n                        [288, 289]\n                    ],\n                    [\n                        [290]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Georgia\"\n                },\n                \"id\": \"GEO\",\n                \"arcs\": [\n                    [291, 292, -58, -32, 293]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ghana\"\n                },\n                \"id\": \"GHA\",\n                \"arcs\": [\n                    [294, -189, -77, 295]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea\"\n                },\n                \"id\": \"GIN\",\n                \"arcs\": [\n                    [296, 297, 298, 299, 300, 301, -187]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Gambia\"\n                },\n                \"id\": \"GMB\",\n                \"arcs\": [\n                    [302, 303]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guinea Bissau\"\n                },\n                \"id\": \"GNB\",\n                \"arcs\": [\n                    [304, 305, -300]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Equatorial Guinea\"\n                },\n                \"id\": \"GNQ\",\n                \"arcs\": [\n                    [306, -191, -288]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Greece\"\n                },\n                \"id\": \"GRC\",\n                \"arcs\": [\n                    [\n                        [307]\n                    ],\n                    [\n                        [308, -15, 309, -84, 310]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Greenland\"\n                },\n                \"id\": \"GRL\",\n                \"arcs\": [\n                    [311]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guatemala\"\n                },\n                \"id\": \"GTM\",\n                \"arcs\": [\n                    [312, 313, -100, 314, 315, 316]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Guyana\"\n                },\n                \"id\": \"GUY\",\n                \"arcs\": [\n                    [317, 318, -109, 319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Honduras\"\n                },\n                \"id\": \"HND\",\n                \"arcs\": [\n                    [320, 321, -316, 322, 323]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Croatia\"\n                },\n                \"id\": \"HRV\",\n                \"arcs\": [\n                    [324, -92, 325, 326, 327, 328]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Haiti\"\n                },\n                \"id\": \"HTI\",\n                \"arcs\": [\n                    [-237, 329]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Hungary\"\n                },\n                \"id\": \"HUN\",\n                \"arcs\": [\n                    [-48, 330, 331, 332, 333, -329, 334]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Indonesia\"\n                },\n                \"id\": \"IDN\",\n                \"arcs\": [\n                    [\n                        [335]\n                    ],\n                    [\n                        [336, 337]\n                    ],\n                    [\n                        [338]\n                    ],\n                    [\n                        [339]\n                    ],\n                    [\n                        [340]\n                    ],\n                    [\n                        [341]\n                    ],\n                    [\n                        [342]\n                    ],\n                    [\n                        [343]\n                    ],\n                    [\n                        [344, 345]\n                    ],\n                    [\n                        [346]\n                    ],\n                    [\n                        [347]\n                    ],\n                    [\n                        [348, 349]\n                    ],\n                    [\n                        [350]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"India\"\n                },\n                \"id\": \"IND\",\n                \"arcs\": [\n                    [-177, 351, -175, -116, -174, 352, -80, 353, 354]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ireland\"\n                },\n                \"id\": \"IRL\",\n                \"arcs\": [\n                    [355, -289]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iran\"\n                },\n                \"id\": \"IRN\",\n                \"arcs\": [\n                    [356, -6, 357, 358, 359, 360, -55, -34, -57, 361]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iraq\"\n                },\n                \"id\": \"IRQ\",\n                \"arcs\": [\n                    [362, 363, 364, 365, 366, 367, -360]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Iceland\"\n                },\n                \"id\": \"ISL\",\n                \"arcs\": [\n                    [368]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Israel\"\n                },\n                \"id\": \"ISR\",\n                \"arcs\": [\n                    [369, 370, 371, -252, 372, 373, 374]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Italy\"\n                },\n                \"id\": \"ITA\",\n                \"arcs\": [\n                    [\n                        [375]\n                    ],\n                    [\n                        [376]\n                    ],\n                    [\n                        [377, 378, -280, -162, -50]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jamaica\"\n                },\n                \"id\": \"JAM\",\n                \"arcs\": [\n                    [379]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Jordan\"\n                },\n                \"id\": \"JOR\",\n                \"arcs\": [\n                    [-370, 380, -366, 381, 382, -372, 383]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Japan\"\n                },\n                \"id\": \"JPN\",\n                \"arcs\": [\n                    [\n                        [384]\n                    ],\n                    [\n                        [385]\n                    ],\n                    [\n                        [386]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kazakhstan\"\n                },\n                \"id\": \"KAZ\",\n                \"arcs\": [\n                    [387, 388, 389, 390, -181, 391]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kenya\"\n                },\n                \"id\": \"KEN\",\n                \"arcs\": [\n                    [392, 393, 394, 395, -265, 396]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kyrgyzstan\"\n                },\n                \"id\": \"KGZ\",\n                \"arcs\": [\n                    [-392, -180, 397, 398]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Cambodia\"\n                },\n                \"id\": \"KHM\",\n                \"arcs\": [\n                    [399, 400, 401, 402]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Korea\"\n                },\n                \"id\": \"KOR\",\n                \"arcs\": [\n                    [403, 404]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kosovo\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-18, 405, 406, 407]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Kuwait\"\n                },\n                \"id\": \"KWT\",\n                \"arcs\": [\n                    [408, 409, -364]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Laos\"\n                },\n                \"id\": \"LAO\",\n                \"arcs\": [\n                    [410, 411, -172, 412, -401]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lebanon\"\n                },\n                \"id\": \"LBN\",\n                \"arcs\": [\n                    [-374, 413, 414]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Liberia\"\n                },\n                \"id\": \"LBR\",\n                \"arcs\": [\n                    [415, 416, -297, -186]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Libya\"\n                },\n                \"id\": \"LBY\",\n                \"arcs\": [\n                    [417, -245, 418, 419, -250, 420, 421]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sri Lanka\"\n                },\n                \"id\": \"LKA\",\n                \"arcs\": [\n                    [422]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lesotho\"\n                },\n                \"id\": \"LSO\",\n                \"arcs\": [\n                    [423]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Lithuania\"\n                },\n                \"id\": \"LTU\",\n                \"arcs\": [\n                    [424, 425, 426, -93, 427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Luxembourg\"\n                },\n                \"id\": \"LUX\",\n                \"arcs\": [\n                    [-226, -279, -65]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Latvia\"\n                },\n                \"id\": \"LVA\",\n                \"arcs\": [\n                    [428, -262, 429, -94, -427]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Morocco\"\n                },\n                \"id\": \"MAR\",\n                \"arcs\": [\n                    [-242, 430, 431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Moldova\"\n                },\n                \"id\": \"MDA\",\n                \"arcs\": [\n                    [432, 433]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Madagascar\"\n                },\n                \"id\": \"MDG\",\n                \"arcs\": [\n                    [434]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mexico\"\n                },\n                \"id\": \"MEX\",\n                \"arcs\": [\n                    [435, -98, -314, 436, 437]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Macedonia\"\n                },\n                \"id\": \"MKD\",\n                \"arcs\": [\n                    [-408, 438, -85, -310, -14]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mali\"\n                },\n                \"id\": \"MLI\",\n                \"arcs\": [\n                    [439, -239, 440, -74, -188, -302, 441]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Myanmar\"\n                },\n                \"id\": \"MMR\",\n                \"arcs\": [\n                    [442, -78, -353, -173, -412, 443]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Montenegro\"\n                },\n                \"id\": \"MNE\",\n                \"arcs\": [\n                    [444, -326, -91, 445, -406, -17]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mongolia\"\n                },\n                \"id\": \"MNG\",\n                \"arcs\": [\n                    [446, -183]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mozambique\"\n                },\n                \"id\": \"MOZ\",\n                \"arcs\": [\n                    [447, 448, 449, 450, 451, 452, 453, 454]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Mauritania\"\n                },\n                \"id\": \"MRT\",\n                \"arcs\": [\n                    [455, 456, 457, -240, -440]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Malawi\"\n                },\n                \"id\": \"MWI\",\n                \"arcs\": [\n                    [-455, 458, 459]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Malaysia\"\n                },\n                \"id\": \"MYS\",\n                \"arcs\": [\n                    [\n                        [460, 461]\n                    ],\n                    [\n                        [-349, 462, -115, 463]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Namibia\"\n                },\n                \"id\": \"NAM\",\n                \"arcs\": [\n                    [464, -8, 465, -119, 466]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"New Caledonia\"\n                },\n                \"id\": \"NCL\",\n                \"arcs\": [\n                    [467]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Niger\"\n                },\n                \"id\": \"NER\",\n                \"arcs\": [\n                    [-75, -441, -238, -418, 468, -194, 469, -71]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nigeria\"\n                },\n                \"id\": \"NGA\",\n                \"arcs\": [\n                    [470, -72, -470, -193]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nicaragua\"\n                },\n                \"id\": \"NIC\",\n                \"arcs\": [\n                    [471, -324, 472, -213]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Netherlands\"\n                },\n                \"id\": \"NLD\",\n                \"arcs\": [\n                    [-227, -63, 473]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Norway\"\n                },\n                \"id\": \"NOR\",\n                \"arcs\": [\n                    [\n                        [474, -272, 475, 476]\n                    ],\n                    [\n                        [477]\n                    ],\n                    [\n                        [478]\n                    ],\n                    [\n                        [479]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Nepal\"\n                },\n                \"id\": \"NPL\",\n                \"arcs\": [\n                    [-352, -176]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"New Zealand\"\n                },\n                \"id\": \"NZL\",\n                \"arcs\": [\n                    [\n                        [480]\n                    ],\n                    [\n                        [481]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Oman\"\n                },\n                \"id\": \"OMN\",\n                \"arcs\": [\n                    [\n                        [482, 483, -22, 484]\n                    ],\n                    [\n                        [-20, 485]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Pakistan\"\n                },\n                \"id\": \"PAK\",\n                \"arcs\": [\n                    [-178, -355, 486, -358, -5]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Panama\"\n                },\n                \"id\": \"PAN\",\n                \"arcs\": [\n                    [487, -215, 488, -208]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Peru\"\n                },\n                \"id\": \"PER\",\n                \"arcs\": [\n                    [-167, 489, -247, -211, -106, -102]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Philippines\"\n                },\n                \"id\": \"PHL\",\n                \"arcs\": [\n                    [\n                        [490]\n                    ],\n                    [\n                        [491]\n                    ],\n                    [\n                        [492]\n                    ],\n                    [\n                        [493]\n                    ],\n                    [\n                        [494]\n                    ],\n                    [\n                        [495]\n                    ],\n                    [\n                        [496]\n                    ]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Papua New Guinea\"\n                },\n                \"id\": \"PNG\",\n                \"arcs\": [\n                    [\n                        [497]\n                    ],\n                    [\n                        [498]\n                    ],\n                    [\n                        [-345, 499]\n                    ],\n                    [\n                        [500]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Poland\"\n                },\n                \"id\": \"POL\",\n                \"arcs\": [\n                    [-224, 501, 502, -428, -97, 503, 504, -221]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Puerto Rico\"\n                },\n                \"id\": \"PRI\",\n                \"arcs\": [\n                    [505]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"North Korea\"\n                },\n                \"id\": \"PRK\",\n                \"arcs\": [\n                    [506, 507, -405, 508, -169]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Portugal\"\n                },\n                \"id\": \"PRT\",\n                \"arcs\": [\n                    [-259, 509]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Paraguay\"\n                },\n                \"id\": \"PRY\",\n                \"arcs\": [\n                    [-104, -105, -26]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Qatar\"\n                },\n                \"id\": \"QAT\",\n                \"arcs\": [\n                    [510, 511]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Romania\"\n                },\n                \"id\": \"ROU\",\n                \"arcs\": [\n                    [512, -434, 513, 514, -81, 515, -333]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Russia\"\n                },\n                \"id\": \"RUS\",\n                \"arcs\": [\n                    [\n                        [516]\n                    ],\n                    [\n                        [-503, 517, -425]\n                    ],\n                    [\n                        [518, 519]\n                    ],\n                    [\n                        [520]\n                    ],\n                    [\n                        [521]\n                    ],\n                    [\n                        [522]\n                    ],\n                    [\n                        [523]\n                    ],\n                    [\n                        [524]\n                    ],\n                    [\n                        [525]\n                    ],\n                    [\n                        [526, -507, -184, -447, -182, -391, 527, -59, -293, 528, 529, -95, -430, -261, 530, -269, -475, 531, -520]\n                    ],\n                    [\n                        [532]\n                    ],\n                    [\n                        [533]\n                    ],\n                    [\n                        [534]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Rwanda\"\n                },\n                \"id\": \"RWA\",\n                \"arcs\": [\n                    [535, -61, -198, 536]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Western Sahara\"\n                },\n                \"id\": \"ESH\",\n                \"arcs\": [\n                    [-241, -458, 537, -431]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Saudi Arabia\"\n                },\n                \"id\": \"SAU\",\n                \"arcs\": [\n                    [538, -382, -365, -410, 539, -512, 540, -23, -484, 541]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sudan\"\n                },\n                \"id\": \"SDN\",\n                \"arcs\": [\n                    [542, 543, -123, 544, -421, -249, 545, -254, -268, 546]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Sudan\"\n                },\n                \"id\": \"SSD\",\n                \"arcs\": [\n                    [547, -266, -396, 548, -203, -125, 549, -543]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Senegal\"\n                },\n                \"id\": \"SEN\",\n                \"arcs\": [\n                    [550, -456, -442, -301, -306, 551, -304]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Solomon Islands\"\n                },\n                \"id\": \"SLB\",\n                \"arcs\": [\n                    [\n                        [552]\n                    ],\n                    [\n                        [553]\n                    ],\n                    [\n                        [554]\n                    ],\n                    [\n                        [555]\n                    ],\n                    [\n                        [556]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sierra Leone\"\n                },\n                \"id\": \"SLE\",\n                \"arcs\": [\n                    [557, -298, -417]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"El Salvador\"\n                },\n                \"id\": \"SLV\",\n                \"arcs\": [\n                    [558, -317, -322]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somaliland\"\n                },\n                \"id\": \"-99\",\n                \"arcs\": [\n                    [-263, -231, 559, 560]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Somalia\"\n                },\n                \"id\": \"SOM\",\n                \"arcs\": [\n                    [-397, -264, -561, 561]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Republic of Serbia\"\n                },\n                \"id\": \"SRB\",\n                \"arcs\": [\n                    [-86, -439, -407, -446, -90, -325, -334, -516]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Suriname\"\n                },\n                \"id\": \"SUR\",\n                \"arcs\": [\n                    [562, -285, 563, -283, -110, -319]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovakia\"\n                },\n                \"id\": \"SVK\",\n                \"arcs\": [\n                    [-505, 564, -331, -54, -222]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Slovenia\"\n                },\n                \"id\": \"SVN\",\n                \"arcs\": [\n                    [-49, -335, -328, 565, -378]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Sweden\"\n                },\n                \"id\": \"SWE\",\n                \"arcs\": [\n                    [-476, -271, 566]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Swaziland\"\n                },\n                \"id\": \"SWZ\",\n                \"arcs\": [\n                    [567, -451]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Syria\"\n                },\n                \"id\": \"SYR\",\n                \"arcs\": [\n                    [-381, -375, -415, 568, 569, -367]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Chad\"\n                },\n                \"id\": \"TCD\",\n                \"arcs\": [\n                    [-469, -422, -545, -122, -195]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Togo\"\n                },\n                \"id\": \"TGO\",\n                \"arcs\": [\n                    [570, -296, -76, -69]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Thailand\"\n                },\n                \"id\": \"THA\",\n                \"arcs\": [\n                    [571, -462, 572, -444, -411, -400]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tajikistan\"\n                },\n                \"id\": \"TJK\",\n                \"arcs\": [\n                    [-398, -179, -3, 573]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Turkmenistan\"\n                },\n                \"id\": \"TKM\",\n                \"arcs\": [\n                    [-357, 574, -389, 575, -1]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"East Timor\"\n                },\n                \"id\": \"TLS\",\n                \"arcs\": [\n                    [576, -337]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Trinidad and Tobago\"\n                },\n                \"id\": \"TTO\",\n                \"arcs\": [\n                    [577]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Tunisia\"\n                },\n                \"id\": \"TUN\",\n                \"arcs\": [\n                    [-244, 578, -419]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Turkey\"\n                },\n                \"id\": \"TUR\",\n                \"arcs\": [\n                    [\n                        [-294, -36, -361, -368, -570, 579]\n                    ],\n                    [\n                        [-311, -83, 580]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Taiwan\"\n                },\n                \"id\": \"TWN\",\n                \"arcs\": [\n                    [581]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"United Republic of Tanzania\"\n                },\n                \"id\": \"TZA\",\n                \"arcs\": [\n                    [-394, 582, -448, -460, 583, -199, -62, -536, 584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uganda\"\n                },\n                \"id\": \"UGA\",\n                \"arcs\": [\n                    [-537, -197, -549, -395, -585]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Ukraine\"\n                },\n                \"id\": \"UKR\",\n                \"arcs\": [\n                    [-530, 585, -514, -433, -513, -332, -565, -504, -96]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uruguay\"\n                },\n                \"id\": \"URY\",\n                \"arcs\": [\n                    [-113, 586, -28]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"United States of America\"\n                },\n                \"id\": \"USA\",\n                \"arcs\": [\n                    [\n                        [587]\n                    ],\n                    [\n                        [588]\n                    ],\n                    [\n                        [589]\n                    ],\n                    [\n                        [590]\n                    ],\n                    [\n                        [591]\n                    ],\n                    [\n                        [592, -438, 593, -139]\n                    ],\n                    [\n                        [594]\n                    ],\n                    [\n                        [595]\n                    ],\n                    [\n                        [596]\n                    ],\n                    [\n                        [-141, 597]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Uzbekistan\"\n                },\n                \"id\": \"UZB\",\n                \"arcs\": [\n                    [-576, -388, -399, -574, -2]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Venezuela\"\n                },\n                \"id\": \"VEN\",\n                \"arcs\": [\n                    [598, -320, -108, -210]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Vietnam\"\n                },\n                \"id\": \"VNM\",\n                \"arcs\": [\n                    [599, -402, -413, -171]\n                ]\n            }, {\n                \"type\": \"MultiPolygon\",\n                \"properties\": {\n                    \"name\": \"Vanuatu\"\n                },\n                \"id\": \"VUT\",\n                \"arcs\": [\n                    [\n                        [600]\n                    ],\n                    [\n                        [601]\n                    ]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"West Bank\"\n                },\n                \"id\": \"PSE\",\n                \"arcs\": [\n                    [-384, -371]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Yemen\"\n                },\n                \"id\": \"YEM\",\n                \"arcs\": [\n                    [602, -542, -483]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"South Africa\"\n                },\n                \"id\": \"ZAF\",\n                \"arcs\": [\n                    [-467, -118, 603, -452, -568, -450, 604],\n                    [-424]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zambia\"\n                },\n                \"id\": \"ZMB\",\n                \"arcs\": [\n                    [-459, -454, 605, -120, -466, -7, -200, -584]\n                ]\n            }, {\n                \"type\": \"Polygon\",\n                \"properties\": {\n                    \"name\": \"Zimbabwe\"\n                },\n                \"id\": \"ZWE\",\n                \"arcs\": [\n                    [-604, -121, -606, -453]\n                ]\n            }]\n        }\n    },\n    \"arcs\": [\n        [\n            [6700, 7164],\n            [28, -23],\n            [21, 8],\n            [6, 27],\n            [22, 9],\n            [15, 18],\n            [6, 47],\n            [23, 11],\n            [5, 21],\n            [13, -15],\n            [8, -2]\n        ],\n        [\n            [6847, 7265],\n            [16, -1],\n            [20, -12]\n        ],\n        [\n            [6883, 7252],\n            [9, -7],\n            [20, 19],\n            [9, -12],\n            [9, 27],\n            [17, -1],\n            [4, 9],\n            [3, 24],\n            [12, 20],\n            [15, -13],\n            [-3, -18],\n            [9, -3],\n            [-3, -50],\n            [11, -19],\n            [10, 12],\n            [12, 6],\n            [17, 27],\n            [19, -5],\n            [29, 0]\n        ],\n        [\n            [7082, 7268],\n            [5, -17]\n        ],\n        [\n            [7087, 7251],\n            [-16, -6],\n            [-14, -11],\n            [-32, -7],\n            [-30, -13],\n            [-16, -25],\n            [6, -25],\n            [4, -30],\n            [-14, -25],\n            [1, -22],\n            [-8, -22],\n            [-26, 2],\n            [11, -39],\n            [-18, -15],\n            [-12, -35],\n            [2, -36],\n            [-11, -16],\n            [-10, 5],\n            [-22, -8],\n            [-3, -16],\n            [-20, 0],\n            [-16, -34],\n            [-1, -50],\n            [-36, -24],\n            [-19, 5],\n            [-6, -13],\n            [-16, 7],\n            [-28, -8],\n            [-47, 30]\n        ],\n        [\n            [6690, 6820],\n            [25, 53],\n            [-2, 38],\n            [-21, 10],\n            [-2, 38],\n            [-9, 47],\n            [12, 32],\n            [-12, 9],\n            [7, 43],\n            [12, 74]\n        ],\n        [\n            [5664, 4412],\n            [3, -18],\n            [-4, -29],\n            [5, -28],\n            [-4, -22],\n            [3, -20],\n            [-58, 1],\n            [-2, -188],\n            [19, -49],\n            [18, -37]\n        ],\n        [\n            [5644, 4022],\n            [-51, -24],\n            [-67, 9],\n            [-19, 28],\n            [-113, -3],\n            [-4, -4],\n            [-17, 27],\n            [-18, 2],\n            [-16, -10],\n            [-14, -12]\n        ],\n        [\n            [5325, 4035],\n            [-2, 38],\n            [4, 51],\n            [9, 55],\n            [2, 25],\n            [9, 53],\n            [6, 24],\n            [16, 39],\n            [9, 26],\n            [3, 44],\n            [-1, 34],\n            [-9, 21],\n            [-7, 36],\n            [-7, 35],\n            [2, 12],\n            [8, 24],\n            [-8, 57],\n            [-6, 39],\n            [-14, 38],\n            [3, 11]\n        ],\n        [\n            [5342, 4697],\n            [11, 8],\n            [8, -1],\n            [10, 7],\n            [82, -1],\n            [7, -44],\n            [8, -35],\n            [6, -19],\n            [11, -31],\n            [18, 5],\n            [9, 8],\n            [16, -8],\n            [4, 14],\n            [7, 35],\n            [17, 2],\n            [2, 10],\n            [14, 1],\n            [-3, -22],\n            [34, 1],\n            [1, -37],\n            [5, -23],\n            [-4, -36],\n            [2, -36],\n            [9, -22],\n            [-1, -70],\n            [7, 5],\n            [12, -1],\n            [17, 8],\n            [13, -3]\n        ],\n        [\n            [5338, 4715],\n            [-8, 45]\n        ],\n        [\n            [5330, 4760],\n            [12, 25],\n            [8, 10],\n            [10, -20]\n        ],\n        [\n            [5360, 4775],\n            [-10, -12],\n            [-4, -16],\n            [-1, -25],\n            [-7, -7]\n        ],\n        [\n            [5571, 7530],\n            [-3, -20],\n            [4, -25],\n            [11, -15]\n        ],\n        [\n            [5583, 7470],\n            [0, -15],\n            [-9, -9],\n            [-2, -19],\n            [-13, -29]\n        ],\n        [\n            [5559, 7398],\n            [-5, 5],\n            [0, 13],\n            [-15, 19],\n            [-3, 29],\n            [2, 40],\n            [4, 18],\n            [-4, 10]\n        ],\n        [\n            [5538, 7532],\n            [-2, 18],\n            [12, 29],\n            [1, -11],\n            [8, 6]\n        ],\n        [\n            [5557, 7574],\n            [6, -16],\n            [7, -6],\n            [1, -22]\n        ],\n        [\n            [6432, 6490],\n            [5, 3],\n            [1, -16],\n            [22, 9],\n            [23, -2],\n            [17, -1],\n            [19, 39],\n            [20, 38],\n            [18, 37]\n        ],\n        [\n            [6557, 6597],\n            [5, -20]\n        ],\n        [\n            [6562, 6577],\n            [4, -47]\n        ],\n        [\n            [6566, 6530],\n            [-14, 0],\n            [-3, -39],\n            [5, -8],\n            [-12, -12],\n            [0, -24],\n            [-8, -24],\n            [-1, -24]\n        ],\n        [\n            [6533, 6399],\n            [-6, -12],\n            [-83, 29],\n            [-11, 60],\n            [-1, 14]\n        ],\n        [\n            [3140, 1814],\n            [-17, 2],\n            [-30, 0],\n            [0, 132]\n        ],\n        [\n            [3093, 1948],\n            [11, -27],\n            [14, -45],\n            [36, -35],\n            [39, -15],\n            [-13, -30],\n            [-26, -2],\n            [-14, 20]\n        ],\n        [\n            [3258, 3743],\n            [51, -96],\n            [23, -9],\n            [34, -44],\n            [29, -23],\n            [4, -26],\n            [-28, -90],\n            [28, -16],\n            [32, -9],\n            [22, 10],\n            [25, 45],\n            [4, 52]\n        ],\n        [\n            [3482, 3537],\n            [14, 11],\n            [14, -34],\n            [-1, -47],\n            [-23, -33],\n            [-19, -24],\n            [-31, -57],\n            [-37, -81]\n        ],\n        [\n            [3399, 3272],\n            [-7, -47],\n            [-7, -61],\n            [0, -58],\n            [-6, -14],\n            [-2, -38]\n        ],\n        [\n            [3377, 3054],\n            [-2, -31],\n            [35, -50],\n            [-4, -41],\n            [18, -26],\n            [-2, -29],\n            [-26, -75],\n            [-42, -32],\n            [-55, -12],\n            [-31, 6],\n            [6, -36],\n            [-6, -44],\n            [5, -30],\n            [-16, -20],\n            [-29, -8],\n            [-26, 21],\n            [-11, -15],\n            [4, -59],\n            [18, -18],\n            [16, 19],\n            [8, -31],\n            [-26, -18],\n            [-22, -37],\n            [-4, -59],\n            [-7, -32],\n            [-26, 0],\n            [-22, -31],\n            [-8, -44],\n            [28, -43],\n            [26, -12],\n            [-9, -53],\n            [-33, -33],\n            [-18, -70],\n            [-25, -23],\n            [-12, -28],\n            [9, -61],\n            [19, -34],\n            [-12, 3]\n        ],\n        [\n            [3095, 1968],\n            [-26, 9],\n            [-67, 8],\n            [-11, 34],\n            [0, 45],\n            [-18, -4],\n            [-10, 21],\n            [-3, 63],\n            [22, 26],\n            [9, 37],\n            [-4, 30],\n            [15, 51],\n            [10, 78],\n            [-3, 35],\n            [12, 11],\n            [-3, 22],\n            [-13, 12],\n            [10, 25],\n            [-13, 22],\n            [-6, 68],\n            [11, 12],\n            [-5, 72],\n            [7, 61],\n            [7, 52],\n            [17, 22],\n            [-9, 58],\n            [0, 54],\n            [21, 38],\n            [-1, 50],\n            [16, 57],\n            [0, 55],\n            [-7, 11],\n            [-13, 102],\n            [17, 60],\n            [-2, 58],\n            [10, 53],\n            [18, 56],\n            [20, 36],\n            [-9, 24],\n            [6, 19],\n            [-1, 98],\n            [30, 29],\n            [10, 62],\n            [-3, 14]\n        ],\n        [\n            [3136, 3714],\n            [23, 54],\n            [36, -15],\n            [16, -42],\n            [11, 47],\n            [32, -2],\n            [4, -13]\n        ],\n        [\n            [6210, 7485],\n            [39, 9]\n        ],\n        [\n            [6249, 7494],\n            [5, -15],\n            [11, -10],\n            [-6, -15],\n            [15, -21],\n            [-8, -18],\n            [12, -16],\n            [13, -10],\n            [0, -41]\n        ],\n        [\n            [6291, 7348],\n            [-10, -2]\n        ],\n        [\n            [6281, 7346],\n            [-11, 34],\n            [0, 10],\n            [-12, -1],\n            [-9, 16],\n            [-5, -1]\n        ],\n        [\n            [6244, 7404],\n            [-11, 17],\n            [-21, 15],\n            [3, 28],\n            [-5, 21]\n        ],\n        [\n            [3345, 329],\n            [-8, -30],\n            [-8, -27],\n            [-59, 8],\n            [-62, -3],\n            [-34, 20],\n            [0, 2],\n            [-16, 17],\n            [63, -2],\n            [60, -6],\n            [20, 24],\n            [15, 21],\n            [29, -24]\n        ],\n        [\n            [577, 361],\n            [-53, -8],\n            [-36, 21],\n            [-17, 21],\n            [-1, 3],\n            [-18, 16],\n            [17, 22],\n            [52, -9],\n            [28, -18],\n            [21, -21],\n            [7, -27]\n        ],\n        [\n            [3745, 447],\n            [35, -26],\n            [12, -36],\n            [3, -25],\n            [1, -30],\n            [-43, -19],\n            [-45, -15],\n            [-52, -14],\n            [-59, -11],\n            [-65, 3],\n            [-37, 20],\n            [5, 24],\n            [59, 16],\n            [24, 20],\n            [18, 26],\n            [12, 22],\n            [17, 20],\n            [18, 25],\n            [14, 0],\n            [41, 12],\n            [42, -12]\n        ],\n        [\n            [1633, 715],\n            [36, -9],\n            [33, 10],\n            [-16, -20],\n            [-26, -15],\n            [-39, 4],\n            [-27, 21],\n            [6, 20],\n            [33, -11]\n        ],\n        [\n            [1512, 716],\n            [43, -23],\n            [-17, 3],\n            [-36, 5],\n            [-38, 17],\n            [20, 12],\n            [28, -14]\n        ],\n        [\n            [2250, 808],\n            [31, -8],\n            [30, 7],\n            [17, -34],\n            [-22, 5],\n            [-34, -2],\n            [-34, 2],\n            [-38, -4],\n            [-28, 12],\n            [-15, 24],\n            [18, 11],\n            [35, -8],\n            [40, -5]\n        ],\n        [\n            [3098, 866],\n            [4, -27],\n            [-5, -23],\n            [-8, -22],\n            [-33, -8],\n            [-31, -12],\n            [-36, 1],\n            [14, 24],\n            [-33, -9],\n            [-31, -8],\n            [-21, 18],\n            [-2, 24],\n            [30, 23],\n            [20, 7],\n            [32, -2],\n            [8, 30],\n            [1, 22],\n            [0, 47],\n            [16, 28],\n            [25, 9],\n            [15, -22],\n            [6, -22],\n            [12, -26],\n            [10, -26],\n            [7, -26]\n        ],\n        [\n            [3371, 1268],\n            [-11, -13],\n            [-21, 9],\n            [-23, -6],\n            [-19, -14],\n            [-20, -15],\n            [-14, -17],\n            [-4, -23],\n            [2, -22],\n            [13, -20],\n            [-19, -14],\n            [-26, -4],\n            [-15, -20],\n            [-17, -19],\n            [-17, -25],\n            [-4, -22],\n            [9, -24],\n            [15, -19],\n            [23, -14],\n            [21, -18],\n            [12, -23],\n            [6, -22],\n            [8, -24],\n            [13, -19],\n            [8, -22],\n            [4, -55],\n            [8, -22],\n            [2, -23],\n            [9, -23],\n            [-4, -31],\n            [-15, -24],\n            [-17, -20],\n            [-37, -8],\n            [-12, -21],\n            [-17, -20],\n            [-42, -22],\n            [-37, -9],\n            [-35, -13],\n            [-37, -13],\n            [-22, -24],\n            [-45, -2],\n            [-49, 2],\n            [-44, -4],\n            [-47, 0],\n            [9, -24],\n            [42, -10],\n            [31, -16],\n            [18, -21],\n            [-31, -19],\n            [-48, 6],\n            [-40, -15],\n            [-2, -24],\n            [-1, -23],\n            [33, -20],\n            [6, -22],\n            [35, -22],\n            [59, -9],\n            [50, -16],\n            [40, -19],\n            [50, -18],\n            [70, -10],\n            [68, -16],\n            [47, -17],\n            [52, -20],\n            [27, -28],\n            [13, -22],\n            [34, 21],\n            [46, 17],\n            [48, 19],\n            [58, 15],\n            [49, 16],\n            [69, 1],\n            [68, -8],\n            [56, -14],\n            [18, 26],\n            [39, 17],\n            [70, 1],\n            [55, 13],\n            [52, 13],\n            [58, 8],\n            [62, 10],\n            [43, 15],\n            [-20, 21],\n            [-12, 21],\n            [0, 22],\n            [-54, -2],\n            [-57, -10],\n            [-54, 0],\n            [-8, 22],\n            [4, 44],\n            [12, 13],\n            [40, 14],\n            [47, 14],\n            [34, 17],\n            [33, 18],\n            [25, 23],\n            [38, 10],\n            [38, 8],\n            [19, 5],\n            [43, 2],\n            [41, 8],\n            [34, 12],\n            [34, 14],\n            [30, 14],\n            [39, 18],\n            [24, 20],\n            [26, 17],\n            [9, 24],\n            [-30, 13],\n            [10, 25],\n            [18, 18],\n            [29, 12],\n            [31, 14],\n            [28, 18],\n            [22, 23],\n            [13, 28],\n            [21, 16],\n            [33, -3],\n            [13, -20],\n            [34, -2],\n            [1, 22],\n            [14, 23],\n            [30, -6],\n            [7, -22],\n            [33, -3],\n            [36, 10],\n            [35, 7],\n            [31, -3],\n            [12, -25],\n            [31, 20],\n            [28, 10],\n            [31, 9],\n            [31, 8],\n            [29, 14],\n            [31, 9],\n            [24, 13],\n            [17, 20],\n            [20, -15],\n            [29, 8],\n            [20, -27],\n            [16, -21],\n            [32, 11],\n            [12, 24],\n            [28, 16],\n            [37, -4],\n            [11, -22],\n            [22, 22],\n            [30, 7],\n            [33, 3],\n            [29, -2],\n            [31, -7],\n            [30, -3],\n            [13, -20],\n            [18, -17],\n            [31, 10],\n            [32, 3],\n            [32, 0],\n            [31, 1],\n            [28, 8],\n            [29, 7],\n            [25, 16],\n            [26, 11],\n            [28, 5],\n            [21, 17],\n            [15, 32],\n            [16, 20],\n            [29, -10],\n            [11, -21],\n            [24, -13],\n            [29, 4],\n            [19, -21],\n            [21, -15],\n            [28, 14],\n            [10, 26],\n            [25, 10],\n            [29, 20],\n            [27, 8],\n            [33, 11],\n            [22, 13],\n            [22, 14],\n            [22, 13],\n            [26, -7],\n            [25, 21],\n            [18, 16],\n            [26, -1],\n            [23, 14],\n            [6, 21],\n            [23, 16],\n            [23, 11],\n            [28, 10],\n            [25, 4],\n            [25, -3],\n            [26, -6],\n            [22, -16],\n            [3, -26],\n            [24, -19],\n            [17, -17],\n            [33, -7],\n            [19, -16],\n            [23, -16],\n            [26, -3],\n            [23, 11],\n            [24, 24],\n            [26, -12],\n            [27, -7],\n            [26, -7],\n            [27, -5],\n            [28, 0],\n            [23, -61],\n            [-1, -15],\n            [-4, -27],\n            [-26, -15],\n            [-22, -22],\n            [4, -23],\n            [31, 1],\n            [-4, -23],\n            [-14, -22],\n            [-13, -24],\n            [21, -19],\n            [32, -6],\n            [32, 11],\n            [15, 23],\n            [10, 22],\n            [15, 18],\n            [17, 18],\n            [7, 21],\n            [15, 29],\n            [18, 5],\n            [31, 3],\n            [28, 7],\n            [28, 9],\n            [14, 23],\n            [8, 22],\n            [19, 22],\n            [27, 15],\n            [23, 12],\n            [16, 19],\n            [15, 11],\n            [21, 9],\n            [27, -6],\n            [25, 6],\n            [28, 7],\n            [30, -4],\n            [20, 17],\n            [14, 39],\n            [11, -16],\n            [13, -28],\n            [23, -12],\n            [27, -4],\n            [26, 7],\n            [29, -5],\n            [26, -1],\n            [17, 6],\n            [24, -4],\n            [21, -12],\n            [25, 8],\n            [30, 0],\n            [25, 8],\n            [29, -8],\n            [19, 19],\n            [14, 20],\n            [19, 16],\n            [35, 44],\n            [18, -8],\n            [21, -16],\n            [18, -21],\n            [36, -36],\n            [27, -1],\n            [25, 0],\n            [30, 7],\n            [30, 8],\n            [23, 16],\n            [19, 18],\n            [31, 2],\n            [21, 13],\n            [22, -12],\n            [14, -18],\n            [19, -19],\n            [31, 2],\n            [19, -15],\n            [33, -15],\n            [35, -5],\n            [29, 4],\n            [21, 19],\n            [19, 18],\n            [25, 5],\n            [25, -8],\n            [29, -6],\n            [26, 9],\n            [25, 0],\n            [24, -6],\n            [26, -5],\n            [25, 10],\n            [30, 9],\n            [28, 3],\n            [32, 0],\n            [25, 5],\n            [25, 5],\n            [8, 29],\n            [1, 24],\n            [17, -16],\n            [5, -27],\n            [10, -24],\n            [11, -20],\n            [23, -10],\n            [32, 4],\n            [36, 1],\n            [25, 3],\n            [37, 0],\n            [26, 1],\n            [36, -2],\n            [31, -5],\n            [20, -18],\n            [-5, -22],\n            [18, -18],\n            [30, -13],\n            [31, -15],\n            [35, -11],\n            [38, -9],\n            [28, -9],\n            [32, -2],\n            [18, 20],\n            [24, -16],\n            [21, -19],\n            [25, -13],\n            [34, -6],\n            [32, -7],\n            [13, -23],\n            [32, -14],\n            [21, -21],\n            [31, -9],\n            [32, 1],\n            [30, -4],\n            [33, 1],\n            [34, -4],\n            [31, -8],\n            [28, -14],\n            [29, -12],\n            [20, -17],\n            [-3, -23],\n            [-15, -21],\n            [-13, -27],\n            [-9, -21],\n            [-14, -24],\n            [-36, -9],\n            [-16, -21],\n            [-36, -13],\n            [-13, -23],\n            [-19, -22],\n            [-20, -18],\n            [-11, -25],\n            [-7, -22],\n            [-3, -26],\n            [0, -22],\n            [16, -23],\n            [6, -22],\n            [13, -21],\n            [52, -8],\n            [11, -26],\n            [-50, -9],\n            [-43, -13],\n            [-52, -2],\n            [-24, -34],\n            [-5, -27],\n            [-12, -22],\n            [-14, -22],\n            [37, -20],\n            [14, -24],\n            [24, -22],\n            [33, -20],\n            [39, -19],\n            [42, -18],\n            [64, -19],\n            [14, -29],\n            [80, -12],\n            [5, -5],\n            [21, -17],\n            [77, 15],\n            [63, -19],\n            [48, -14],\n            [-9997, -1],\n            [24, 35],\n            [50, -19],\n            [3, 2],\n            [30, 19],\n            [4, 0],\n            [3, -1],\n            [40, -25],\n            [35, 25],\n            [7, 3],\n            [81, 11],\n            [27, -14],\n            [13, -7],\n            [41, -20],\n            [79, -15],\n            [63, -18],\n            [107, -14],\n            [80, 16],\n            [118, -11],\n            [67, -19],\n            [73, 17],\n            [78, 17],\n            [6, 27],\n            [-110, 3],\n            [-89, 14],\n            [-24, 23],\n            [-74, 12],\n            [5, 27],\n            [10, 24],\n            [10, 22],\n            [-5, 25],\n            [-46, 16],\n            [-22, 21],\n            [-43, 18],\n            [68, -3],\n            [64, 9],\n            [40, -20],\n            [50, 18],\n            [45, 22],\n            [23, 19],\n            [-10, 25],\n            [-36, 16],\n            [-41, 17],\n            [-57, 4],\n            [-50, 8],\n            [-54, 6],\n            [-18, 22],\n            [-36, 18],\n            [-21, 21],\n            [-9, 67],\n            [14, -6],\n            [25, -18],\n            [45, 6],\n            [44, 8],\n            [23, -26],\n            [44, 6],\n            [37, 13],\n            [35, 16],\n            [32, 20],\n            [41, 5],\n            [-1, 22],\n            [-9, 22],\n            [8, 21],\n            [36, 11],\n            [16, -20],\n            [42, 12],\n            [32, 15],\n            [40, 1],\n            [38, 6],\n            [37, 13],\n            [30, 13],\n            [34, 13],\n            [22, -4],\n            [19, -4],\n            [41, 8],\n            [37, -10],\n            [38, 1],\n            [37, 8],\n            [37, -6],\n            [41, -6],\n            [39, 3],\n            [40, -2],\n            [42, -1],\n            [38, 3],\n            [28, 17],\n            [34, 9],\n            [35, -13],\n            [33, 11],\n            [30, 21],\n            [18, -19],\n            [9, -21],\n            [18, -19],\n            [29, 17],\n            [33, -22],\n            [38, -7],\n            [32, -16],\n            [39, 3],\n            [36, 11],\n            [41, -3],\n            [38, -8],\n            [38, -10],\n            [15, 25],\n            [-18, 20],\n            [-14, 21],\n            [-36, 5],\n            [-15, 22],\n            [-6, 22],\n            [-10, 43],\n            [21, -8],\n            [36, -3],\n            [36, 3],\n            [33, -9],\n            [28, -17],\n            [12, -21],\n            [38, -4],\n            [36, 9],\n            [38, 11],\n            [34, 7],\n            [28, -14],\n            [37, 5],\n            [24, 45],\n            [23, -27],\n            [32, -10],\n            [34, 6],\n            [23, -23],\n            [37, -3],\n            [33, -7],\n            [34, -12],\n            [21, 22],\n            [11, 20],\n            [28, -23],\n            [38, 6],\n            [28, -13],\n            [19, -19],\n            [37, 5],\n            [29, 13],\n            [29, 15],\n            [33, 8],\n            [39, 7],\n            [36, 8],\n            [27, 13],\n            [16, 19],\n            [7, 25],\n            [-3, 24],\n            [-9, 24],\n            [-10, 23],\n            [-9, 23],\n            [-7, 21],\n            [-1, 23],\n            [2, 23],\n            [13, 22],\n            [11, 24],\n            [5, 23],\n            [-6, 26],\n            [-3, 23],\n            [14, 27],\n            [15, 17],\n            [18, 22],\n            [19, 19],\n            [22, 17],\n            [11, 25],\n            [15, 17],\n            [18, 15],\n            [26, 3],\n            [18, 19],\n            [19, 11],\n            [23, 7],\n            [20, 15],\n            [16, 19],\n            [22, 7],\n            [16, -15],\n            [-10, -20],\n            [-29, -17]\n        ],\n        [\n            [6914, 2185],\n            [18, -19],\n            [26, -7],\n            [1, -11],\n            [-7, -27],\n            [-43, -4],\n            [-1, 31],\n            [4, 25],\n            [2, 12]\n        ],\n        [\n            [9038, 2648],\n            [27, -21],\n            [15, 8],\n            [22, 12],\n            [16, -4],\n            [2, -70],\n            [-9, -21],\n            [-3, -47],\n            [-10, 16],\n            [-19, -41],\n            [-6, 3],\n            [-17, 2],\n            [-17, 50],\n            [-4, 39],\n            [-16, 52],\n            [1, 27],\n            [18, -5]\n        ],\n        [\n            [8987, 4244],\n            [10, -46],\n            [18, 22],\n            [9, -25],\n            [13, -23],\n            [-3, -26],\n            [6, -51],\n            [5, -29],\n            [7, -7],\n            [7, -51],\n            [-3, -30],\n            [9, -40],\n            [31, -31],\n            [19, -28],\n            [19, -26],\n            [-4, -14],\n            [16, -37],\n            [11, -64],\n            [11, 13],\n            [11, -26],\n            [7, 9],\n            [5, -63],\n            [19, -36],\n            [13, -22],\n            [22, -48],\n            [8, -48],\n            [1, -33],\n            [-2, -37],\n            [13, -50],\n            [-2, -52],\n            [-5, -28],\n            [-7, -52],\n            [1, -34],\n            [-6, -43],\n            [-12, -53],\n            [-21, -29],\n            [-10, -46],\n            [-9, -29],\n            [-8, -51],\n            [-11, -30],\n            [-7, -44],\n            [-4, -41],\n            [2, -18],\n            [-16, -21],\n            [-31, -2],\n            [-26, -24],\n            [-13, -23],\n            [-17, -26],\n            [-23, 27],\n            [-17, 10],\n            [5, 31],\n            [-15, -11],\n            [-25, -43],\n            [-24, 16],\n            [-15, 9],\n            [-16, 4],\n            [-27, 17],\n            [-18, 37],\n            [-5, 45],\n            [-7, 30],\n            [-13, 24],\n            [-27, 7],\n            [9, 28],\n            [-7, 44],\n            [-13, -41],\n            [-25, -11],\n            [14, 33],\n            [5, 34],\n            [10, 29],\n            [-2, 44],\n            [-22, -50],\n            [-18, -21],\n            [-10, -47],\n            [-22, 25],\n            [1, 31],\n            [-18, 43],\n            [-14, 22],\n            [5, 14],\n            [-36, 35],\n            [-19, 2],\n            [-27, 29],\n            [-50, -6],\n            [-36, -21],\n            [-31, -20],\n            [-27, 4],\n            [-29, -30],\n            [-24, -14],\n            [-6, -31],\n            [-10, -24],\n            [-23, -1],\n            [-18, -5],\n            [-24, 10],\n            [-20, -6],\n            [-19, -3],\n            [-17, -31],\n            [-8, 2],\n            [-14, -16],\n            [-13, -19],\n            [-21, 2],\n            [-18, 0],\n            [-30, 38],\n            [-15, 11],\n            [1, 34],\n            [14, 8],\n            [4, 14],\n            [-1, 21],\n            [4, 41],\n            [-3, 35],\n            [-15, 60],\n            [-4, 33],\n            [1, 34],\n            [-11, 38],\n            [-1, 18],\n            [-12, 23],\n            [-4, 47],\n            [-16, 46],\n            [-4, 26],\n            [13, -26],\n            [-10, 55],\n            [14, -17],\n            [8, -23],\n            [0, 30],\n            [-14, 47],\n            [-3, 18],\n            [-6, 18],\n            [3, 34],\n            [6, 15],\n            [4, 29],\n            [-3, 35],\n            [11, 42],\n            [2, -45],\n            [12, 41],\n            [22, 20],\n            [14, 25],\n            [21, 22],\n            [13, 4],\n            [7, -7],\n            [22, 22],\n            [17, 6],\n            [4, 13],\n            [8, 6],\n            [15, -2],\n            [29, 18],\n            [15, 26],\n            [7, 31],\n            [17, 30],\n            [1, 24],\n            [1, 32],\n            [19, 50],\n            [12, -51],\n            [12, 12],\n            [-10, 28],\n            [9, 29],\n            [12, -13],\n            [3, 45],\n            [15, 29],\n            [7, 23],\n            [14, 10],\n            [0, 17],\n            [13, -7],\n            [0, 15],\n            [12, 8],\n            [14, 8],\n            [20, -27],\n            [16, -35],\n            [17, 0],\n            [18, -6],\n            [-6, 33],\n            [13, 47],\n            [13, 15],\n            [-5, 15],\n            [12, 34],\n            [17, 21],\n            [14, -7],\n            [24, 11],\n            [-1, 30],\n            [-20, 19],\n            [15, 9],\n            [18, -15],\n            [15, -24],\n            [23, -15],\n            [8, 6],\n            [17, -18],\n            [17, 17],\n            [10, -5],\n            [7, 11],\n            [12, -29],\n            [-7, -32],\n            [-11, -24],\n            [-9, -2],\n            [3, -23],\n            [-8, -30],\n            [-10, -29],\n            [2, -17],\n            [22, -32],\n            [21, -19],\n            [15, -20],\n            [20, -35],\n            [8, 0],\n            [14, -15],\n            [4, -19],\n            [27, -20],\n            [18, 20],\n            [6, 32],\n            [5, 26],\n            [4, 33],\n            [8, 47],\n            [-4, 28],\n            [2, 17],\n            [-3, 34],\n            [4, 45],\n            [5, 12],\n            [-4, 20],\n            [7, 31],\n            [5, 32],\n            [1, 17],\n            [10, 22],\n            [8, -29],\n            [2, -37],\n            [7, -7],\n            [1, -25],\n            [10, -30],\n            [2, -33],\n            [-1, -22]\n        ],\n        [\n            [5471, 7900],\n            [-2, -24],\n            [-16, 0],\n            [6, -13],\n            [-9, -38]\n        ],\n        [\n            [5450, 7825],\n            [-6, -10],\n            [-24, -1],\n            [-14, -13],\n            [-23, 4]\n        ],\n        [\n            [5383, 7805],\n            [-40, 15],\n            [-6, 21],\n            [-27, -10],\n            [-4, -12],\n            [-16, 9]\n        ],\n        [\n            [5290, 7828],\n            [-15, 1],\n            [-12, 11],\n            [4, 15],\n            [-1, 10]\n        ],\n        [\n            [5266, 7865],\n            [8, 3],\n            [14, -16],\n            [4, 16],\n            [25, -3],\n            [20, 11],\n            [13, -2],\n            [9, -12],\n            [2, 10],\n            [-4, 38],\n            [10, 8],\n            [10, 27]\n        ],\n        [\n            [5377, 7945],\n            [21, -19],\n            [15, 24],\n            [10, 5],\n            [22, -18],\n            [13, 3],\n            [13, -12]\n        ],\n        [\n            [5471, 7928],\n            [-3, -7],\n            [3, -21]\n        ],\n        [\n            [6281, 7346],\n            [-19, 8],\n            [-14, 27],\n            [-4, 23]\n        ],\n        [\n            [6349, 7527],\n            [15, -31],\n            [14, -42],\n            [13, -2],\n            [8, -16],\n            [-23, -5],\n            [-5, -46],\n            [-4, -21],\n            [-11, -13],\n            [1, -30]\n        ],\n        [\n            [6357, 7321],\n            [-7, -3],\n            [-17, 31],\n            [10, 30],\n            [-9, 17],\n            [-10, -4],\n            [-33, -44]\n        ],\n        [\n            [6249, 7494],\n            [6, 10],\n            [21, -17],\n            [15, -4],\n            [4, 7],\n            [-14, 32],\n            [7, 9]\n        ],\n        [\n            [6288, 7531],\n            [8, -2],\n            [19, -36],\n            [13, -4],\n            [4, 15],\n            [17, 23]\n        ],\n        [\n            [5814, 4792],\n            [-1, 71],\n            [-7, 27]\n        ],\n        [\n            [5806, 4890],\n            [17, -5],\n            [8, 34],\n            [15, -4]\n        ],\n        [\n            [5846, 4915],\n            [1, -23],\n            [6, -14],\n            [1, -19],\n            [-7, -12],\n            [-11, -31],\n            [-10, -22],\n            [-12, -2]\n        ],\n        [\n            [5092, 8091],\n            [20, -5],\n            [26, 12],\n            [17, -25],\n            [16, -14]\n        ],\n        [\n            [5171, 8059],\n            [-4, -40]\n        ],\n        [\n            [5167, 8019],\n            [-7, -2],\n            [-3, -33]\n        ],\n        [\n            [5157, 7984],\n            [-24, 26],\n            [-14, -4],\n            [-20, 28],\n            [-13, 23],\n            [-13, 1],\n            [-4, 21]\n        ],\n        [\n            [5069, 8079],\n            [23, 12]\n        ],\n        [\n            [5074, 5427],\n            [-23, -7]\n        ],\n        [\n            [5051, 5420],\n            [-7, 41],\n            [2, 136],\n            [-6, 12],\n            [-1, 29],\n            [-10, 21],\n            [-8, 17],\n            [3, 31]\n        ],\n        [\n            [5024, 5707],\n            [10, 7],\n            [6, 26],\n            [13, 5],\n            [6, 18]\n        ],\n        [\n            [5059, 5763],\n            [10, 17],\n            [10, 0],\n            [21, -34]\n        ],\n        [\n            [5100, 5746],\n            [-1, -19],\n            [6, -35],\n            [-6, -24],\n            [3, -16],\n            [-13, -37],\n            [-9, -18],\n            [-5, -37],\n            [1, -38],\n            [-2, -95]\n        ],\n        [\n            [4921, 5627],\n            [-19, 15],\n            [-13, -2],\n            [-10, -15],\n            [-12, 13],\n            [-5, 19],\n            [-13, 13]\n        ],\n        [\n            [4849, 5670],\n            [-1, 34],\n            [7, 26],\n            [-1, 20],\n            [23, 48],\n            [4, 41],\n            [7, 14],\n            [14, -8],\n            [11, 12],\n            [4, 16],\n            [22, 26],\n            [5, 19],\n            [26, 24],\n            [15, 9],\n            [7, -12],\n            [18, 0]\n        ],\n        [\n            [5010, 5939],\n            [-2, -28],\n            [3, -27],\n            [16, -39],\n            [1, -28],\n            [32, -14],\n            [-1, -40]\n        ],\n        [\n            [5024, 5707],\n            [-24, 1]\n        ],\n        [\n            [5000, 5708],\n            [-13, 5],\n            [-9, -9],\n            [-12, 4],\n            [-48, -3],\n            [-1, -33],\n            [4, -45]\n        ],\n        [\n            [7573, 6360],\n            [0, -43],\n            [-10, 9],\n            [2, -47]\n        ],\n        [\n            [7565, 6279],\n            [-8, 30],\n            [-1, 31],\n            [-6, 28],\n            [-11, 34],\n            [-26, 3],\n            [3, -25],\n            [-9, -32],\n            [-12, 12],\n            [-4, -11],\n            [-8, 6],\n            [-11, 5]\n        ],\n        [\n            [7472, 6360],\n            [-4, 49],\n            [-10, 45],\n            [5, 35],\n            [-17, 16],\n            [6, 22],\n            [18, 22],\n            [-20, 31],\n            [9, 40],\n            [22, -26],\n            [14, -3],\n            [2, -41],\n            [26, -8],\n            [26, 1],\n            [16, -10],\n            [-13, -50],\n            [-12, -3],\n            [-9, -34],\n            [16, -31],\n            [4, 38],\n            [8, 0],\n            [14, -93]\n        ],\n        [\n            [5629, 7671],\n            [8, -25],\n            [11, 5],\n            [21, -9],\n            [41, -4],\n            [13, 16],\n            [33, 13],\n            [20, -21],\n            [17, -6]\n        ],\n        [\n            [5793, 7640],\n            [-15, -25],\n            [-10, -42],\n            [9, -34]\n        ],\n        [\n            [5777, 7539],\n            [-24, 8],\n            [-28, -18]\n        ],\n        [\n            [5725, 7529],\n            [0, -30],\n            [-26, -5],\n            [-19, 20],\n            [-22, -16],\n            [-21, 2]\n        ],\n        [\n            [5637, 7500],\n            [-2, 39],\n            [-14, 19]\n        ],\n        [\n            [5621, 7558],\n            [5, 8],\n            [-3, 7],\n            [4, 19],\n            [11, 18],\n            [-14, 26],\n            [-2, 21],\n            [7, 14]\n        ],\n        [\n            [2846, 6461],\n            [-7, -3],\n            [-7, 34],\n            [-10, 17],\n            [6, 38],\n            [8, -3],\n            [10, -49],\n            [0, -34]\n        ],\n        [\n            [2838, 6628],\n            [-30, -10],\n            [-2, 22],\n            [13, 5],\n            [18, -2],\n            [1, -15]\n        ],\n        [\n            [2861, 6628],\n            [-5, -42],\n            [-5, 8],\n            [0, 31],\n            [-12, 23],\n            [0, 7],\n            [22, -27]\n        ],\n        [\n            [5527, 7708],\n            [10, 0],\n            [-7, -26],\n            [14, -23],\n            [-4, -28],\n            [-7, -2]\n        ],\n        [\n            [5533, 7629],\n            [-5, -6],\n            [-9, -13],\n            [-4, -33]\n        ],\n        [\n            [5515, 7577],\n            [-25, 23],\n            [-10, 24],\n            [-11, 13],\n            [-12, 22],\n            [-6, 19],\n            [-14, 27],\n            [6, 25],\n            [10, -14],\n            [6, 12],\n            [13, 2],\n            [24, -10],\n            [19, 1],\n            [12, -13]\n        ],\n        [\n            [5652, 8242],\n            [27, 0],\n            [30, 22],\n            [6, 34],\n            [23, 19],\n            [-3, 26]\n        ],\n        [\n            [5735, 8343],\n            [17, 10],\n            [30, 23]\n        ],\n        [\n            [5782, 8376],\n            [29, -15],\n            [4, -15],\n            [15, 7],\n            [27, -14],\n            [3, -27],\n            [-6, -16],\n            [17, -39],\n            [12, -11],\n            [-2, -11],\n            [19, -10],\n            [8, -16],\n            [-11, -13],\n            [-23, 2],\n            [-5, -5],\n            [7, -20],\n            [6, -37]\n        ],\n        [\n            [5882, 8136],\n            [-23, -4],\n            [-9, -13],\n            [-2, -30],\n            [-11, 6],\n            [-25, -3],\n            [-7, 14],\n            [-11, -10],\n            [-10, 8],\n            [-22, 1],\n            [-31, 15],\n            [-28, 4],\n            [-22, -1],\n            [-15, -16],\n            [-13, -2]\n        ],\n        [\n            [5653, 8105],\n            [-1, 26],\n            [-8, 27],\n            [17, 12],\n            [0, 24],\n            [-8, 22],\n            [-1, 26]\n        ],\n        [\n            [2524, 6110],\n            [-1, 8],\n            [4, 3],\n            [5, -7],\n            [10, 36],\n            [5, 0]\n        ],\n        [\n            [2547, 6150],\n            [0, -8],\n            [5, -1],\n            [0, -16],\n            [-5, -25],\n            [3, -9],\n            [-3, -21],\n            [2, -6],\n            [-4, -30],\n            [-5, -16],\n            [-5, -1],\n            [-6, -21]\n        ],\n        [\n            [2529, 5996],\n            [-8, 0],\n            [2, 67],\n            [1, 47]\n        ],\n        [\n            [3136, 3714],\n            [-20, -8],\n            [-11, 82],\n            [-15, 66],\n            [9, 57],\n            [-15, 25],\n            [-4, 43],\n            [-13, 40]\n        ],\n        [\n            [3067, 4019],\n            [17, 64],\n            [-12, 49],\n            [7, 20],\n            [-5, 22],\n            [10, 30],\n            [1, 50],\n            [1, 41],\n            [6, 20],\n            [-24, 96]\n        ],\n        [\n            [3068, 4411],\n            [21, -5],\n            [14, 1],\n            [6, 18],\n            [25, 24],\n            [14, 22],\n            [37, 10],\n            [-3, -44],\n            [3, -23],\n            [-2, -40],\n            [30, -53],\n            [31, -9],\n            [11, -23],\n            [19, -11],\n            [11, -17],\n            [18, 0],\n            [16, -17],\n            [1, -34],\n            [6, -18],\n            [0, -25],\n            [-8, -1],\n            [11, -69],\n            [53, -2],\n            [-4, -35],\n            [3, -23],\n            [15, -16],\n            [6, -37],\n            [-4, -47],\n            [-8, -26],\n            [3, -33],\n            [-9, -12]\n        ],\n        [\n            [3384, 3866],\n            [-1, 18],\n            [-25, 30],\n            [-26, 1],\n            [-49, -17],\n            [-13, -52],\n            [-1, -32],\n            [-11, -71]\n        ],\n        [\n            [3482, 3537],\n            [6, 34],\n            [3, 35],\n            [1, 32],\n            [-10, 11],\n            [-11, -9],\n            [-10, 2],\n            [-4, 23],\n            [-2, 54],\n            [-5, 18],\n            [-19, 16],\n            [-11, -12],\n            [-30, 11],\n            [2, 81],\n            [-8, 33]\n        ],\n        [\n            [3068, 4411],\n            [-15, -11],\n            [-13, 7],\n            [2, 90],\n            [-23, -35],\n            [-24, 2],\n            [-11, 31],\n            [-18, 4],\n            [5, 25],\n            [-15, 36],\n            [-11, 53],\n            [7, 11],\n            [0, 25],\n            [17, 17],\n            [-3, 32],\n            [7, 20],\n            [2, 28],\n            [32, 40],\n            [22, 11],\n            [4, 9],\n            [25, -2]\n        ],\n        [\n            [3058, 4804],\n            [13, 162],\n            [0, 25],\n            [-4, 34],\n            [-12, 22],\n            [0, 42],\n            [15, 10],\n            [6, -6],\n            [1, 23],\n            [-16, 6],\n            [-1, 37],\n            [54, -2],\n            [10, 21],\n            [7, -19],\n            [6, -35],\n            [5, 8]\n        ],\n        [\n            [3142, 5132],\n            [15, -32],\n            [22, 4],\n            [5, 18],\n            [21, 14],\n            [11, 10],\n            [4, 25],\n            [19, 17],\n            [-1, 12],\n            [-24, 5],\n            [-3, 37],\n            [1, 40],\n            [-13, 15],\n            [5, 6],\n            [21, -8],\n            [22, -15],\n            [8, 14],\n            [20, 9],\n            [31, 23],\n            [10, 22],\n            [-3, 17]\n        ],\n        [\n            [3313, 5365],\n            [14, 2],\n            [7, -13],\n            [-4, -26],\n            [9, -9],\n            [7, -28],\n            [-8, -20],\n            [-4, -51],\n            [7, -30],\n            [2, -27],\n            [17, -28],\n            [14, -3],\n            [3, 12],\n            [8, 3],\n            [13, 10],\n            [9, 16],\n            [15, -5],\n            [7, 2]\n        ],\n        [\n            [3429, 5170],\n            [15, -5],\n            [3, 12],\n            [-5, 12],\n            [3, 17],\n            [11, -5],\n            [13, 6],\n            [16, -13]\n        ],\n        [\n            [3485, 5194],\n            [12, -12],\n            [9, 16],\n            [6, -3],\n            [4, -16],\n            [13, 4],\n            [11, 22],\n            [8, 44],\n            [17, 54]\n        ],\n        [\n            [3565, 5303],\n            [9, 3],\n            [7, -33],\n            [16, -103],\n            [14, -10],\n            [1, -41],\n            [-21, -48],\n            [9, -18],\n            [49, -9],\n            [1, -60],\n            [21, 39],\n            [35, -21],\n            [46, -36],\n            [14, -35],\n            [-5, -32],\n            [33, 18],\n            [54, -32],\n            [41, 3],\n            [41, -49],\n            [36, -66],\n            [21, -17],\n            [24, -3],\n            [10, -18],\n            [9, -76],\n            [5, -35],\n            [-11, -98],\n            [-14, -39],\n            [-39, -82],\n            [-18, -67],\n            [-21, -51],\n            [-7, -1],\n            [-7, -43],\n            [2, -111],\n            [-8, -91],\n            [-3, -39],\n            [-9, -23],\n            [-5, -79],\n            [-28, -77],\n            [-5, -61],\n            [-22, -26],\n            [-7, -35],\n            [-30, 0],\n            [-44, -23],\n            [-19, -26],\n            [-31, -18],\n            [-33, -47],\n            [-23, -58],\n            [-5, -44],\n            [5, -33],\n            [-5, -60],\n            [-6, -28],\n            [-20, -33],\n            [-31, -104],\n            [-24, -47],\n            [-19, -27],\n            [-13, -57],\n            [-18, -33]\n        ],\n        [\n            [3517, 3063],\n            [-8, 33],\n            [13, 28],\n            [-16, 40],\n            [-22, 33],\n            [-29, 38],\n            [-10, -2],\n            [-28, 46],\n            [-18, -7]\n        ],\n        [\n            [8172, 5325],\n            [11, 22],\n            [23, 32]\n        ],\n        [\n            [8206, 5379],\n            [-1, -29],\n            [-2, -37],\n            [-13, 1],\n            [-6, -20],\n            [-12, 31]\n        ],\n        [\n            [7546, 6698],\n            [12, -19],\n            [-2, -36],\n            [-23, -2],\n            [-23, 4],\n            [-18, -9],\n            [-25, 22],\n            [-1, 12]\n        ],\n        [\n            [7466, 6670],\n            [19, 44],\n            [15, 15],\n            [20, -14],\n            [14, -1],\n            [12, -16]\n        ],\n        [\n            [5817, 3752],\n            [-39, -43],\n            [-25, -44],\n            [-10, -40],\n            [-8, -22],\n            [-15, -4],\n            [-5, -29],\n            [-3, -18],\n            [-17, -14],\n            [-23, 3],\n            [-13, 17],\n            [-12, 7],\n            [-14, -14],\n            [-6, -28],\n            [-14, -18],\n            [-13, -26],\n            [-20, -6],\n            [-6, 20],\n            [2, 36],\n            [-16, 56],\n            [-8, 9]\n        ],\n        [\n            [5552, 3594],\n            [0, 173],\n            [27, 2],\n            [1, 210],\n            [21, 2],\n            [43, 21],\n            [10, -24],\n            [18, 23],\n            [9, 0],\n            [15, 13]\n        ],\n        [\n            [5696, 4014],\n            [5, -4]\n        ],\n        [\n            [5701, 4010],\n            [11, -48],\n            [5, -10],\n            [9, -34],\n            [32, -65],\n            [12, -7],\n            [0, -20],\n            [8, -38],\n            [21, -9],\n            [18, -27]\n        ],\n        [\n            [5424, 5496],\n            [23, 4],\n            [5, 16],\n            [5, -2],\n            [7, -13],\n            [34, 23],\n            [12, 23],\n            [15, 20],\n            [-3, 21],\n            [8, 6],\n            [27, -4],\n            [26, 27],\n            [20, 65],\n            [14, 24],\n            [18, 10]\n        ],\n        [\n            [5635, 5716],\n            [3, -26],\n            [16, -36],\n            [0, -25],\n            [-5, -24],\n            [2, -18],\n            [10, -18]\n        ],\n        [\n            [5661, 5569],\n            [21, -25]\n        ],\n        [\n            [5682, 5544],\n            [15, -24],\n            [0, -19],\n            [19, -31],\n            [12, -26],\n            [7, -35],\n            [20, -24],\n            [5, -18]\n        ],\n        [\n            [5760, 5367],\n            [-9, -7],\n            [-18, 2],\n            [-21, 6],\n            [-10, -5],\n            [-5, -14],\n            [-9, -2],\n            [-10, 12],\n            [-31, -29],\n            [-13, 6],\n            [-4, -5],\n            [-8, -35],\n            [-21, 11],\n            [-20, 6],\n            [-18, 22],\n            [-23, 20],\n            [-15, -19],\n            [-10, -30],\n            [-3, -41]\n        ],\n        [\n            [5512, 5265],\n            [-18, 3],\n            [-19, 10],\n            [-16, -32],\n            [-15, -55]\n        ],\n        [\n            [5444, 5191],\n            [-3, 18],\n            [-1, 27],\n            [-13, 19],\n            [-10, 30],\n            [-2, 21],\n            [-13, 31],\n            [2, 18],\n            [-3, 25],\n            [2, 45],\n            [7, 11],\n            [14, 60]\n        ],\n        [\n            [3231, 7808],\n            [20, -8],\n            [26, 1],\n            [-14, -24],\n            [-10, -4],\n            [-35, 25],\n            [-7, 20],\n            [10, 18],\n            [10, -28]\n        ],\n        [\n            [3283, 7958],\n            [-14, -1],\n            [-36, 19],\n            [-26, 28],\n            [10, 5],\n            [37, -15],\n            [28, -25],\n            [1, -11]\n        ],\n        [\n            [1569, 7923],\n            [-14, -8],\n            [-46, 27],\n            [-8, 21],\n            [-25, 21],\n            [-5, 16],\n            [-28, 11],\n            [-11, 32],\n            [2, 14],\n            [30, -13],\n            [17, -9],\n            [26, -6],\n            [9, -21],\n            [14, -28],\n            [28, -24],\n            [11, -33]\n        ],\n        [\n            [3440, 8052],\n            [-18, -52],\n            [18, 20],\n            [19, -12],\n            [-10, -21],\n            [25, -16],\n            [12, 14],\n            [28, -18],\n            [-8, -43],\n            [19, 10],\n            [4, -32],\n            [8, -36],\n            [-11, -52],\n            [-13, -2],\n            [-18, 11],\n            [6, 48],\n            [-8, 8],\n            [-32, -52],\n            [-17, 2],\n            [20, 28],\n            [-27, 14],\n            [-30, -3],\n            [-54, 2],\n            [-4, 17],\n            [17, 21],\n            [-12, 16],\n            [24, 36],\n            [28, 94],\n            [18, 33],\n            [24, 21],\n            [13, -3],\n            [-6, -16],\n            [-15, -37]\n        ],\n        [\n            [1313, 8250],\n            [27, 5],\n            [-8, -67],\n            [24, -48],\n            [-11, 0],\n            [-17, 27],\n            [-10, 27],\n            [-14, 19],\n            [-5, 26],\n            [1, 19],\n            [13, -8]\n        ],\n        [\n            [2798, 8730],\n            [-11, -31],\n            [-12, 5],\n            [-8, 17],\n            [2, 4],\n            [10, 18],\n            [12, -1],\n            [7, -12]\n        ],\n        [\n            [2725, 8762],\n            [-33, -32],\n            [-19, 1],\n            [-6, 16],\n            [20, 27],\n            [38, 0],\n            [0, -12]\n        ],\n        [\n            [2634, 8936],\n            [5, -26],\n            [15, 9],\n            [16, -15],\n            [30, -20],\n            [32, -19],\n            [2, -28],\n            [21, 5],\n            [20, -20],\n            [-25, -18],\n            [-43, 14],\n            [-16, 26],\n            [-27, -31],\n            [-40, -31],\n            [-9, 35],\n            [-38, -6],\n            [24, 30],\n            [4, 46],\n            [9, 54],\n            [20, -5]\n        ],\n        [\n            [2892, 9024],\n            [-31, -3],\n            [-7, 29],\n            [12, 34],\n            [26, 8],\n            [21, -17],\n            [1, -25],\n            [-4, -8],\n            [-18, -18]\n        ],\n        [\n            [2343, 9140],\n            [-17, -21],\n            [-38, 18],\n            [-22, -6],\n            [-38, 26],\n            [24, 19],\n            [19, 25],\n            [30, -16],\n            [17, -11],\n            [8, -11],\n            [17, -23]\n        ],\n        [\n            [3135, 7724],\n            [-18, 33],\n            [0, 81],\n            [-13, 17],\n            [-18, -10],\n            [-10, 16],\n            [-21, -45],\n            [-8, -46],\n            [-10, -27],\n            [-12, -9],\n            [-9, -3],\n            [-3, -15],\n            [-51, 0],\n            [-42, 0],\n            [-12, -11],\n            [-30, -42],\n            [-3, -5],\n            [-9, -23],\n            [-26, 0],\n            [-27, 0],\n            [-12, -10],\n            [4, -11],\n            [2, -18],\n            [0, -6],\n            [-36, -30],\n            [-29, -9],\n            [-32, -31],\n            [-7, 0],\n            [-10, 9],\n            [-3, 8],\n            [1, 6],\n            [6, 21],\n            [13, 33],\n            [8, 35],\n            [-5, 51],\n            [-6, 53],\n            [-29, 28],\n            [3, 11],\n            [-4, 7],\n            [-8, 0],\n            [-5, 9],\n            [-2, 14],\n            [-5, -6],\n            [-7, 2],\n            [1, 6],\n            [-6, 6],\n            [-3, 15],\n            [-21, 19],\n            [-23, 20],\n            [-27, 23],\n            [-26, 21],\n            [-25, -17],\n            [-9, 0],\n            [-34, 15],\n            [-23, -8],\n            [-27, 19],\n            [-28, 9],\n            [-19, 4],\n            [-9, 10],\n            [-5, 32],\n            [-9, 0],\n            [-1, -23],\n            [-57, 0],\n            [-95, 0],\n            [-94, 0],\n            [-84, 0],\n            [-83, 0],\n            [-82, 0],\n            [-85, 0],\n            [-27, 0],\n            [-82, 0],\n            [-79, 0]\n        ],\n        [\n            [1588, 7952],\n            [-4, 0],\n            [-54, 58],\n            [-20, 26],\n            [-50, 24],\n            [-15, 53],\n            [3, 36],\n            [-35, 25],\n            [-5, 48],\n            [-34, 43],\n            [0, 30]\n        ],\n        [\n            [1374, 8295],\n            [15, 29],\n            [0, 37],\n            [-48, 37],\n            [-28, 68],\n            [-17, 42],\n            [-26, 27],\n            [-19, 24],\n            [-14, 31],\n            [-28, -20],\n            [-27, -33],\n            [-25, 39],\n            [-19, 26],\n            [-27, 16],\n            [-28, 2],\n            [0, 337],\n            [1, 219]\n        ],\n        [\n            [1084, 9176],\n            [51, -14],\n            [44, -29],\n            [29, -5],\n            [24, 24],\n            [34, 19],\n            [41, -7],\n            [42, 26],\n            [45, 14],\n            [20, -24],\n            [20, 14],\n            [6, 27],\n            [20, -6],\n            [47, -53],\n            [37, 40],\n            [3, -45],\n            [34, 10],\n            [11, 17],\n            [34, -3],\n            [42, -25],\n            [65, -22],\n            [38, -10],\n            [28, 4],\n            [37, -30],\n            [-39, -29],\n            [50, -13],\n            [75, 7],\n            [24, 11],\n            [29, -36],\n            [31, 30],\n            [-29, 25],\n            [18, 20],\n            [34, 3],\n            [22, 6],\n            [23, -14],\n            [28, -32],\n            [31, 5],\n            [49, -27],\n            [43, 9],\n            [40, -1],\n            [-3, 37],\n            [25, 10],\n            [43, -20],\n            [0, -56],\n            [17, 47],\n            [23, -1],\n            [12, 59],\n            [-30, 36],\n            [-32, 24],\n            [2, 65],\n            [33, 43],\n            [37, -9],\n            [28, -26],\n            [38, -67],\n            [-25, -29],\n            [52, -12],\n            [-1, -60],\n            [38, 46],\n            [33, -38],\n            [-9, -44],\n            [27, -40],\n            [29, 43],\n            [21, 51],\n            [1, 65],\n            [40, -5],\n            [41, -8],\n            [37, -30],\n            [2, -29],\n            [-21, -31],\n            [20, -32],\n            [-4, -29],\n            [-54, -41],\n            [-39, -9],\n            [-29, 18],\n            [-8, -30],\n            [-27, -50],\n            [-8, -26],\n            [-32, -40],\n            [-40, -4],\n            [-22, -25],\n            [-2, -38],\n            [-32, -7],\n            [-34, -48],\n            [-30, -67],\n            [-11, -46],\n            [-1, -69],\n            [40, -10],\n            [13, -55],\n            [13, -45],\n            [39, 12],\n            [51, -26],\n            [28, -22],\n            [20, -28],\n            [35, -17],\n            [29, -24],\n            [46, -4],\n            [30, -6],\n            [-4, -51],\n            [8, -59],\n            [21, -66],\n            [41, -56],\n            [21, 19],\n            [15, 61],\n            [-14, 93],\n            [-20, 31],\n            [45, 28],\n            [31, 41],\n            [16, 41],\n            [-3, 40],\n            [-19, 50],\n            [-33, 44],\n            [32, 62],\n            [-12, 54],\n            [-9, 92],\n            [19, 14],\n            [48, -16],\n            [29, -6],\n            [23, 15],\n            [25, -20],\n            [35, -34],\n            [8, -23],\n            [50, -4],\n            [-1, -50],\n            [9, -74],\n            [25, -10],\n            [21, -35],\n            [40, 33],\n            [26, 65],\n            [19, 28],\n            [21, -53],\n            [36, -75],\n            [31, -71],\n            [-11, -37],\n            [37, -33],\n            [25, -34],\n            [44, -15],\n            [18, -19],\n            [11, -50],\n            [22, -8],\n            [11, -22],\n            [2, -67],\n            [-20, -22],\n            [-20, -21],\n            [-46, -21],\n            [-35, -48],\n            [-47, -10],\n            [-59, 13],\n            [-42, 0],\n            [-29, -4],\n            [-23, -43],\n            [-35, -26],\n            [-40, -78],\n            [-32, -54],\n            [23, 9],\n            [45, 78],\n            [58, 49],\n            [42, 6],\n            [24, -29],\n            [-26, -40],\n            [9, -63],\n            [9, -45],\n            [36, -29],\n            [46, 8],\n            [28, 67],\n            [2, -43],\n            [17, -22],\n            [-34, -38],\n            [-61, -36],\n            [-28, -23],\n            [-31, -43],\n            [-21, 4],\n            [-1, 50],\n            [48, 49],\n            [-44, -2],\n            [-31, -7]\n        ],\n        [\n            [1829, 9377],\n            [-14, -27],\n            [61, 17],\n            [39, -29],\n            [31, 30],\n            [26, -20],\n            [23, -58],\n            [14, 25],\n            [-20, 60],\n            [24, 9],\n            [28, -9],\n            [31, -24],\n            [17, -58],\n            [9, -41],\n            [47, -30],\n            [50, -28],\n            [-3, -26],\n            [-46, -4],\n            [18, -23],\n            [-9, -22],\n            [-51, 9],\n            [-48, 16],\n            [-32, -3],\n            [-52, -20],\n            [-70, -9],\n            [-50, -6],\n            [-15, 28],\n            [-38, 16],\n            [-24, -6],\n            [-35, 47],\n            [19, 6],\n            [43, 10],\n            [39, -3],\n            [36, 11],\n            [-54, 13],\n            [-59, -4],\n            [-39, 1],\n            [-15, 22],\n            [64, 23],\n            [-42, -1],\n            [-49, 16],\n            [23, 44],\n            [20, 24],\n            [74, 36],\n            [29, -12]\n        ],\n        [\n            [2097, 9395],\n            [-24, -39],\n            [-44, 41],\n            [10, 9],\n            [37, 2],\n            [21, -13]\n        ],\n        [\n            [2879, 9376],\n            [3, -16],\n            [-30, 2],\n            [-30, 1],\n            [-30, -8],\n            [-8, 3],\n            [-31, 32],\n            [1, 21],\n            [14, 4],\n            [63, -6],\n            [48, -33]\n        ],\n        [\n            [2595, 9379],\n            [22, -36],\n            [26, 47],\n            [70, 24],\n            [48, -61],\n            [-4, -38],\n            [55, 17],\n            [26, 23],\n            [62, -30],\n            [38, -28],\n            [3, -25],\n            [52, 13],\n            [29, -38],\n            [67, -23],\n            [24, -24],\n            [26, -55],\n            [-51, -28],\n            [66, -38],\n            [44, -13],\n            [40, -55],\n            [44, -3],\n            [-9, -42],\n            [-49, -69],\n            [-34, 26],\n            [-44, 57],\n            [-36, -8],\n            [-3, -34],\n            [29, -34],\n            [38, -27],\n            [11, -16],\n            [18, -58],\n            [-9, -43],\n            [-35, 16],\n            [-70, 47],\n            [39, -51],\n            [29, -35],\n            [5, -21],\n            [-76, 24],\n            [-59, 34],\n            [-34, 29],\n            [10, 17],\n            [-42, 30],\n            [-40, 29],\n            [0, -18],\n            [-80, -9],\n            [-23, 20],\n            [18, 44],\n            [52, 1],\n            [57, 7],\n            [-9, 21],\n            [10, 30],\n            [36, 57],\n            [-8, 27],\n            [-11, 20],\n            [-42, 29],\n            [-57, 20],\n            [18, 15],\n            [-29, 36],\n            [-25, 4],\n            [-22, 20],\n            [-14, -18],\n            [-51, -7],\n            [-101, 13],\n            [-59, 17],\n            [-45, 9],\n            [-23, 21],\n            [29, 27],\n            [-39, 0],\n            [-9, 60],\n            [21, 53],\n            [29, 24],\n            [72, 16],\n            [-21, -39]\n        ],\n        [\n            [2212, 9420],\n            [33, -12],\n            [50, 7],\n            [7, -17],\n            [-26, -28],\n            [42, -26],\n            [-5, -53],\n            [-45, -23],\n            [-27, 5],\n            [-19, 23],\n            [-69, 45],\n            [0, 19],\n            [57, -7],\n            [-31, 38],\n            [33, 29]\n        ],\n        [\n            [2411, 9357],\n            [-30, -45],\n            [-32, 3],\n            [-17, 52],\n            [1, 29],\n            [14, 25],\n            [28, 16],\n            [58, -2],\n            [53, -14],\n            [-42, -53],\n            [-33, -11]\n        ],\n        [\n            [1654, 9275],\n            [-73, -29],\n            [-15, 26],\n            [-64, 31],\n            [12, 25],\n            [19, 43],\n            [24, 39],\n            [-27, 36],\n            [94, 10],\n            [39, -13],\n            [71, -3],\n            [27, -17],\n            [30, -25],\n            [-35, -15],\n            [-68, -41],\n            [-34, -42],\n            [0, -25]\n        ],\n        [\n            [2399, 9487],\n            [-15, -23],\n            [-40, 5],\n            [-34, 15],\n            [15, 27],\n            [40, 16],\n            [24, -21],\n            [10, -19]\n        ],\n        [\n            [2264, 9590],\n            [21, -27],\n            [1, -31],\n            [-13, -44],\n            [-46, -6],\n            [-30, 10],\n            [1, 34],\n            [-45, -4],\n            [-2, 45],\n            [30, -2],\n            [41, 21],\n            [40, -4],\n            [2, 8]\n        ],\n        [\n            [1994, 9559],\n            [11, -21],\n            [25, 10],\n            [29, -2],\n            [5, -29],\n            [-17, -28],\n            [-94, -10],\n            [-70, -25],\n            [-43, -2],\n            [-3, 20],\n            [57, 26],\n            [-125, -7],\n            [-39, 10],\n            [38, 58],\n            [26, 17],\n            [78, -20],\n            [50, -35],\n            [48, -5],\n            [-40, 57],\n            [26, 21],\n            [29, -7],\n            [9, -28]\n        ],\n        [\n            [2370, 9612],\n            [30, -19],\n            [55, 0],\n            [24, -19],\n            [-6, -22],\n            [32, -14],\n            [17, -14],\n            [38, -2],\n            [40, -5],\n            [44, 13],\n            [57, 5],\n            [45, -5],\n            [30, -22],\n            [6, -24],\n            [-17, -16],\n            [-42, -13],\n            [-35, 8],\n            [-80, -10],\n            [-57, -1],\n            [-45, 8],\n            [-74, 19],\n            [-9, 32],\n            [-4, 29],\n            [-27, 26],\n            [-58, 7],\n            [-32, 19],\n            [10, 24],\n            [58, -4]\n        ],\n        [\n            [1772, 9645],\n            [-4, -46],\n            [-21, -20],\n            [-26, -3],\n            [-52, -26],\n            [-44, -9],\n            [-38, 13],\n            [47, 44],\n            [57, 39],\n            [43, -1],\n            [38, 9]\n        ],\n        [\n            [2393, 9637],\n            [-13, -2],\n            [-52, 4],\n            [-7, 17],\n            [56, -1],\n            [19, -11],\n            [-3, -7]\n        ],\n        [\n            [1939, 9648],\n            [-52, -17],\n            [-41, 19],\n            [23, 19],\n            [40, 6],\n            [39, -10],\n            [-9, -17]\n        ],\n        [\n            [1954, 9701],\n            [-34, -11],\n            [-46, 0],\n            [0, 8],\n            [29, 18],\n            [14, -3],\n            [37, -12]\n        ],\n        [\n            [2338, 9669],\n            [-41, -12],\n            [-23, 13],\n            [-12, 23],\n            [-2, 24],\n            [36, -2],\n            [16, -4],\n            [33, -21],\n            [-7, -21]\n        ],\n        [\n            [2220, 9685],\n            [11, -25],\n            [-45, 7],\n            [-46, 19],\n            [-62, 2],\n            [27, 18],\n            [-34, 14],\n            [-2, 22],\n            [55, -8],\n            [75, -21],\n            [21, -28]\n        ],\n        [\n            [2583, 9764],\n            [33, -20],\n            [-38, -17],\n            [-51, -45],\n            [-50, -4],\n            [-57, 8],\n            [-30, 24],\n            [0, 21],\n            [22, 16],\n            [-50, 0],\n            [-31, 19],\n            [-18, 27],\n            [20, 26],\n            [19, 18],\n            [28, 4],\n            [-12, 14],\n            [65, 3],\n            [35, -32],\n            [47, -12],\n            [46, -11],\n            [22, -39]\n        ],\n        [\n            [3097, 9967],\n            [74, -4],\n            [60, -8],\n            [51, -16],\n            [-2, -16],\n            [-67, -25],\n            [-68, -12],\n            [-25, -14],\n            [61, 1],\n            [-66, -36],\n            [-45, -17],\n            [-48, -48],\n            [-57, -10],\n            [-18, -12],\n            [-84, -6],\n            [39, -8],\n            [-20, -10],\n            [23, -29],\n            [-26, -21],\n            [-43, -16],\n            [-13, -24],\n            [-39, -17],\n            [4, -14],\n            [48, 3],\n            [0, -15],\n            [-74, -35],\n            [-73, 16],\n            [-81, -9],\n            [-42, 7],\n            [-52, 3],\n            [-4, 29],\n            [52, 13],\n            [-14, 43],\n            [17, 4],\n            [74, -26],\n            [-38, 38],\n            [-45, 11],\n            [23, 23],\n            [49, 14],\n            [8, 21],\n            [-39, 23],\n            [-12, 31],\n            [76, -3],\n            [22, -6],\n            [43, 21],\n            [-62, 7],\n            [-98, -4],\n            [-49, 20],\n            [-23, 24],\n            [-32, 17],\n            [-6, 21],\n            [41, 11],\n            [32, 2],\n            [55, 9],\n            [41, 22],\n            [34, -3],\n            [30, -16],\n            [21, 32],\n            [37, 9],\n            [50, 7],\n            [85, 2],\n            [14, -6],\n            [81, 10],\n            [60, -4],\n            [60, -4]\n        ],\n        [\n            [5290, 7828],\n            [-3, -24],\n            [-12, -10],\n            [-20, 7],\n            [-6, -24],\n            [-14, -2],\n            [-5, 10],\n            [-15, -20],\n            [-13, -3],\n            [-12, 13]\n        ],\n        [\n            [5190, 7775],\n            [-10, 25],\n            [-13, -9],\n            [0, 27],\n            [21, 33],\n            [-1, 15],\n            [12, -5],\n            [8, 10]\n        ],\n        [\n            [5207, 7871],\n            [24, -1],\n            [5, 13],\n            [30, -18]\n        ],\n        [\n            [3140, 1814],\n            [-10, -24],\n            [-23, -18],\n            [-14, 2],\n            [-16, 5],\n            [-21, 18],\n            [-29, 8],\n            [-35, 33],\n            [-28, 32],\n            [-38, 66],\n            [23, -12],\n            [39, -40],\n            [36, -21],\n            [15, 27],\n            [9, 41],\n            [25, 24],\n            [20, -7]\n        ],\n        [\n            [3095, 1968],\n            [-25, 0],\n            [-13, -14],\n            [-25, -22],\n            [-5, -55],\n            [-11, -1],\n            [-32, 19],\n            [-32, 41],\n            [-34, 34],\n            [-9, 37],\n            [8, 35],\n            [-14, 39],\n            [-4, 101],\n            [12, 57],\n            [30, 45],\n            [-43, 18],\n            [27, 52],\n            [9, 98],\n            [31, -21],\n            [15, 123],\n            [-19, 15],\n            [-9, -73],\n            [-17, 8],\n            [9, 84],\n            [9, 110],\n            [13, 40],\n            [-8, 58],\n            [-2, 66],\n            [11, 2],\n            [17, 96],\n            [20, 94],\n            [11, 88],\n            [-6, 89],\n            [8, 49],\n            [-3, 72],\n            [16, 73],\n            [5, 114],\n            [9, 123],\n            [9, 132],\n            [-2, 96],\n            [-6, 84]\n        ],\n        [\n            [3045, 3974],\n            [14, 15],\n            [8, 30]\n        ],\n        [\n            [8064, 6161],\n            [-24, -28],\n            [-23, 18],\n            [0, 51],\n            [13, 26],\n            [31, 17],\n            [16, -1],\n            [6, -23],\n            [-12, -26],\n            [-7, -34]\n        ],\n        [\n            [8628, 7562],\n            [-18, 35],\n            [-11, -33],\n            [-43, -26],\n            [4, -31],\n            [-24, 2],\n            [-13, 19],\n            [-19, -42],\n            [-30, -32],\n            [-23, -38]\n        ],\n        [\n            [8451, 7416],\n            [-39, -17],\n            [-20, -27],\n            [-30, -17],\n            [15, 28],\n            [-6, 23],\n            [22, 40],\n            [-15, 30],\n            [-24, -20],\n            [-32, -41],\n            [-17, -39],\n            [-27, -2],\n            [-14, -28],\n            [15, -40],\n            [22, -10],\n            [1, -26],\n            [22, -17],\n            [31, 42],\n            [25, -23],\n            [18, -2],\n            [4, -31],\n            [-39, -16],\n            [-13, -32],\n            [-27, -30],\n            [-14, -41],\n            [30, -33],\n            [11, -58],\n            [17, -54],\n            [18, -45],\n            [0, -44],\n            [-17, -16],\n            [6, -32],\n            [17, -18],\n            [-5, -48],\n            [-7, -47],\n            [-15, -5],\n            [-21, -64],\n            [-22, -78],\n            [-26, -70],\n            [-38, -55],\n            [-39, -50],\n            [-31, -6],\n            [-17, -27],\n            [-10, 20],\n            [-15, -30],\n            [-39, -29],\n            [-29, -9],\n            [-10, -63],\n            [-15, -3],\n            [-8, 43],\n            [7, 22],\n            [-37, 19],\n            [-13, -9]\n        ],\n        [\n            [8001, 6331],\n            [-28, 15],\n            [-14, 24],\n            [5, 34],\n            [-26, 11],\n            [-13, 22],\n            [-24, -31],\n            [-27, -7],\n            [-22, 0],\n            [-15, -14]\n        ],\n        [\n            [7837, 6385],\n            [-14, -9],\n            [4, -68],\n            [-15, 2],\n            [-2, 14]\n        ],\n        [\n            [7810, 6324],\n            [-1, 24],\n            [-20, -17],\n            [-12, 11],\n            [-21, 22],\n            [8, 49],\n            [-18, 12],\n            [-6, 54],\n            [-30, -10],\n            [4, 70],\n            [26, 50],\n            [1, 48],\n            [-1, 46],\n            [-12, 14],\n            [-9, 35],\n            [-16, -5]\n        ],\n        [\n            [7703, 6727],\n            [-30, 9],\n            [9, 25],\n            [-13, 36],\n            [-20, -24],\n            [-23, 14],\n            [-32, -37],\n            [-25, -44],\n            [-23, -8]\n        ],\n        [\n            [7466, 6670],\n            [-2, 47],\n            [-17, -13]\n        ],\n        [\n            [7447, 6704],\n            [-32, 6],\n            [-32, 14],\n            [-22, 26],\n            [-22, 11],\n            [-9, 29],\n            [-16, 8],\n            [-28, 39],\n            [-22, 18],\n            [-12, -14]\n        ],\n        [\n            [7252, 6841],\n            [-38, 41],\n            [-28, 37],\n            [-7, 65],\n            [20, -7],\n            [1, 30],\n            [-12, 30],\n            [3, 48],\n            [-30, 69]\n        ],\n        [\n            [7161, 7154],\n            [-45, 24],\n            [-8, 46],\n            [-21, 27]\n        ],\n        [\n            [7082, 7268],\n            [-4, 34],\n            [1, 23],\n            [-17, 13],\n            [-9, -6],\n            [-7, 55]\n        ],\n        [\n            [7046, 7387],\n            [8, 13],\n            [-4, 14],\n            [26, 28],\n            [20, 12],\n            [29, -8],\n            [11, 38],\n            [35, 7],\n            [10, 23],\n            [44, 32],\n            [4, 13]\n        ],\n        [\n            [7229, 7559],\n            [-2, 34],\n            [19, 15],\n            [-25, 103],\n            [55, 24],\n            [14, 13],\n            [20, 106],\n            [55, -20],\n            [15, 27],\n            [2, 59],\n            [23, 6],\n            [21, 39]\n        ],\n        [\n            [7426, 7965],\n            [11, 5]\n        ],\n        [\n            [7437, 7970],\n            [7, -41],\n            [23, -32],\n            [40, -22],\n            [19, -47],\n            [-10, -70],\n            [10, -25],\n            [33, -10],\n            [37, -8],\n            [33, -37],\n            [18, -7],\n            [12, -54],\n            [17, -35],\n            [30, 1],\n            [58, -13],\n            [36, 8],\n            [28, -9],\n            [41, -36],\n            [34, 0],\n            [12, -18],\n            [32, 32],\n            [45, 20],\n            [42, 2],\n            [32, 21],\n            [20, 32],\n            [20, 20],\n            [-5, 19],\n            [-9, 23],\n            [15, 38],\n            [15, -5],\n            [29, -12],\n            [28, 31],\n            [42, 23],\n            [20, 39],\n            [20, 17],\n            [40, 8],\n            [22, -7],\n            [3, 21],\n            [-25, 41],\n            [-22, 19],\n            [-22, -22],\n            [-27, 10],\n            [-16, -8],\n            [-7, 24],\n            [20, 59],\n            [13, 45]\n        ],\n        [\n            [8240, 8005],\n            [34, -23],\n            [39, 38],\n            [-1, 26],\n            [26, 62],\n            [15, 19],\n            [0, 33],\n            [-16, 14],\n            [23, 29],\n            [35, 11],\n            [37, 2],\n            [41, -18],\n            [25, -22],\n            [17, -59],\n            [10, -26],\n            [10, -36],\n            [10, -58],\n            [49, -19],\n            [32, -42],\n            [12, -55],\n            [42, 0],\n            [24, 23],\n            [46, 17],\n            [-15, -53],\n            [-11, -21],\n            [-9, -65],\n            [-19, -58],\n            [-33, 11],\n            [-24, -21],\n            [7, -51],\n            [-4, -69],\n            [-14, -2],\n            [0, -30]\n        ],\n        [\n            [4920, 5353],\n            [-12, -1],\n            [-20, 12],\n            [-18, -1],\n            [-33, -10],\n            [-19, -18],\n            [-27, -21],\n            [-6, 1]\n        ],\n        [\n            [4785, 5315],\n            [2, 49],\n            [3, 7],\n            [-1, 24],\n            [-12, 24],\n            [-8, 4],\n            [-8, 17],\n            [6, 26],\n            [-3, 28],\n            [1, 18]\n        ],\n        [\n            [4765, 5512],\n            [5, 0],\n            [1, 25],\n            [-2, 12],\n            [3, 8],\n            [10, 7],\n            [-7, 47],\n            [-6, 25],\n            [2, 20],\n            [5, 4]\n        ],\n        [\n            [4776, 5660],\n            [4, 6],\n            [8, -9],\n            [21, -1],\n            [5, 18],\n            [5, -1],\n            [8, 6],\n            [4, -25],\n            [7, 7],\n            [11, 9]\n        ],\n        [\n            [4921, 5627],\n            [7, -84],\n            [-11, -50],\n            [-8, -66],\n            [12, -51],\n            [-1, -23]\n        ],\n        [\n            [5363, 5191],\n            [-4, 4],\n            [-16, -8],\n            [-17, 8],\n            [-13, -4]\n        ],\n        [\n            [5313, 5191],\n            [-45, 1]\n        ],\n        [\n            [5268, 5192],\n            [4, 47],\n            [-11, 39],\n            [-13, 10],\n            [-6, 27],\n            [-7, 8],\n            [1, 16]\n        ],\n        [\n            [5236, 5339],\n            [7, 42],\n            [13, 57],\n            [8, 1],\n            [17, 34],\n            [10, 1],\n            [16, -24],\n            [19, 20],\n            [2, 25],\n            [7, 23],\n            [4, 30],\n            [15, 25],\n            [5, 41],\n            [6, 13],\n            [4, 31],\n            [7, 37],\n            [24, 46],\n            [1, 20],\n            [3, 10],\n            [-11, 24]\n        ],\n        [\n            [5393, 5795],\n            [1, 19],\n            [8, 3]\n        ],\n        [\n            [5402, 5817],\n            [11, -38],\n            [2, -39],\n            [-1, -39],\n            [15, -54],\n            [-15, 1],\n            [-8, -4],\n            [-13, 6],\n            [-6, -28],\n            [16, -35],\n            [13, -10],\n            [3, -24],\n            [9, -41],\n            [-4, -16]\n        ],\n        [\n            [5444, 5191],\n            [-2, -31],\n            [-22, 14],\n            [-22, 15],\n            [-35, 2]\n        ],\n        [\n            [5856, 5265],\n            [-2, -69],\n            [11, -8],\n            [-9, -21],\n            [-10, -16],\n            [-11, -31],\n            [-6, -27],\n            [-1, -48],\n            [-7, -22],\n            [0, -45]\n        ],\n        [\n            [5821, 4978],\n            [-8, -16],\n            [-1, -35],\n            [-4, -5],\n            [-2, -32]\n        ],\n        [\n            [5814, 4792],\n            [5, -55],\n            [-2, -30],\n            [5, -35],\n            [16, -33],\n            [15, -74]\n        ],\n        [\n            [5853, 4565],\n            [-11, 6],\n            [-37, -10],\n            [-7, -7],\n            [-8, -38],\n            [6, -26],\n            [-5, -70],\n            [-3, -59],\n            [7, -11],\n            [19, -23],\n            [8, 11],\n            [2, -64],\n            [-21, 1],\n            [-11, 32],\n            [-10, 25],\n            [-22, 9],\n            [-6, 31],\n            [-17, -19],\n            [-22, 8],\n            [-10, 27],\n            [-17, 6],\n            [-13, -2],\n            [-2, 19],\n            [-9, 1]\n        ],\n        [\n            [5342, 4697],\n            [-4, 18]\n        ],\n        [\n            [5360, 4775],\n            [8, -6],\n            [9, 23],\n            [15, -1],\n            [2, -17],\n            [11, -10],\n            [16, 37],\n            [16, 29],\n            [7, 19],\n            [-1, 48],\n            [12, 58],\n            [13, 30],\n            [18, 29],\n            [3, 18],\n            [1, 22],\n            [5, 21],\n            [-2, 33],\n            [4, 52],\n            [5, 37],\n            [8, 32],\n            [2, 36]\n        ],\n        [\n            [5760, 5367],\n            [17, -49],\n            [12, -7],\n            [8, 10],\n            [12, -4],\n            [16, 12],\n            [6, -25],\n            [25, -39]\n        ],\n        [\n            [5330, 4760],\n            [-22, 62]\n        ],\n        [\n            [5308, 4822],\n            [21, 33],\n            [-11, 39],\n            [10, 15],\n            [19, 7],\n            [2, 26],\n            [15, -28],\n            [24, -2],\n            [9, 27],\n            [3, 40],\n            [-3, 46],\n            [-13, 35],\n            [12, 68],\n            [-7, 12],\n            [-21, -5],\n            [-7, 31],\n            [2, 25]\n        ],\n        [\n            [2906, 5049],\n            [-12, 14],\n            [-14, 19],\n            [-7, -9],\n            [-24, 8],\n            [-7, 25],\n            [-5, -1],\n            [-28, 34]\n        ],\n        [\n            [2809, 5139],\n            [-3, 18],\n            [10, 5],\n            [-1, 29],\n            [6, 22],\n            [14, 4],\n            [12, 37],\n            [10, 31],\n            [-10, 14],\n            [5, 34],\n            [-6, 54],\n            [6, 16],\n            [-4, 50],\n            [-12, 31]\n        ],\n        [\n            [2836, 5484],\n            [4, 29],\n            [9, -4],\n            [5, 17],\n            [-6, 35],\n            [3, 9]\n        ],\n        [\n            [2851, 5570],\n            [14, -2],\n            [21, 41],\n            [12, 6],\n            [0, 20],\n            [5, 50],\n            [16, 27],\n            [17, 1],\n            [3, 13],\n            [21, -5],\n            [22, 30],\n            [11, 13],\n            [14, 28],\n            [9, -3],\n            [8, -16],\n            [-6, -20]\n        ],\n        [\n            [3018, 5753],\n            [-18, -10],\n            [-7, -29],\n            [-10, -17],\n            [-8, -22],\n            [-4, -42],\n            [-8, -35],\n            [15, -4],\n            [3, -27],\n            [6, -13],\n            [3, -24],\n            [-4, -22],\n            [1, -12],\n            [7, -5],\n            [7, -20],\n            [36, 5],\n            [16, -7],\n            [19, -51],\n            [11, 6],\n            [20, -3],\n            [16, 7],\n            [10, -10],\n            [-5, -32],\n            [-6, -20],\n            [-2, -42],\n            [5, -40],\n            [8, -17],\n            [1, -13],\n            [-14, -30],\n            [10, -13],\n            [8, -21],\n            [8, -58]\n        ],\n        [\n            [3058, 4804],\n            [-14, 31],\n            [-8, 1],\n            [18, 61],\n            [-21, 27],\n            [-17, -5],\n            [-10, 10],\n            [-15, -15],\n            [-21, 7],\n            [-16, 62],\n            [-13, 15],\n            [-9, 28],\n            [-19, 28],\n            [-7, -5]\n        ],\n        [\n            [2695, 5543],\n            [-15, 14],\n            [-6, 12],\n            [4, 10],\n            [-1, 13],\n            [-8, 14],\n            [-11, 12],\n            [-10, 8],\n            [-1, 17],\n            [-8, 10],\n            [2, -17],\n            [-5, -14],\n            [-7, 17],\n            [-9, 5],\n            [-4, 12],\n            [1, 18],\n            [3, 19],\n            [-8, 8],\n            [7, 12]\n        ],\n        [\n            [2619, 5713],\n            [4, 7],\n            [18, -15],\n            [7, 7],\n            [9, -5],\n            [4, -12],\n            [8, -4],\n            [7, 13]\n        ],\n        [\n            [2676, 5704],\n            [7, -32],\n            [11, -24],\n            [13, -25]\n        ],\n        [\n            [2707, 5623],\n            [-11, -6],\n            [0, -23],\n            [6, -9],\n            [-4, -7],\n            [1, -11],\n            [-2, -12],\n            [-2, -12]\n        ],\n        [\n            [2715, 6427],\n            [23, -4],\n            [22, 0],\n            [26, -21],\n            [11, -21],\n            [26, 6],\n            [10, -13],\n            [24, -37],\n            [17, -27],\n            [9, 1],\n            [17, -12],\n            [-2, -17],\n            [20, -2],\n            [21, -24],\n            [-3, -14],\n            [-19, -7],\n            [-18, -3],\n            [-19, 4],\n            [-40, -5],\n            [18, 32],\n            [-11, 16],\n            [-18, 4],\n            [-9, 17],\n            [-7, 33],\n            [-16, -2],\n            [-26, 16],\n            [-8, 12],\n            [-36, 10],\n            [-10, 11],\n            [11, 15],\n            [-28, 3],\n            [-20, -31],\n            [-11, -1],\n            [-4, -14],\n            [-14, -7],\n            [-12, 6],\n            [15, 18],\n            [6, 22],\n            [13, 13],\n            [14, 11],\n            [21, 6],\n            [7, 6]\n        ],\n        [\n            [5909, 7133],\n            [2, 1],\n            [4, 14],\n            [20, -1],\n            [25, 18],\n            [-19, -25],\n            [2, -11]\n        ],\n        [\n            [5943, 7129],\n            [-3, 2],\n            [-5, -5],\n            [-4, 1],\n            [-2, -2],\n            [0, 6],\n            [-2, 4],\n            [-6, 0],\n            [-7, -5],\n            [-5, 3]\n        ],\n        [\n            [5943, 7129],\n            [1, -5],\n            [-28, -24],\n            [-14, 8],\n            [-7, 23],\n            [14, 2]\n        ],\n        [\n            [5377, 7945],\n            [-16, 25],\n            [-14, 15],\n            [-3, 25],\n            [-5, 17],\n            [21, 13],\n            [10, 15],\n            [20, 11],\n            [7, 11],\n            [7, -6],\n            [13, 6]\n        ],\n        [\n            [5417, 8077],\n            [13, -19],\n            [21, -5],\n            [-2, -17],\n            [15, -12],\n            [4, 15],\n            [19, -6],\n            [3, -19],\n            [20, -3],\n            [13, -29]\n        ],\n        [\n            [5523, 7982],\n            [-8, 0],\n            [-4, -11],\n            [-7, -3],\n            [-2, -13],\n            [-5, -3],\n            [-1, -5],\n            [-9, -7],\n            [-12, 1],\n            [-4, -13]\n        ],\n        [\n            [5275, 8306],\n            [1, -23],\n            [28, -14],\n            [-1, -21],\n            [29, 11],\n            [15, 16],\n            [32, -23],\n            [13, -19]\n        ],\n        [\n            [5392, 8233],\n            [6, -30],\n            [-8, -16],\n            [11, -21],\n            [6, -31],\n            [-2, -21],\n            [12, -37]\n        ],\n        [\n            [5207, 7871],\n            [3, 42],\n            [14, 40],\n            [-40, 11],\n            [-13, 16]\n        ],\n        [\n            [5171, 7980],\n            [2, 26],\n            [-6, 13]\n        ],\n        [\n            [5171, 8059],\n            [-5, 62],\n            [17, 0],\n            [7, 22],\n            [6, 54],\n            [-5, 20]\n        ],\n        [\n            [5191, 8217],\n            [6, 13],\n            [23, 3],\n            [5, -13],\n            [19, 29],\n            [-6, 22],\n            [-2, 34]\n        ],\n        [\n            [5236, 8305],\n            [21, -8],\n            [18, 9]\n        ],\n        [\n            [6196, 5808],\n            [7, -19],\n            [-1, -24],\n            [-16, -14],\n            [12, -16]\n        ],\n        [\n            [6198, 5735],\n            [-10, -32]\n        ],\n        [\n            [6188, 5703],\n            [-7, 11],\n            [-6, -5],\n            [-16, 1],\n            [0, 18],\n            [-2, 17],\n            [9, 27],\n            [10, 26]\n        ],\n        [\n            [6176, 5798],\n            [12, -5],\n            [8, 15]\n        ],\n        [\n            [5352, 8343],\n            [-17, -48],\n            [-29, 33],\n            [-4, 25],\n            [41, 19],\n            [9, -29]\n        ],\n        [\n            [5236, 8305],\n            [-11, 32],\n            [-1, 61],\n            [5, 16],\n            [8, 17],\n            [24, 4],\n            [10, 16],\n            [22, 17],\n            [-1, -30],\n            [-8, -20],\n            [4, -16],\n            [15, -9],\n            [-7, -22],\n            [-8, 6],\n            [-20, -42],\n            [7, -29]\n        ],\n        [\n            [3008, 6222],\n            [3, 10],\n            [22, 0],\n            [16, -15],\n            [8, 1],\n            [5, -21],\n            [15, 1],\n            [-1, -17],\n            [12, -2],\n            [14, -22],\n            [-10, -24],\n            [-14, 13],\n            [-12, -3],\n            [-9, 3],\n            [-5, -11],\n            [-11, -3],\n            [-4, 14],\n            [-10, -8],\n            [-11, -41],\n            [-7, 10],\n            [-1, 17]\n        ],\n        [\n            [3008, 6124],\n            [0, 16],\n            [-7, 17],\n            [7, 10],\n            [2, 23],\n            [-2, 32]\n        ],\n        [\n            [5333, 6444],\n            [-95, -112],\n            [-81, -117],\n            [-39, -26]\n        ],\n        [\n            [5118, 6189],\n            [-31, -6],\n            [0, 38],\n            [-13, 10],\n            [-17, 16],\n            [-7, 28],\n            [-94, 129],\n            [-93, 129]\n        ],\n        [\n            [4863, 6533],\n            [-105, 143]\n        ],\n        [\n            [4758, 6676],\n            [1, 11],\n            [0, 4]\n        ],\n        [\n            [4759, 6691],\n            [0, 70],\n            [44, 44],\n            [28, 9],\n            [23, 16],\n            [11, 29],\n            [32, 24],\n            [1, 44],\n            [16, 5],\n            [13, 22],\n            [36, 9],\n            [5, 23],\n            [-7, 13],\n            [-10, 62],\n            [-1, 36],\n            [-11, 38]\n        ],\n        [\n            [4939, 7135],\n            [27, 32],\n            [30, 11],\n            [17, 24],\n            [27, 18],\n            [47, 11],\n            [46, 4],\n            [14, -8],\n            [26, 23],\n            [30, 0],\n            [11, -13],\n            [19, 3]\n        ],\n        [\n            [5233, 7240],\n            [-5, -30],\n            [4, -56],\n            [-6, -49],\n            [-18, -33],\n            [3, -45],\n            [23, -35],\n            [0, -14],\n            [17, -24],\n            [12, -106]\n        ],\n        [\n            [5263, 6848],\n            [9, -52],\n            [1, -28],\n            [-5, -48],\n            [2, -27],\n            [-3, -32],\n            [2, -37],\n            [-11, -25],\n            [17, -43],\n            [1, -25],\n            [10, -33],\n            [13, 11],\n            [22, -28],\n            [12, -37]\n        ],\n        [\n            [2769, 4856],\n            [15, 45],\n            [-6, 25],\n            [-11, -27],\n            [-16, 26],\n            [5, 16],\n            [-4, 54],\n            [9, 9],\n            [5, 37],\n            [11, 38],\n            [-2, 24],\n            [15, 13],\n            [19, 23]\n        ],\n        [\n            [2906, 5049],\n            [4, -45],\n            [-9, -39],\n            [-30, -62],\n            [-33, -23],\n            [-17, -51],\n            [-6, -40],\n            [-15, -24],\n            [-12, 29],\n            [-11, 7],\n            [-12, -5],\n            [-1, 22],\n            [8, 14],\n            [-3, 24]\n        ],\n        [\n            [5969, 6800],\n            [-7, -23],\n            [-6, -45],\n            [-8, -31],\n            [-6, -10],\n            [-10, 19],\n            [-12, 26],\n            [-20, 85],\n            [-3, -5],\n            [12, -63],\n            [17, -59],\n            [21, -92],\n            [10, -32],\n            [9, -34],\n            [25, -65],\n            [-6, -10],\n            [1, -39],\n            [33, -53],\n            [4, -12]\n        ],\n        [\n            [6023, 6357],\n            [-110, 0],\n            [-107, 0],\n            [-112, 0]\n        ],\n        [\n            [5694, 6357],\n            [0, 218],\n            [0, 210],\n            [-8, 47],\n            [7, 37],\n            [-5, 25],\n            [10, 29]\n        ],\n        [\n            [5698, 6923],\n            [37, 0],\n            [27, -15],\n            [28, -18],\n            [13, -9],\n            [21, 19],\n            [11, 17],\n            [25, 5],\n            [20, -8],\n            [7, -29],\n            [7, 19],\n            [22, -14],\n            [22, -3],\n            [13, 15]\n        ],\n        [\n            [5951, 6902],\n            [18, -102]\n        ],\n        [\n            [6176, 5798],\n            [-10, 20],\n            [-11, 34],\n            [-12, 19],\n            [-8, 21],\n            [-24, 23],\n            [-19, 1],\n            [-7, 12],\n            [-16, -14],\n            [-17, 27],\n            [-8, -44],\n            [-33, 13]\n        ],\n        [\n            [6011, 5910],\n            [-3, 23],\n            [12, 87],\n            [3, 39],\n            [9, 18],\n            [20, 10],\n            [14, 34]\n        ],\n        [\n            [6066, 6121],\n            [16, -69],\n            [8, -54],\n            [15, -29],\n            [38, -55],\n            [16, -34],\n            [15, -34],\n            [8, -20],\n            [14, -18]\n        ],\n        [\n            [4749, 7532],\n            [1, 42],\n            [-11, 25],\n            [39, 43],\n            [34, -11],\n            [37, 1],\n            [30, -10],\n            [23, 3],\n            [45, -2]\n        ],\n        [\n            [4947, 7623],\n            [11, -23],\n            [51, -27],\n            [10, 13],\n            [31, -27],\n            [32, 8]\n        ],\n        [\n            [5082, 7567],\n            [2, -35],\n            [-26, -39],\n            [-36, -12],\n            [-2, -20],\n            [-18, -33],\n            [-10, -48],\n            [11, -34],\n            [-16, -26],\n            [-6, -39],\n            [-21, -11],\n            [-20, -46],\n            [-35, -1],\n            [-27, 1],\n            [-17, -21],\n            [-11, -22],\n            [-13, 5],\n            [-11, 20],\n            [-8, 34],\n            [-26, 9]\n        ],\n        [\n            [4792, 7249],\n            [-2, 20],\n            [10, 22],\n            [4, 16],\n            [-9, 17],\n            [7, 39],\n            [-11, 36],\n            [12, 5],\n            [1, 27],\n            [5, 9],\n            [0, 46],\n            [13, 16],\n            [-8, 30],\n            [-16, 2],\n            [-5, -8],\n            [-16, 0],\n            [-7, 29],\n            [-11, -8],\n            [-10, -15]\n        ],\n        [\n            [5675, 8472],\n            [3, 35],\n            [-10, -8],\n            [-18, 21],\n            [-2, 34],\n            [35, 17],\n            [35, 8],\n            [30, -10],\n            [29, 2]\n        ],\n        [\n            [5777, 8571],\n            [4, -10],\n            [-20, -34],\n            [8, -55],\n            [-12, -19]\n        ],\n        [\n            [5757, 8453],\n            [-22, 0],\n            [-24, 22],\n            [-13, 7],\n            [-23, -10]\n        ],\n        [\n            [6188, 5703],\n            [-6, -21],\n            [10, -32],\n            [10, -29],\n            [11, -21],\n            [90, -70],\n            [24, 0]\n        ],\n        [\n            [6327, 5530],\n            [-79, -177],\n            [-36, -3],\n            [-25, -41],\n            [-17, -1],\n            [-8, -19]\n        ],\n        [\n            [6162, 5289],\n            [-19, 0],\n            [-11, 20],\n            [-26, -25],\n            [-8, -24],\n            [-18, 4],\n            [-6, 7],\n            [-7, -1],\n            [-9, 0],\n            [-35, 50],\n            [-19, 0],\n            [-10, 20],\n            [0, 33],\n            [-14, 10]\n        ],\n        [\n            [5980, 5383],\n            [-17, 64],\n            [-12, 14],\n            [-5, 23],\n            [-14, 29],\n            [-17, 4],\n            [9, 34],\n            [15, 2],\n            [4, 18]\n        ],\n        [\n            [5943, 5571],\n            [0, 53]\n        ],\n        [\n            [5943, 5624],\n            [8, 62],\n            [13, 16],\n            [3, 24],\n            [12, 45],\n            [17, 30],\n            [11, 58],\n            [4, 51]\n        ],\n        [\n            [5794, 9138],\n            [-4, -42],\n            [42, -39],\n            [-26, -45],\n            [33, -67],\n            [-19, -51],\n            [25, -43],\n            [-11, -39],\n            [41, -40],\n            [-11, -31],\n            [-25, -34],\n            [-60, -75]\n        ],\n        [\n            [5779, 8632],\n            [-50, -5],\n            [-49, -21],\n            [-45, -13],\n            [-16, 32],\n            [-27, 20],\n            [6, 58],\n            [-14, 53],\n            [14, 35],\n            [25, 37],\n            [63, 64],\n            [19, 12],\n            [-3, 25],\n            [-39, 28]\n        ],\n        [\n            [5663, 8957],\n            [-9, 23],\n            [-1, 91],\n            [-43, 40],\n            [-37, 29]\n        ],\n        [\n            [5573, 9140],\n            [17, 16],\n            [30, -32],\n            [37, 3],\n            [30, -14],\n            [26, 26],\n            [14, 44],\n            [43, 20],\n            [35, -24],\n            [-11, -41]\n        ],\n        [\n            [9954, 4033],\n            [9, -17],\n            [-4, -31],\n            [-17, -8],\n            [-16, 7],\n            [-2, 26],\n            [10, 21],\n            [13, -8],\n            [7, 10]\n        ],\n        [\n            [0, 4079],\n            [9981, -14],\n            [-17, -13],\n            [-4, 23],\n            [14, 12],\n            [9, 3],\n            [-9983, 18]\n        ],\n        [\n            [0, 4108],\n            [0, -29]\n        ],\n        [\n            [0, 4108],\n            [6, 3],\n            [-4, -28],\n            [-2, -4]\n        ],\n        [\n            [3300, 1994],\n            [33, 36],\n            [24, -15],\n            [16, 24],\n            [22, -27],\n            [-8, -21],\n            [-37, -17],\n            [-13, 20],\n            [-23, -26],\n            [-14, 26]\n        ],\n        [\n            [5265, 7548],\n            [-9, -46],\n            [-13, 12],\n            [-6, 40],\n            [5, 22],\n            [18, 22],\n            [5, -50]\n        ],\n        [\n            [5157, 7984],\n            [6, -6],\n            [8, 2]\n        ],\n        [\n            [5190, 7775],\n            [-2, -17],\n            [9, -22],\n            [-10, -18],\n            [7, -46],\n            [15, -8],\n            [-3, -25]\n        ],\n        [\n            [5206, 7639],\n            [-25, -34],\n            [-55, 16],\n            [-40, -19],\n            [-4, -35]\n        ],\n        [\n            [4947, 7623],\n            [14, 35],\n            [5, 118],\n            [-28, 62],\n            [-21, 30],\n            [-42, 23],\n            [-3, 43],\n            [36, 12],\n            [47, -15],\n            [-9, 67],\n            [26, -25],\n            [65, 46],\n            [8, 48],\n            [24, 12]\n        ],\n        [\n            [3485, 5194],\n            [7, 25],\n            [3, 27]\n        ],\n        [\n            [3495, 5246],\n            [4, 26],\n            [-10, 34]\n        ],\n        [\n            [3489, 5306],\n            [-3, 41],\n            [15, 51]\n        ],\n        [\n            [3501, 5398],\n            [9, -7],\n            [21, -14],\n            [29, -50],\n            [5, -24]\n        ],\n        [\n            [5308, 4822],\n            [-29, 60],\n            [-18, 49],\n            [-17, 61],\n            [1, 19],\n            [6, 19],\n            [7, 43],\n            [5, 44]\n        ],\n        [\n            [5263, 5117],\n            [10, 4],\n            [40, -1],\n            [0, 71]\n        ],\n        [\n            [4827, 8240],\n            [-21, 12],\n            [-17, -1],\n            [6, 32],\n            [-6, 32]\n        ],\n        [\n            [4789, 8315],\n            [23, 2],\n            [30, -37],\n            [-15, -40]\n        ],\n        [\n            [4916, 8521],\n            [-30, -63],\n            [29, 8],\n            [30, -1],\n            [-7, -48],\n            [-25, -53],\n            [29, -4],\n            [2, -6],\n            [25, -69],\n            [19, -10],\n            [17, -67],\n            [8, -24],\n            [33, -11],\n            [-3, -38],\n            [-14, -17],\n            [11, -30],\n            [-25, -31],\n            [-37, 0],\n            [-48, -16],\n            [-13, 12],\n            [-18, -28],\n            [-26, 7],\n            [-19, -23],\n            [-15, 12],\n            [41, 62],\n            [25, 13],\n            [-1, 0],\n            [-43, 9],\n            [-8, 24],\n            [29, 18],\n            [-15, 32],\n            [5, 39],\n            [42, -6],\n            [4, 35],\n            [-19, 36],\n            [0, 1],\n            [-34, 10],\n            [-7, 16],\n            [10, 27],\n            [-9, 16],\n            [-15, -28],\n            [-1, 57],\n            [-14, 30],\n            [10, 61],\n            [21, 48],\n            [23, -4],\n            [33, 4]\n        ],\n        [\n            [6154, 7511],\n            [4, 26],\n            [-7, 40],\n            [-16, 22],\n            [-16, 6],\n            [-10, 19]\n        ],\n        [\n            [6109, 7624],\n            [4, 6],\n            [23, -10],\n            [41, -9],\n            [38, -28],\n            [5, -11],\n            [17, 9],\n            [25, -13],\n            [9, -24],\n            [17, -13]\n        ],\n        [\n            [6210, 7485],\n            [-27, 29],\n            [-29, -3]\n        ],\n        [\n            [5029, 5408],\n            [-44, -35],\n            [-15, -20],\n            [-25, -17],\n            [-25, 17]\n        ],\n        [\n            [5000, 5708],\n            [-2, -18],\n            [12, -30],\n            [0, -43],\n            [2, -47],\n            [7, -21],\n            [-6, -54],\n            [2, -29],\n            [8, -37],\n            [6, -21]\n        ],\n        [\n            [4765, 5512],\n            [-8, 1],\n            [-5, -24],\n            [-8, 1],\n            [-6, 12],\n            [2, 24],\n            [-11, 36],\n            [-8, -7],\n            [-6, -1]\n        ],\n        [\n            [4715, 5554],\n            [-7, -3],\n            [0, 21],\n            [-4, 16],\n            [0, 17],\n            [-6, 25],\n            [-7, 21],\n            [-23, 0],\n            [-6, -11],\n            [-8, -1],\n            [-4, -13],\n            [-4, -17],\n            [-14, -26]\n        ],\n        [\n            [4632, 5583],\n            [-13, 35],\n            [-10, 24],\n            [-8, 7],\n            [-6, 12],\n            [-4, 26],\n            [-4, 13],\n            [-8, 10]\n        ],\n        [\n            [4579, 5710],\n            [13, 29],\n            [8, -2],\n            [7, 10],\n            [6, 0],\n            [5, 8],\n            [-3, 20],\n            [3, 6],\n            [1, 20]\n        ],\n        [\n            [4619, 5801],\n            [13, -1],\n            [20, -14],\n            [6, 1],\n            [3, 7],\n            [15, -5],\n            [4, 4]\n        ],\n        [\n            [4680, 5793],\n            [1, -22],\n            [5, 0],\n            [7, 8],\n            [5, -2],\n            [7, -15],\n            [12, -5],\n            [8, 13],\n            [9, 8],\n            [6, 8],\n            [6, -1],\n            [6, -13],\n            [3, -17],\n            [12, -24],\n            [-6, -16],\n            [-1, -19],\n            [6, 6],\n            [3, -7],\n            [-1, -17],\n            [8, -18]\n        ],\n        [\n            [4532, 5834],\n            [3, 27]\n        ],\n        [\n            [4535, 5861],\n            [31, 1],\n            [6, 14],\n            [9, 1],\n            [11, -14],\n            [8, -1],\n            [9, 10],\n            [6, -17],\n            [-12, -13],\n            [-12, 1],\n            [-12, 13],\n            [-10, -14],\n            [-5, -1],\n            [-7, -8],\n            [-25, 1]\n        ],\n        [\n            [4579, 5710],\n            [-15, 24],\n            [-11, 4],\n            [-7, 17],\n            [1, 9],\n            [-9, 13],\n            [-2, 12]\n        ],\n        [\n            [4536, 5789],\n            [15, 10],\n            [9, -2],\n            [8, 7],\n            [51, -3]\n        ],\n        [\n            [5263, 5117],\n            [-5, 9],\n            [10, 66]\n        ],\n        [\n            [5658, 7167],\n            [15, -20],\n            [22, 3],\n            [20, -4],\n            [0, -10],\n            [15, 7],\n            [-4, -18],\n            [-40, -5],\n            [1, 10],\n            [-34, 12],\n            [5, 25]\n        ],\n        [\n            [5723, 7469],\n            [-17, 2],\n            [-14, 6],\n            [-34, -16],\n            [19, -33],\n            [-14, -10],\n            [-15, 0],\n            [-15, 31],\n            [-5, -13],\n            [6, -36],\n            [14, -27],\n            [-10, -13],\n            [15, -27],\n            [14, -18],\n            [0, -33],\n            [-25, 16],\n            [8, -30],\n            [-18, -7],\n            [11, -52],\n            [-19, -1],\n            [-23, 26],\n            [-10, 47],\n            [-5, 40],\n            [-11, 27],\n            [-14, 34],\n            [-2, 16]\n        ],\n        [\n            [5583, 7470],\n            [18, 6],\n            [11, 13],\n            [15, -2],\n            [5, 11],\n            [5, 2]\n        ],\n        [\n            [5725, 7529],\n            [13, -16],\n            [-8, -37],\n            [-7, -7]\n        ],\n        [\n            [3701, 9939],\n            [93, 35],\n            [97, -2],\n            [36, 21],\n            [98, 6],\n            [222, -7],\n            [174, -47],\n            [-52, -23],\n            [-106, -3],\n            [-150, -5],\n            [14, -11],\n            [99, 7],\n            [83, -21],\n            [54, 18],\n            [23, -21],\n            [-30, -34],\n            [71, 22],\n            [135, 23],\n            [83, -12],\n            [15, -25],\n            [-113, -42],\n            [-16, -14],\n            [-88, -10],\n            [64, -3],\n            [-32, -43],\n            [-23, -38],\n            [1, -66],\n            [33, -38],\n            [-43, -3],\n            [-46, -19],\n            [52, -31],\n            [6, -50],\n            [-30, -6],\n            [36, -50],\n            [-61, -5],\n            [32, -24],\n            [-9, -20],\n            [-39, -10],\n            [-39, 0],\n            [35, -40],\n            [0, -26],\n            [-55, 24],\n            [-14, -15],\n            [37, -15],\n            [37, -36],\n            [10, -48],\n            [-49, -11],\n            [-22, 22],\n            [-34, 34],\n            [10, -40],\n            [-33, -31],\n            [73, -2],\n            [39, -3],\n            [-75, -52],\n            [-75, -46],\n            [-81, -21],\n            [-31, 0],\n            [-29, -23],\n            [-38, -62],\n            [-60, -42],\n            [-19, -2],\n            [-37, -15],\n            [-40, -13],\n            [-24, -37],\n            [0, -41],\n            [-15, -39],\n            [-45, -47],\n            [11, -47],\n            [-12, -48],\n            [-14, -58],\n            [-39, -4],\n            [-41, 49],\n            [-56, 0],\n            [-27, 32],\n            [-18, 58],\n            [-49, 73],\n            [-14, 39],\n            [-3, 53],\n            [-39, 54],\n            [10, 44],\n            [-18, 21],\n            [27, 69],\n            [42, 22],\n            [11, 25],\n            [6, 46],\n            [-32, -21],\n            [-15, -9],\n            [-25, -8],\n            [-34, 19],\n            [-2, 40],\n            [11, 31],\n            [25, 1],\n            [57, -15],\n            [-48, 37],\n            [-24, 20],\n            [-28, -8],\n            [-23, 15],\n            [31, 55],\n            [-17, 22],\n            [-22, 41],\n            [-34, 62],\n            [-35, 23],\n            [0, 25],\n            [-74, 34],\n            [-59, 5],\n            [-74, -3],\n            [-68, -4],\n            [-32, 19],\n            [-49, 37],\n            [73, 19],\n            [56, 3],\n            [-119, 15],\n            [-62, 24],\n            [3, 23],\n            [106, 28],\n            [101, 29],\n            [11, 21],\n            [-75, 22],\n            [24, 23],\n            [97, 41],\n            [40, 7],\n            [-12, 26],\n            [66, 16],\n            [86, 9],\n            [85, 1],\n            [30, -19],\n            [74, 33],\n            [66, -22],\n            [39, -5],\n            [58, -19],\n            [-66, 32],\n            [4, 25]\n        ],\n        [\n            [2497, 5869],\n            [-14, 10],\n            [-17, 1],\n            [-13, 12],\n            [-15, 24]\n        ],\n        [\n            [2438, 5916],\n            [1, 18],\n            [3, 13],\n            [-4, 12],\n            [13, 48],\n            [36, 0],\n            [1, 20],\n            [-5, 4],\n            [-3, 12],\n            [-10, 14],\n            [-11, 20],\n            [13, 0],\n            [0, 33],\n            [26, 0],\n            [26, 0]\n        ],\n        [\n            [2529, 5996],\n            [10, -11],\n            [2, 9],\n            [8, -7]\n        ],\n        [\n            [2549, 5987],\n            [-13, -23],\n            [-13, -16],\n            [-2, -12],\n            [2, -11],\n            [-5, -15]\n        ],\n        [\n            [2518, 5910],\n            [-7, -4],\n            [2, -7],\n            [-6, -6],\n            [-9, -15],\n            [-1, -9]\n        ],\n        [\n            [3340, 5552],\n            [18, -22],\n            [17, -38],\n            [1, -31],\n            [10, -1],\n            [15, -29],\n            [11, -21]\n        ],\n        [\n            [3412, 5410],\n            [-4, -53],\n            [-17, -15],\n            [1, -14],\n            [-5, -31],\n            [13, -42],\n            [9, -1],\n            [3, -33],\n            [17, -51]\n        ],\n        [\n            [3313, 5365],\n            [-19, 45],\n            [7, 16],\n            [0, 27],\n            [17, 10],\n            [7, 11],\n            [-10, 22],\n            [3, 21],\n            [22, 35]\n        ],\n        [\n            [2574, 5825],\n            [-5, 18],\n            [-8, 5]\n        ],\n        [\n            [2561, 5848],\n            [2, 24],\n            [-4, 6],\n            [-6, 4],\n            [-12, -7],\n            [-1, 8],\n            [-8, 10],\n            [-6, 12],\n            [-8, 5]\n        ],\n        [\n            [2549, 5987],\n            [3, -3],\n            [6, 11],\n            [8, 1],\n            [3, -5],\n            [4, 3],\n            [13, -6],\n            [13, 2],\n            [9, 6],\n            [3, 7],\n            [9, -3],\n            [6, -4],\n            [8, 1],\n            [5, 5],\n            [13, -8],\n            [4, -1],\n            [9, -11],\n            [8, -13],\n            [10, -9],\n            [7, -17]\n        ],\n        [\n            [2690, 5943],\n            [-9, 2],\n            [-4, -8],\n            [-10, -8],\n            [-7, 0],\n            [-6, -8],\n            [-6, 3],\n            [-4, 9],\n            [-3, -2],\n            [-4, -14],\n            [-3, 1],\n            [0, -12],\n            [-10, -17],\n            [-5, -7],\n            [-3, -7],\n            [-8, 12],\n            [-6, -16],\n            [-6, 1],\n            [-6, -2],\n            [0, -29],\n            [-4, 0],\n            [-3, -14],\n            [-9, -2]\n        ],\n        [\n            [5522, 7770],\n            [7, -23],\n            [9, -17],\n            [-11, -22]\n        ],\n        [\n            [5515, 7577],\n            [-3, -10]\n        ],\n        [\n            [5512, 7567],\n            [-26, 22],\n            [-16, 21],\n            [-26, 18],\n            [-23, 43],\n            [6, 5],\n            [-13, 25],\n            [-1, 19],\n            [-17, 10],\n            [-9, -26],\n            [-8, 20],\n            [0, 21],\n            [1, 1]\n        ],\n        [\n            [5380, 7746],\n            [20, -2],\n            [5, 9],\n            [9, -9],\n            [11, -1],\n            [0, 16],\n            [10, 6],\n            [2, 24],\n            [23, 16]\n        ],\n        [\n            [5460, 7805],\n            [8, -7],\n            [21, -26],\n            [23, -11],\n            [10, 9]\n        ],\n        [\n            [3008, 6124],\n            [-19, 10],\n            [-13, -5],\n            [-17, 5],\n            [-13, -11],\n            [-15, 18],\n            [3, 19],\n            [25, -8],\n            [21, -5],\n            [10, 13],\n            [-12, 26],\n            [0, 23],\n            [-18, 9],\n            [7, 16],\n            [17, -3],\n            [24, -9]\n        ],\n        [\n            [5471, 7900],\n            [14, -15],\n            [10, -6],\n            [24, 7],\n            [2, 12],\n            [11, 2],\n            [14, 9],\n            [3, -4],\n            [13, 8],\n            [6, 13],\n            [9, 4],\n            [30, -18],\n            [6, 6]\n        ],\n        [\n            [5613, 7918],\n            [15, -16],\n            [2, -16]\n        ],\n        [\n            [5630, 7886],\n            [-17, -12],\n            [-13, -40],\n            [-17, -40],\n            [-22, -11]\n        ],\n        [\n            [5561, 7783],\n            [-17, 2],\n            [-22, -15]\n        ],\n        [\n            [5460, 7805],\n            [-6, 20],\n            [-4, 0]\n        ],\n        [\n            [8352, 4453],\n            [-11, -2],\n            [-37, 42],\n            [26, 11],\n            [14, -18],\n            [10, -17],\n            [-2, -16]\n        ],\n        [\n            [8471, 4532],\n            [2, -11],\n            [1, -18]\n        ],\n        [\n            [8474, 4503],\n            [-18, -45],\n            [-24, -13],\n            [-3, 8],\n            [2, 20],\n            [12, 36],\n            [28, 23]\n        ],\n        [\n            [8274, 4579],\n            [10, -16],\n            [17, 5],\n            [7, -25],\n            [-32, -12],\n            [-19, -8],\n            [-15, 1],\n            [10, 34],\n            [15, 0],\n            [7, 21]\n        ],\n        [\n            [8413, 4579],\n            [-4, -32],\n            [-42, -17],\n            [-37, 7],\n            [0, 22],\n            [22, 12],\n            [18, -18],\n            [18, 5],\n            [25, 21]\n        ],\n        [\n            [8017, 4657],\n            [53, -6],\n            [6, 25],\n            [51, -29],\n            [10, -38],\n            [42, -11],\n            [34, -35],\n            [-31, -23],\n            [-31, 24],\n            [-25, -1],\n            [-29, 4],\n            [-26, 11],\n            [-32, 22],\n            [-21, 6],\n            [-11, -7],\n            [-51, 24],\n            [-5, 25],\n            [-25, 5],\n            [19, 56],\n            [34, -3],\n            [22, -23],\n            [12, -5],\n            [4, -21]\n        ],\n        [\n            [8741, 4690],\n            [-14, -40],\n            [-3, 45],\n            [5, 21],\n            [6, 20],\n            [7, -17],\n            [-1, -29]\n        ],\n        [\n            [8534, 4853],\n            [-11, -19],\n            [-19, 10],\n            [-5, 26],\n            [28, 3],\n            [7, -20]\n        ],\n        [\n            [8623, 4875],\n            [10, -45],\n            [-23, 24],\n            [-23, 5],\n            [-16, -4],\n            [-19, 2],\n            [6, 33],\n            [35, 2],\n            [30, -17]\n        ],\n        [\n            [8916, 4904],\n            [0, -193],\n            [1, -192]\n        ],\n        [\n            [8917, 4519],\n            [-25, 48],\n            [-28, 12],\n            [-7, -17],\n            [-35, -1],\n            [12, 48],\n            [17, 16],\n            [-7, 64],\n            [-14, 50],\n            [-53, 50],\n            [-23, 5],\n            [-42, 54],\n            [-8, -28],\n            [-11, -5],\n            [-6, 21],\n            [0, 26],\n            [-21, 29],\n            [29, 21],\n            [20, -1],\n            [-2, 16],\n            [-41, 0],\n            [-11, 35],\n            [-25, 11],\n            [-11, 29],\n            [37, 14],\n            [14, 20],\n            [45, -25],\n            [4, -22],\n            [8, -95],\n            [29, -35],\n            [23, 62],\n            [32, 36],\n            [25, 0],\n            [23, -21],\n            [21, -21],\n            [30, -11]\n        ],\n        [\n            [8478, 5141],\n            [-22, -58],\n            [-21, -12],\n            [-27, 12],\n            [-46, -3],\n            [-24, -8],\n            [-4, -45],\n            [24, -53],\n            [15, 27],\n            [52, 20],\n            [-2, -27],\n            [-12, 9],\n            [-12, -35],\n            [-25, -23],\n            [27, -76],\n            [-5, -20],\n            [25, -68],\n            [-1, -39],\n            [-14, -17],\n            [-11, 20],\n            [13, 49],\n            [-27, -23],\n            [-7, 16],\n            [3, 23],\n            [-20, 35],\n            [3, 57],\n            [-19, -18],\n            [2, -69],\n            [1, -84],\n            [-17, -9],\n            [-12, 18],\n            [8, 54],\n            [-4, 57],\n            [-12, 1],\n            [-9, 40],\n            [12, 39],\n            [4, 47],\n            [14, 89],\n            [5, 24],\n            [24, 44],\n            [22, -18],\n            [35, -8],\n            [32, 3],\n            [27, 43],\n            [5, -14]\n        ],\n        [\n            [8574, 5124],\n            [-2, -51],\n            [-14, 6],\n            [-4, -36],\n            [11, -32],\n            [-8, -7],\n            [-11, 38],\n            [-8, 75],\n            [6, 47],\n            [9, 22],\n            [2, -32],\n            [16, -5],\n            [3, -25]\n        ],\n        [\n            [8045, 5176],\n            [5, -39],\n            [19, -34],\n            [18, 12],\n            [18, -4],\n            [16, 30],\n            [13, 5],\n            [26, -17],\n            [23, 13],\n            [14, 82],\n            [11, 21],\n            [10, 67],\n            [32, 0],\n            [24, -10]\n        ],\n        [\n            [8274, 5302],\n            [-16, -53],\n            [20, -56],\n            [-5, -28],\n            [32, -54],\n            [-33, -7],\n            [-10, -40],\n            [2, -54],\n            [-27, -40],\n            [-1, -59],\n            [-10, -91],\n            [-5, 21],\n            [-31, -26],\n            [-11, 36],\n            [-20, 3],\n            [-14, 19],\n            [-33, -21],\n            [-10, 29],\n            [-18, -4],\n            [-23, 7],\n            [-4, 79],\n            [-14, 17],\n            [-13, 50],\n            [-4, 52],\n            [3, 55],\n            [16, 39]\n        ],\n        [\n            [7939, 4712],\n            [-31, -1],\n            [-24, 49],\n            [-35, 48],\n            [-12, 36],\n            [-21, 48],\n            [-14, 44],\n            [-21, 83],\n            [-24, 49],\n            [-9, 51],\n            [-10, 46],\n            [-25, 37],\n            [-14, 51],\n            [-21, 33],\n            [-29, 65],\n            [-3, 30],\n            [18, -2],\n            [43, -12],\n            [25, -57],\n            [21, -40],\n            [16, -25],\n            [26, -63],\n            [28, -1],\n            [23, -41],\n            [16, -49],\n            [22, -27],\n            [-12, -49],\n            [16, -20],\n            [10, -2],\n            [5, -41],\n            [10, -33],\n            [20, -5],\n            [14, -37],\n            [-7, -74],\n            [-1, -91]\n        ],\n        [\n            [7252, 6841],\n            [-17, -27],\n            [-11, -55],\n            [27, -23],\n            [26, -29],\n            [36, -33],\n            [38, -8],\n            [16, -30],\n            [22, -5],\n            [33, -14],\n            [23, 1],\n            [4, 23],\n            [-4, 38],\n            [2, 25]\n        ],\n        [\n            [7703, 6727],\n            [2, -22],\n            [-10, -11],\n            [2, -36],\n            [-19, 10],\n            [-36, -41],\n            [0, -33],\n            [-15, -50],\n            [-1, -29],\n            [-13, -48],\n            [-21, 13],\n            [-1, -61],\n            [-7, -20],\n            [3, -25],\n            [-14, -14]\n        ],\n        [\n            [7472, 6360],\n            [-4, -21],\n            [-19, 1],\n            [-34, -13],\n            [2, -44],\n            [-15, -35],\n            [-40, -40],\n            [-31, -69],\n            [-21, -38],\n            [-28, -38],\n            [0, -27],\n            [-13, -15],\n            [-26, -21],\n            [-12, -3],\n            [-9, -45],\n            [6, -77],\n            [1, -49],\n            [-11, -56],\n            [0, -101],\n            [-15, -2],\n            [-12, -46],\n            [8, -19],\n            [-25, -17],\n            [-10, -40],\n            [-11, -17],\n            [-26, 55],\n            [-13, 83],\n            [-11, 60],\n            [-9, 28],\n            [-15, 56],\n            [-7, 74],\n            [-5, 37],\n            [-25, 81],\n            [-12, 115],\n            [-8, 75],\n            [0, 72],\n            [-5, 55],\n            [-41, -35],\n            [-19, 7],\n            [-36, 71],\n            [13, 22],\n            [-8, 23],\n            [-33, 50]\n        ],\n        [\n            [6893, 6457],\n            [19, 40],\n            [61, -1],\n            [-6, 51],\n            [-15, 30],\n            [-4, 46],\n            [-18, 26],\n            [31, 62],\n            [32, -4],\n            [29, 61],\n            [18, 60],\n            [27, 60],\n            [-1, 42],\n            [24, 34],\n            [-23, 29],\n            [-9, 40],\n            [-10, 52],\n            [14, 25],\n            [42, -14],\n            [31, 9],\n            [26, 49]\n        ],\n        [\n            [4827, 8240],\n            [5, -42],\n            [-21, -53],\n            [-49, -35],\n            [-40, 9],\n            [23, 62],\n            [-15, 60],\n            [38, 46],\n            [21, 28]\n        ],\n        [\n            [6497, 7255],\n            [25, 12],\n            [19, 33],\n            [19, -1],\n            [12, 11],\n            [20, -6],\n            [31, -30],\n            [22, -6],\n            [31, -53],\n            [21, -2],\n            [3, -49]\n        ],\n        [\n            [6690, 6820],\n            [14, -31],\n            [11, -36],\n            [27, -26],\n            [1, -52],\n            [13, -10],\n            [2, -27],\n            [-40, -30],\n            [-10, -69]\n        ],\n        [\n            [6708, 6539],\n            [-53, 18],\n            [-30, 13],\n            [-31, 8],\n            [-12, 73],\n            [-13, 10],\n            [-22, -11],\n            [-28, -28],\n            [-34, 20],\n            [-28, 45],\n            [-27, 17],\n            [-18, 56],\n            [-21, 79],\n            [-15, -10],\n            [-17, 20],\n            [-11, -24]\n        ],\n        [\n            [6348, 6825],\n            [-15, 32],\n            [0, 31],\n            [-9, 0],\n            [5, 43],\n            [-15, 45],\n            [-34, 32],\n            [-19, 56],\n            [6, 46],\n            [14, 21],\n            [-2, 34],\n            [-18, 18],\n            [-18, 70]\n        ],\n        [\n            [6243, 7253],\n            [-15, 48],\n            [5, 18],\n            [-8, 68],\n            [19, 17]\n        ],\n        [\n            [6357, 7321],\n            [9, -43],\n            [26, -13],\n            [20, -29],\n            [39, -10],\n            [44, 15],\n            [2, 14]\n        ],\n        [\n            [6348, 6825],\n            [-16, 3]\n        ],\n        [\n            [6332, 6828],\n            [-19, 5],\n            [-20, -56]\n        ],\n        [\n            [6293, 6777],\n            [-52, 4],\n            [-78, 119],\n            [-41, 41],\n            [-34, 16]\n        ],\n        [\n            [6088, 6957],\n            [-11, 72]\n        ],\n        [\n            [6077, 7029],\n            [61, 62],\n            [11, 71],\n            [-3, 43],\n            [16, 15],\n            [14, 37]\n        ],\n        [\n            [6176, 7257],\n            [12, 9],\n            [32, -8],\n            [10, -15],\n            [13, 10]\n        ],\n        [\n            [4597, 8984],\n            [-7, -39],\n            [31, -40],\n            [-36, -45],\n            [-80, -41],\n            [-24, -10],\n            [-36, 8],\n            [-78, 19],\n            [28, 26],\n            [-61, 29],\n            [49, 12],\n            [-1, 17],\n            [-58, 14],\n            [19, 38],\n            [42, 9],\n            [43, -40],\n            [42, 32],\n            [35, -17],\n            [45, 32],\n            [47, -4]\n        ],\n        [\n            [5992, 6990],\n            [-5, -19]\n        ],\n        [\n            [5987, 6971],\n            [-10, 8],\n            [-6, -39],\n            [7, -7],\n            [-7, -8],\n            [-1, -15],\n            [13, 8]\n        ],\n        [\n            [5983, 6918],\n            [0, -23],\n            [-14, -95]\n        ],\n        [\n            [5951, 6902],\n            [8, 19],\n            [-2, 4],\n            [8, 27],\n            [5, 45],\n            [4, 15],\n            [1, 0]\n        ],\n        [\n            [5975, 7012],\n            [9, 0],\n            [3, 11],\n            [7, 0]\n        ],\n        [\n            [5994, 7023],\n            [1, -24],\n            [-4, -9],\n            [1, 0]\n        ],\n        [\n            [5431, 7316],\n            [-10, -46],\n            [4, -19],\n            [-6, -30],\n            [-21, 22],\n            [-14, 7],\n            [-39, 30],\n            [4, 30],\n            [32, -6],\n            [28, 7],\n            [22, 5]\n        ],\n        [\n            [5255, 7492],\n            [17, -42],\n            [-4, -78],\n            [-13, 4],\n            [-11, -20],\n            [-10, 16],\n            [-2, 71],\n            [-6, 34],\n            [15, -3],\n            [14, 18]\n        ],\n        [\n            [5383, 7805],\n            [-3, -29],\n            [7, -25]\n        ],\n        [\n            [5387, 7751],\n            [-22, 8],\n            [-23, -20],\n            [1, -30],\n            [-3, -17],\n            [9, -30],\n            [26, -29],\n            [14, -49],\n            [31, -48],\n            [22, 0],\n            [7, -13],\n            [-8, -11],\n            [25, -22],\n            [20, -18],\n            [24, -30],\n            [3, -11],\n            [-5, -22],\n            [-16, 28],\n            [-24, 10],\n            [-12, -39],\n            [20, -21],\n            [-3, -31],\n            [-11, -4],\n            [-15, -50],\n            [-12, -5],\n            [0, 18],\n            [6, 32],\n            [6, 12],\n            [-11, 35],\n            [-8, 29],\n            [-12, 8],\n            [-8, 25],\n            [-18, 11],\n            [-12, 24],\n            [-21, 4],\n            [-21, 26],\n            [-26, 39],\n            [-19, 34],\n            [-8, 58],\n            [-14, 7],\n            [-23, 20],\n            [-12, -8],\n            [-16, -28],\n            [-12, -4]\n        ],\n        [\n            [2845, 6150],\n            [19, -5],\n            [14, -15],\n            [5, -16],\n            [-19, -1],\n            [-9, -10],\n            [-15, 10],\n            [-16, 21],\n            [3, 14],\n            [12, 4],\n            [6, -2]\n        ],\n        [\n            [5992, 6990],\n            [31, -24],\n            [54, 63]\n        ],\n        [\n            [6088, 6957],\n            [-5, -8],\n            [-56, -30],\n            [28, -59],\n            [-9, -10],\n            [-5, -20],\n            [-21, -8],\n            [-7, -21],\n            [-12, -19],\n            [-31, 10]\n        ],\n        [\n            [5970, 6792],\n            [-1, 8]\n        ],\n        [\n            [5983, 6918],\n            [4, 17],\n            [0, 36]\n        ],\n        [\n            [8739, 7075],\n            [4, -20],\n            [-16, -36],\n            [-11, 19],\n            [-15, -14],\n            [-7, -34],\n            [-18, 16],\n            [0, 28],\n            [15, 36],\n            [16, -7],\n            [12, 25],\n            [20, -13]\n        ],\n        [\n            [8915, 7252],\n            [-10, -47],\n            [4, -30],\n            [-14, -42],\n            [-35, -27],\n            [-49, -4],\n            [-40, -67],\n            [-19, 22],\n            [-1, 44],\n            [-48, -13],\n            [-33, -27],\n            [-32, -2],\n            [28, -43],\n            [-19, -101],\n            [-18, -24],\n            [-13, 23],\n            [7, 53],\n            [-18, 17],\n            [-11, 41],\n            [26, 18],\n            [15, 37],\n            [28, 30],\n            [20, 41],\n            [55, 17],\n            [30, -12],\n            [29, 105],\n            [19, -28],\n            [40, 59],\n            [16, 23],\n            [18, 72],\n            [-5, 67],\n            [11, 37],\n            [30, 11],\n            [15, -82],\n            [-1, -48],\n            [-25, -59],\n            [0, -61]\n        ],\n        [\n            [8997, 7667],\n            [19, -12],\n            [20, 25],\n            [6, -67],\n            [-41, -16],\n            [-25, -59],\n            [-43, 41],\n            [-15, -65],\n            [-31, -1],\n            [-4, 59],\n            [14, 46],\n            [29, 3],\n            [8, 82],\n            [9, 46],\n            [32, -62],\n            [22, -20]\n        ],\n        [\n            [6970, 7554],\n            [-15, -10],\n            [-37, -42],\n            [-12, -42],\n            [-11, 0],\n            [-7, 28],\n            [-36, 2],\n            [-5, 48],\n            [-14, 0],\n            [2, 60],\n            [-33, 43],\n            [-48, -5],\n            [-32, -8],\n            [-27, 53],\n            [-22, 22],\n            [-43, 43],\n            [-6, 5],\n            [-71, -35],\n            [1, -218]\n        ],\n        [\n            [6554, 7498],\n            [-14, -3],\n            [-20, 46],\n            [-18, 17],\n            [-32, -12],\n            [-12, -20]\n        ],\n        [\n            [6458, 7526],\n            [-2, 14],\n            [7, 25],\n            [-5, 21],\n            [-32, 20],\n            [-13, 53],\n            [-15, 15],\n            [-1, 19],\n            [27, -6],\n            [1, 44],\n            [23, 9],\n            [25, -9],\n            [5, 58],\n            [-5, 36],\n            [-28, -2],\n            [-24, 14],\n            [-32, -26],\n            [-26, -12]\n        ],\n        [\n            [6363, 7799],\n            [-14, 9],\n            [3, 31],\n            [-18, 39],\n            [-20, -2],\n            [-24, 40],\n            [16, 45],\n            [-8, 12],\n            [22, 65],\n            [29, -34],\n            [3, 43],\n            [58, 64],\n            [43, 2],\n            [61, -41],\n            [33, -24],\n            [30, 25],\n            [44, 1],\n            [35, -30],\n            [8, 17],\n            [39, -2],\n            [7, 28],\n            [-45, 40],\n            [27, 29],\n            [-5, 16],\n            [26, 15],\n            [-20, 41],\n            [13, 20],\n            [104, 21],\n            [13, 14],\n            [70, 22],\n            [25, 24],\n            [50, -12],\n            [9, -61],\n            [29, 14],\n            [35, -20],\n            [-2, -32],\n            [27, 3],\n            [69, 56],\n            [-10, -19],\n            [35, -46],\n            [62, -150],\n            [15, 31],\n            [39, -34],\n            [39, 16],\n            [16, -11],\n            [13, -34],\n            [20, -12],\n            [11, -25],\n            [36, 8],\n            [15, -36]\n        ],\n        [\n            [7229, 7559],\n            [-17, 9],\n            [-14, 21],\n            [-42, 6],\n            [-46, 2],\n            [-10, -6],\n            [-39, 24],\n            [-16, -12],\n            [-4, -35],\n            [-46, 21],\n            [-18, -9],\n            [-7, -26]\n        ],\n        [\n            [6155, 4958],\n            [-20, -24],\n            [-7, -24],\n            [-10, -4],\n            [-4, -42],\n            [-9, -24],\n            [-5, -39],\n            [-12, -20]\n        ],\n        [\n            [6088, 4781],\n            [-40, 59],\n            [-1, 35],\n            [-101, 120],\n            [-5, 6]\n        ],\n        [\n            [5941, 5001],\n            [0, 63],\n            [8, 24],\n            [14, 39],\n            [10, 43],\n            [-13, 68],\n            [-3, 30],\n            [-13, 41]\n        ],\n        [\n            [5944, 5309],\n            [17, 35],\n            [19, 39]\n        ],\n        [\n            [6162, 5289],\n            [-24, -67],\n            [0, -215],\n            [17, -49]\n        ],\n        [\n            [7046, 7387],\n            [-53, -9],\n            [-34, 19],\n            [-30, -4],\n            [3, 34],\n            [30, -10],\n            [10, 18]\n        ],\n        [\n            [6972, 7435],\n            [21, -6],\n            [36, 43],\n            [-33, 31],\n            [-20, -15],\n            [-21, 22],\n            [24, 39],\n            [-9, 5]\n        ],\n        [\n            [7849, 5777],\n            [-7, 72],\n            [18, 49],\n            [36, 11],\n            [26, -8]\n        ],\n        [\n            [7922, 5901],\n            [23, -23],\n            [12, 40],\n            [25, -21]\n        ],\n        [\n            [7982, 5897],\n            [6, -40],\n            [-3, -71],\n            [-47, -45],\n            [13, -36],\n            [-30, -4],\n            [-24, -24]\n        ],\n        [\n            [7897, 5677],\n            [-23, 9],\n            [-11, 30],\n            [-14, 61]\n        ],\n        [\n            [8564, 7339],\n            [24, -70],\n            [7, -38],\n            [0, -68],\n            [-10, -33],\n            [-25, -11],\n            [-22, -25],\n            [-25, -5],\n            [-3, 32],\n            [5, 45],\n            [-13, 61],\n            [21, 10],\n            [-19, 51]\n        ],\n        [\n            [8504, 7288],\n            [2, 5],\n            [12, -2],\n            [11, 27],\n            [20, 2],\n            [11, 4],\n            [4, 15]\n        ],\n        [\n            [5557, 7574],\n            [5, 13]\n        ],\n        [\n            [5562, 7587],\n            [7, 4],\n            [4, 20],\n            [5, 3],\n            [4, -8],\n            [5, -4],\n            [3, -10],\n            [5, -2],\n            [5, -11],\n            [4, 0],\n            [-3, -14],\n            [-3, -7],\n            [1, -5]\n        ],\n        [\n            [5599, 7553],\n            [-6, -2],\n            [-17, -9],\n            [-1, -12],\n            [-4, 0]\n        ],\n        [\n            [6332, 6828],\n            [6, -26],\n            [-3, -13],\n            [9, -45]\n        ],\n        [\n            [6344, 6744],\n            [-19, -1],\n            [-7, 28],\n            [-25, 6]\n        ],\n        [\n            [7922, 5901],\n            [9, 26],\n            [1, 50],\n            [-22, 52],\n            [-2, 58],\n            [-21, 48],\n            [-21, 4],\n            [-6, -20],\n            [-16, -2],\n            [-8, 10],\n            [-30, -35],\n            [0, 53],\n            [7, 62],\n            [-19, 3],\n            [-2, 36],\n            [-12, 18]\n        ],\n        [\n            [7780, 6264],\n            [6, 21],\n            [24, 39]\n        ],\n        [\n            [7837, 6385],\n            [17, -47],\n            [12, -54],\n            [34, 0],\n            [11, -52],\n            [-18, -15],\n            [-8, -21],\n            [34, -36],\n            [23, -70],\n            [17, -52],\n            [21, -41],\n            [7, -41],\n            [-5, -59]\n        ],\n        [\n            [5975, 7012],\n            [10, 49],\n            [14, 41],\n            [0, 2]\n        ],\n        [\n            [5999, 7104],\n            [13, -3],\n            [4, -23],\n            [-15, -22],\n            [-7, -33]\n        ],\n        [\n            [4785, 5315],\n            [-7, 0],\n            [-29, 28],\n            [-25, 45],\n            [-24, 32],\n            [-18, 38]\n        ],\n        [\n            [4682, 5458],\n            [6, 19],\n            [2, 17],\n            [12, 33],\n            [13, 27]\n        ],\n        [\n            [5412, 6408],\n            [-20, -22],\n            [-15, 33],\n            [-44, 25]\n        ],\n        [\n            [5263, 6848],\n            [13, 14],\n            [3, 25],\n            [-3, 24],\n            [19, 23],\n            [8, 19],\n            [14, 17],\n            [2, 45]\n        ],\n        [\n            [5319, 7015],\n            [32, -20],\n            [12, 5],\n            [23, -10],\n            [37, -26],\n            [13, -53],\n            [25, -11],\n            [39, -25],\n            [30, -29],\n            [13, 15],\n            [13, 27],\n            [-6, 45],\n            [9, 29],\n            [20, 28],\n            [19, 8],\n            [37, -12],\n            [10, -27],\n            [10, 0],\n            [9, -10],\n            [28, -7],\n            [6, -19]\n        ],\n        [\n            [5694, 6357],\n            [0, -118],\n            [-32, 0],\n            [0, -25]\n        ],\n        [\n            [5662, 6214],\n            [-111, 113],\n            [-111, 113],\n            [-28, -32]\n        ],\n        [\n            [7271, 5502],\n            [-4, -62],\n            [-12, -16],\n            [-24, -14],\n            [-13, 47],\n            [-5, 85],\n            [13, 96],\n            [19, -33],\n            [13, -42],\n            [13, -61]\n        ],\n        [\n            [5804, 3347],\n            [10, -18],\n            [-9, -29],\n            [-4, -19],\n            [-16, -9],\n            [-5, -19],\n            [-10, -6],\n            [-21, 46],\n            [15, 37],\n            [15, 23],\n            [13, 12],\n            [12, -18]\n        ],\n        [\n            [5631, 8267],\n            [-2, 15],\n            [3, 16],\n            [-13, 10],\n            [-29, 10]\n        ],\n        [\n            [5590, 8318],\n            [-6, 50]\n        ],\n        [\n            [5584, 8368],\n            [32, 18],\n            [47, -4],\n            [27, 6],\n            [4, -12],\n            [15, -4],\n            [26, -29]\n        ],\n        [\n            [5652, 8242],\n            [-7, 19],\n            [-14, 6]\n        ],\n        [\n            [5584, 8368],\n            [1, 44],\n            [14, 37],\n            [26, 20],\n            [22, -44],\n            [22, 1],\n            [6, 46]\n        ],\n        [\n            [5757, 8453],\n            [14, -14],\n            [2, -28],\n            [9, -35]\n        ],\n        [\n            [4759, 6691],\n            [-4, 0],\n            [0, -31],\n            [-17, -2],\n            [-9, -14],\n            [-13, 0],\n            [-10, 8],\n            [-23, -6],\n            [-9, -46],\n            [-9, -5],\n            [-13, -74],\n            [-38, -64],\n            [-9, -81],\n            [-12, -27],\n            [-3, -21],\n            [-63, -5]\n        ],\n        [\n            [4527, 6323],\n            [1, 27],\n            [11, 17],\n            [9, 30],\n            [-2, 20],\n            [10, 42],\n            [15, 38],\n            [9, 9],\n            [8, 35],\n            [0, 31],\n            [10, 37],\n            [19, 21],\n            [18, 60],\n            [0, 1],\n            [14, 23],\n            [26, 6],\n            [22, 41],\n            [14, 16],\n            [23, 49],\n            [-7, 73],\n            [10, 51],\n            [4, 31],\n            [18, 40],\n            [28, 27],\n            [21, 25],\n            [18, 61],\n            [9, 36],\n            [20, 0],\n            [17, -25],\n            [26, 4],\n            [29, -13],\n            [12, -1]\n        ],\n        [\n            [5739, 7906],\n            [6, 9],\n            [19, 6],\n            [20, -19],\n            [12, -2],\n            [12, -16],\n            [-2, -20],\n            [11, -9],\n            [4, -25],\n            [9, -15],\n            [-2, -9],\n            [5, -6],\n            [-7, -4],\n            [-16, 1],\n            [-3, 9],\n            [-6, -5],\n            [2, -11],\n            [-7, -19],\n            [-5, -20],\n            [-7, -6]\n        ],\n        [\n            [5784, 7745],\n            [-5, 27],\n            [3, 25],\n            [-1, 26],\n            [-16, 35],\n            [-9, 25],\n            [-9, 17],\n            [-8, 6]\n        ],\n        [\n            [6376, 4321],\n            [7, -25],\n            [7, -39],\n            [4, -71],\n            [7, -28],\n            [-2, -28],\n            [-5, -18],\n            [-10, 35],\n            [-5, -18],\n            [5, -43],\n            [-2, -25],\n            [-8, -14],\n            [-1, -50],\n            [-11, -69],\n            [-14, -81],\n            [-17, -112],\n            [-11, -82],\n            [-12, -69],\n            [-23, -14],\n            [-24, -25],\n            [-16, 15],\n            [-22, 21],\n            [-8, 31],\n            [-2, 53],\n            [-10, 47],\n            [-2, 42],\n            [5, 43],\n            [13, 10],\n            [0, 20],\n            [13, 45],\n            [2, 37],\n            [-6, 28],\n            [-5, 38],\n            [-2, 54],\n            [9, 33],\n            [4, 38],\n            [14, 2],\n            [15, 12],\n            [11, 10],\n            [12, 1],\n            [16, 34],\n            [23, 36],\n            [8, 30],\n            [-4, 25],\n            [12, -7],\n            [15, 41],\n            [1, 36],\n            [9, 26],\n            [10, -25]\n        ],\n        [\n            [2301, 6586],\n            [-10, -52],\n            [-5, -43],\n            [-2, -79],\n            [-3, -29],\n            [5, -32],\n            [9, -29],\n            [5, -45],\n            [19, -44],\n            [6, -34],\n            [11, -29],\n            [29, -16],\n            [12, -25],\n            [24, 17],\n            [21, 6],\n            [21, 11],\n            [18, 10],\n            [17, 24],\n            [7, 34],\n            [2, 50],\n            [5, 17],\n            [19, 16],\n            [29, 13],\n            [25, -2],\n            [17, 5],\n            [6, -12],\n            [-1, -29],\n            [-15, -35],\n            [-6, -36],\n            [5, -10],\n            [-4, -26],\n            [-7, -46],\n            [-7, 15],\n            [-6, -1]\n        ],\n        [\n            [2438, 5916],\n            [-32, 64],\n            [-14, 19],\n            [-23, 16],\n            [-15, -5],\n            [-22, -22],\n            [-14, -6],\n            [-20, 16],\n            [-21, 11],\n            [-26, 27],\n            [-21, 8],\n            [-31, 28],\n            [-23, 28],\n            [-7, 16],\n            [-16, 3],\n            [-28, 19],\n            [-12, 27],\n            [-30, 34],\n            [-14, 37],\n            [-6, 29],\n            [9, 5],\n            [-3, 17],\n            [7, 16],\n            [0, 20],\n            [-10, 27],\n            [-2, 23],\n            [-9, 30],\n            [-25, 59],\n            [-28, 46],\n            [-13, 37],\n            [-24, 24],\n            [-5, 14],\n            [4, 37],\n            [-14, 13],\n            [-17, 29],\n            [-7, 41],\n            [-14, 5],\n            [-17, 31],\n            [-13, 29],\n            [-1, 19],\n            [-15, 44],\n            [-10, 45],\n            [1, 23],\n            [-20, 23],\n            [-10, -2],\n            [-15, 16],\n            [-5, -24],\n            [5, -28],\n            [2, -45],\n            [10, -24],\n            [21, -41],\n            [4, -14],\n            [4, -4],\n            [4, -20],\n            [5, 1],\n            [6, -38],\n            [8, -15],\n            [6, -21],\n            [17, -30],\n            [10, -55],\n            [8, -26],\n            [8, -28],\n            [1, -31],\n            [13, -2],\n            [12, -27],\n            [10, -26],\n            [-1, -11],\n            [-12, -21],\n            [-5, 0],\n            [-7, 36],\n            [-18, 33],\n            [-20, 29],\n            [-14, 15],\n            [1, 43],\n            [-5, 32],\n            [-13, 19],\n            [-19, 26],\n            [-4, -8],\n            [-7, 16],\n            [-17, 14],\n            [-16, 34],\n            [2, 5],\n            [11, -4],\n            [11, 22],\n            [1, 27],\n            [-22, 42],\n            [-16, 17],\n            [-10, 36],\n            [-11, 39],\n            [-12, 47],\n            [-12, 54]\n        ],\n        [\n            [1746, 6980],\n            [32, 4],\n            [35, 7],\n            [-2, -12],\n            [41, -29],\n            [64, -41],\n            [55, 0],\n            [22, 0],\n            [0, 24],\n            [48, 0],\n            [10, -20],\n            [15, -19],\n            [16, -26],\n            [9, -31],\n            [7, -32],\n            [15, -18],\n            [23, -18],\n            [17, 47],\n            [23, 1],\n            [19, -24],\n            [14, -40],\n            [10, -35],\n            [16, -34],\n            [6, -41],\n            [8, -28],\n            [22, -18],\n            [20, -13],\n            [10, 2]\n        ],\n        [\n            [5599, 7553],\n            [9, 4],\n            [13, 1]\n        ],\n        [\n            [4661, 5921],\n            [10, 11],\n            [4, 35],\n            [9, 1],\n            [20, -16],\n            [15, 11],\n            [11, -4],\n            [4, 13],\n            [112, 1],\n            [6, 42],\n            [-5, 7],\n            [-13, 255],\n            [-14, 255],\n            [43, 1]\n        ],\n        [\n            [5118, 6189],\n            [0, -136],\n            [-15, -39],\n            [-2, -37],\n            [-25, -9],\n            [-38, -5],\n            [-10, -21],\n            [-18, -3]\n        ],\n        [\n            [4680, 5793],\n            [1, 18],\n            [-2, 23],\n            [-11, 16],\n            [-5, 34],\n            [-2, 37]\n        ],\n        [\n            [7737, 5644],\n            [-3, 44],\n            [9, 45],\n            [-10, 35],\n            [3, 65],\n            [-12, 30],\n            [-9, 71],\n            [-5, 75],\n            [-12, 49],\n            [-18, -30],\n            [-32, -42],\n            [-15, 5],\n            [-17, 14],\n            [9, 73],\n            [-6, 56],\n            [-21, 68],\n            [3, 21],\n            [-16, 7],\n            [-20, 49]\n        ],\n        [\n            [7780, 6264],\n            [-16, -14],\n            [-16, -26],\n            [-20, -2],\n            [-12, -64],\n            [-12, -11],\n            [14, -52],\n            [17, -43],\n            [12, -39],\n            [-11, -51],\n            [-9, -11],\n            [6, -30],\n            [19, -47],\n            [3, -33],\n            [0, -27],\n            [11, -54],\n            [-16, -55],\n            [-13, -61]\n        ],\n        [\n            [5538, 7532],\n            [-6, 4],\n            [-8, 19],\n            [-12, 12]\n        ],\n        [\n            [5533, 7629],\n            [8, -10],\n            [4, -9],\n            [9, -6],\n            [10, -12],\n            [-2, -5]\n        ],\n        [\n            [7437, 7970],\n            [29, 10],\n            [53, 51],\n            [42, 28],\n            [24, -18],\n            [29, -1],\n            [19, -28],\n            [28, -2],\n            [40, -15],\n            [27, 41],\n            [-11, 35],\n            [28, 61],\n            [31, -24],\n            [26, -7],\n            [32, -15],\n            [6, -44],\n            [39, -25],\n            [26, 11],\n            [36, 7],\n            [27, -7],\n            [28, -29],\n            [16, -30],\n            [26, 1],\n            [35, -10],\n            [26, 15],\n            [36, 9],\n            [41, 42],\n            [17, -6],\n            [14, -20],\n            [33, 5]\n        ],\n        [\n            [5959, 4377],\n            [21, 5],\n            [34, -17],\n            [7, 8],\n            [19, 1],\n            [10, 18],\n            [17, -1],\n            [30, 23],\n            [22, 34]\n        ],\n        [\n            [6119, 4448],\n            [5, -26],\n            [-1, -59],\n            [3, -52],\n            [1, -92],\n            [5, -29],\n            [-8, -43],\n            [-11, -41],\n            [-18, -36],\n            [-25, -23],\n            [-31, -28],\n            [-32, -64],\n            [-10, -11],\n            [-20, -42],\n            [-11, -13],\n            [-3, -42],\n            [14, -45],\n            [5, -35],\n            [0, -17],\n            [5, 3],\n            [-1, -58],\n            [-4, -28],\n            [6, -10],\n            [-4, -25],\n            [-11, -21],\n            [-23, -20],\n            [-34, -32],\n            [-12, -21],\n            [3, -25],\n            [7, -4],\n            [-3, -31]\n        ],\n        [\n            [5911, 3478],\n            [-21, 0]\n        ],\n        [\n            [5890, 3478],\n            [-2, 26],\n            [-4, 27]\n        ],\n        [\n            [5884, 3531],\n            [-3, 21],\n            [5, 66],\n            [-7, 42],\n            [-13, 83]\n        ],\n        [\n            [5866, 3743],\n            [29, 67],\n            [7, 43],\n            [5, 5],\n            [3, 35],\n            [-5, 17],\n            [1, 44],\n            [6, 41],\n            [0, 75],\n            [-15, 19],\n            [-13, 4],\n            [-6, 15],\n            [-13, 12],\n            [-23, -1],\n            [-2, 22]\n        ],\n        [\n            [5840, 4141],\n            [-2, 42],\n            [84, 49]\n        ],\n        [\n            [5922, 4232],\n            [16, -28],\n            [8, 5],\n            [11, -15],\n            [1, -23],\n            [-6, -28],\n            [2, -42],\n            [19, -36],\n            [8, 41],\n            [12, 12],\n            [-2, 76],\n            [-12, 43],\n            [-10, 19],\n            [-10, -1],\n            [-7, 77],\n            [7, 45]\n        ],\n        [\n            [4661, 5921],\n            [-18, 41],\n            [-17, 43],\n            [-18, 16],\n            [-13, 17],\n            [-16, -1],\n            [-13, -12],\n            [-14, 5],\n            [-10, -19]\n        ],\n        [\n            [4542, 6011],\n            [-2, 32],\n            [8, 29],\n            [3, 55],\n            [-3, 59],\n            [-3, 29],\n            [2, 30],\n            [-7, 28],\n            [-14, 25]\n        ],\n        [\n            [4526, 6298],\n            [6, 20],\n            [108, -1],\n            [-5, 86],\n            [7, 30],\n            [26, 5],\n            [-1, 152],\n            [91, -4],\n            [0, 90]\n        ],\n        [\n            [5922, 4232],\n            [-15, 15],\n            [9, 55],\n            [9, 21],\n            [-6, 49],\n            [6, 48],\n            [5, 16],\n            [-7, 50],\n            [-14, 26]\n        ],\n        [\n            [5909, 4512],\n            [28, -11],\n            [5, -16],\n            [10, -28],\n            [7, -80]\n        ],\n        [\n            [7836, 5425],\n            [7, -5],\n            [16, -36],\n            [12, -40],\n            [2, -39],\n            [-3, -27],\n            [2, -21],\n            [2, -35],\n            [10, -16],\n            [11, -52],\n            [-1, -20],\n            [-19, -4],\n            [-27, 44],\n            [-32, 47],\n            [-4, 30],\n            [-16, 39],\n            [-4, 49],\n            [-10, 32],\n            [4, 43],\n            [-7, 25]\n        ],\n        [\n            [7779, 5439],\n            [5, 11],\n            [23, -26],\n            [2, -30],\n            [18, 7],\n            [9, 24]\n        ],\n        [\n            [8045, 5176],\n            [21, -20],\n            [21, 11],\n            [6, 50],\n            [12, 11],\n            [33, 13],\n            [20, 47],\n            [14, 37]\n        ],\n        [\n            [8206, 5379],\n            [22, 41],\n            [14, 47],\n            [11, 0],\n            [14, -30],\n            [1, -26],\n            [19, -16],\n            [23, -18],\n            [-2, -23],\n            [-19, -3],\n            [5, -29],\n            [-20, -20]\n        ],\n        [\n            [5453, 3369],\n            [-20, 45],\n            [-11, 43],\n            [-6, 58],\n            [-7, 42],\n            [-9, 91],\n            [-1, 71],\n            [-3, 32],\n            [-11, 25],\n            [-15, 48],\n            [-14, 71],\n            [-6, 37],\n            [-23, 58],\n            [-2, 45]\n        ],\n        [\n            [5644, 4022],\n            [23, 14],\n            [18, -4],\n            [11, -13],\n            [0, -5]\n        ],\n        [\n            [5552, 3594],\n            [0, -218],\n            [-25, -30],\n            [-15, -4],\n            [-17, 11],\n            [-13, 4],\n            [-4, 25],\n            [-11, 17],\n            [-14, -30]\n        ],\n        [\n            [9604, 3812],\n            [23, -36],\n            [14, -28],\n            [-10, -14],\n            [-16, 16],\n            [-19, 27],\n            [-18, 31],\n            [-19, 42],\n            [-4, 20],\n            [12, -1],\n            [16, -20],\n            [12, -20],\n            [9, -17]\n        ],\n        [\n            [5412, 6408],\n            [7, -92],\n            [10, -15],\n            [1, -19],\n            [11, -20],\n            [-6, -25],\n            [-11, -120],\n            [-1, -77],\n            [-35, -56],\n            [-12, -78],\n            [11, -22],\n            [0, -38],\n            [18, -1],\n            [-3, -28]\n        ],\n        [\n            [5393, 5795],\n            [-5, -1],\n            [-19, 64],\n            [-6, 3],\n            [-22, -33],\n            [-21, 17],\n            [-15, 3],\n            [-8, -8],\n            [-17, 2],\n            [-16, -25],\n            [-14, -2],\n            [-34, 31],\n            [-13, -15],\n            [-14, 1],\n            [-10, 23],\n            [-28, 22],\n            [-30, -7],\n            [-7, -13],\n            [-4, -34],\n            [-8, -24],\n            [-2, -53]\n        ],\n        [\n            [5236, 5339],\n            [-29, -21],\n            [-11, 3],\n            [-10, -13],\n            [-23, 1],\n            [-15, 37],\n            [-9, 43],\n            [-19, 39],\n            [-21, -1],\n            [-25, 0]\n        ],\n        [\n            [2619, 5713],\n            [-10, 18],\n            [-13, 24],\n            [-6, 20],\n            [-12, 19],\n            [-13, 26],\n            [3, 9],\n            [4, -9],\n            [2, 5]\n        ],\n        [\n            [2690, 5943],\n            [-2, -5],\n            [-2, -13],\n            [3, -22],\n            [-6, -20],\n            [-3, -24],\n            [-1, -26],\n            [1, -15],\n            [1, -27],\n            [-4, -6],\n            [-3, -25],\n            [2, -15],\n            [-6, -16],\n            [2, -16],\n            [4, -9]\n        ],\n        [\n            [5092, 8091],\n            [14, 16],\n            [24, 87],\n            [38, 25],\n            [23, -2]\n        ],\n        [\n            [5863, 9167],\n            [-47, -24],\n            [-22, -5]\n        ],\n        [\n            [5573, 9140],\n            [-17, -2],\n            [-4, -39],\n            [-53, 9],\n            [-7, -33],\n            [-27, 1],\n            [-18, -42],\n            [-28, -66],\n            [-43, -83],\n            [10, -20],\n            [-10, -24],\n            [-27, 1],\n            [-18, -55],\n            [2, -79],\n            [17, -29],\n            [-9, -70],\n            [-23, -40],\n            [-12, -34]\n        ],\n        [\n            [5306, 8535],\n            [-19, 36],\n            [-55, -69],\n            [-37, -13],\n            [-38, 30],\n            [-10, 63],\n            [-9, 137],\n            [26, 38],\n            [73, 49],\n            [55, 61],\n            [51, 82],\n            [66, 115],\n            [47, 44],\n            [76, 74],\n            [61, 26],\n            [46, -3],\n            [42, 49],\n            [51, -3],\n            [50, 12],\n            [87, -43],\n            [-36, -16],\n            [30, -37]\n        ],\n        [\n            [5686, 9657],\n            [-62, -24],\n            [-49, 13],\n            [19, 16],\n            [-16, 19],\n            [57, 11],\n            [11, -22],\n            [40, -13]\n        ],\n        [\n            [5506, 9766],\n            [92, -44],\n            [-70, -23],\n            [-15, -44],\n            [-25, -11],\n            [-13, -49],\n            [-34, -2],\n            [-59, 36],\n            [25, 21],\n            [-42, 17],\n            [-54, 50],\n            [-21, 46],\n            [75, 21],\n            [16, -20],\n            [39, 0],\n            [11, 21],\n            [40, 2],\n            [35, -21]\n        ],\n        [\n            [5706, 9808],\n            [55, -21],\n            [-41, -32],\n            [-81, -7],\n            [-82, 10],\n            [-5, 16],\n            [-40, 1],\n            [-30, 27],\n            [86, 17],\n            [40, -14],\n            [28, 17],\n            [70, -14]\n        ],\n        [\n            [9805, 2640],\n            [6, -24],\n            [20, 24],\n            [8, -25],\n            [0, -25],\n            [-10, -27],\n            [-18, -44],\n            [-14, -24],\n            [10, -28],\n            [-22, -1],\n            [-23, -22],\n            [-8, -39],\n            [-16, -60],\n            [-21, -26],\n            [-14, -17],\n            [-26, 1],\n            [-18, 20],\n            [-30, 4],\n            [-5, 22],\n            [15, 43],\n            [35, 59],\n            [18, 11],\n            [20, 22],\n            [24, 31],\n            [16, 31],\n            [13, 44],\n            [10, 15],\n            [5, 33],\n            [19, 27],\n            [6, -25]\n        ],\n        [\n            [9849, 2922],\n            [20, -63],\n            [1, 41],\n            [13, -16],\n            [4, -45],\n            [22, -19],\n            [19, -5],\n            [16, 22],\n            [14, -6],\n            [-7, -53],\n            [-8, -34],\n            [-22, 1],\n            [-7, -18],\n            [3, -25],\n            [-4, -11],\n            [-11, -32],\n            [-14, -41],\n            [-21, -23],\n            [-5, 15],\n            [-12, 9],\n            [16, 48],\n            [-9, 33],\n            [-30, 23],\n            [1, 22],\n            [20, 20],\n            [5, 46],\n            [-1, 38],\n            [-12, 40],\n            [1, 10],\n            [-13, 25],\n            [-22, 52],\n            [-12, 42],\n            [11, 4],\n            [15, -33],\n            [21, -15],\n            [8, -52]\n        ],\n        [\n            [6475, 6041],\n            [-9, 41],\n            [-22, 98]\n        ],\n        [\n            [6444, 6180],\n            [83, 59],\n            [19, 118],\n            [-13, 42]\n        ],\n        [\n            [6566, 6530],\n            [12, -40],\n            [16, -22],\n            [20, -8],\n            [17, -10],\n            [12, -34],\n            [8, -20],\n            [10, -7],\n            [0, -13],\n            [-10, -36],\n            [-5, -16],\n            [-12, -19],\n            [-10, -41],\n            [-13, 3],\n            [-5, -14],\n            [-5, -30],\n            [4, -39],\n            [-3, -7],\n            [-13, 0],\n            [-17, -22],\n            [-3, -29],\n            [-6, -12],\n            [-18, 0],\n            [-10, -15],\n            [0, -24],\n            [-14, -16],\n            [-15, 5],\n            [-19, -19],\n            [-12, -4]\n        ],\n        [\n            [6557, 6597],\n            [8, 20],\n            [3, -5],\n            [-2, -25],\n            [-4, -10]\n        ],\n        [\n            [6893, 6457],\n            [-20, 15],\n            [-9, 43],\n            [-21, 45],\n            [-51, -12],\n            [-45, -1],\n            [-39, -8]\n        ],\n        [\n            [2836, 5484],\n            [-9, 17],\n            [-6, 32],\n            [7, 16],\n            [-7, 4],\n            [-5, 20],\n            [-14, 16],\n            [-12, -4],\n            [-6, -20],\n            [-11, -15],\n            [-6, -2],\n            [-3, -13],\n            [13, -32],\n            [-7, -7],\n            [-4, -9],\n            [-13, -3],\n            [-5, 35],\n            [-4, -10],\n            [-9, 4],\n            [-5, 24],\n            [-12, 3],\n            [-7, 7],\n            [-12, 0],\n            [-1, -13],\n            [-3, 9]\n        ],\n        [\n            [2707, 5623],\n            [10, -22],\n            [-1, -12],\n            [11, -3],\n            [3, 5],\n            [8, -14],\n            [13, 4],\n            [12, 15],\n            [17, 12],\n            [9, 17],\n            [16, -3],\n            [-1, -6],\n            [15, -2],\n            [12, -10],\n            [10, -18],\n            [10, -16]\n        ],\n        [\n            [3045, 3974],\n            [-28, 33],\n            [-2, 25],\n            [-55, 59],\n            [-50, 65],\n            [-22, 36],\n            [-11, 49],\n            [4, 17],\n            [-23, 77],\n            [-28, 109],\n            [-26, 118],\n            [-11, 27],\n            [-9, 43],\n            [-21, 39],\n            [-20, 24],\n            [9, 26],\n            [-14, 57],\n            [9, 41],\n            [22, 37]\n        ],\n        [\n            [8510, 5555],\n            [2, -40],\n            [2, -33],\n            [-9, -54],\n            [-11, 60],\n            [-13, -30],\n            [9, -43],\n            [-8, -28],\n            [-32, 35],\n            [-8, 42],\n            [8, 28],\n            [-17, 28],\n            [-9, -24],\n            [-13, 2],\n            [-21, -33],\n            [-4, 17],\n            [11, 50],\n            [17, 17],\n            [15, 22],\n            [10, -27],\n            [21, 17],\n            [5, 26],\n            [19, 1],\n            [-1, 46],\n            [22, -28],\n            [3, -30],\n            [2, -21]\n        ],\n        [\n            [8443, 5665],\n            [-10, -20],\n            [-9, -37],\n            [-8, -17],\n            [-17, 40],\n            [5, 16],\n            [7, 17],\n            [3, 36],\n            [16, 4],\n            [-5, -40],\n            [21, 57],\n            [-3, -56]\n        ],\n        [\n            [8291, 5608],\n            [-37, -56],\n            [14, 41],\n            [20, 37],\n            [16, 41],\n            [15, 58],\n            [5, -48],\n            [-18, -33],\n            [-15, -40]\n        ],\n        [\n            [8385, 5760],\n            [16, -18],\n            [18, 0],\n            [0, -25],\n            [-13, -25],\n            [-18, -18],\n            [-1, 28],\n            [2, 30],\n            [-4, 28]\n        ],\n        [\n            [8485, 5776],\n            [8, -66],\n            [-21, 16],\n            [0, -20],\n            [7, -37],\n            [-13, -13],\n            [-1, 42],\n            [-9, 3],\n            [-4, 36],\n            [16, -5],\n            [0, 22],\n            [-17, 45],\n            [27, -1],\n            [7, -22]\n        ],\n        [\n            [8375, 5830],\n            [-7, -51],\n            [-12, 29],\n            [-15, 45],\n            [24, -2],\n            [10, -21]\n        ],\n        [\n            [8369, 6151],\n            [17, -17],\n            [9, 15],\n            [2, -15],\n            [-4, -24],\n            [9, -43],\n            [-7, -49],\n            [-16, -19],\n            [-5, -48],\n            [7, -47],\n            [14, -7],\n            [13, 7],\n            [34, -32],\n            [-2, -32],\n            [9, -15],\n            [-3, -27],\n            [-22, 29],\n            [-10, 31],\n            [-7, -22],\n            [-18, 36],\n            [-25, -9],\n            [-14, 13],\n            [1, 25],\n            [9, 15],\n            [-8, 13],\n            [-4, -21],\n            [-14, 34],\n            [-4, 26],\n            [-1, 56],\n            [11, -19],\n            [3, 92],\n            [9, 54],\n            [17, 0]\n        ],\n        [\n            [9329, 4655],\n            [-8, -6],\n            [-12, 22],\n            [-12, 38],\n            [-6, 45],\n            [4, 6],\n            [3, -18],\n            [8, -13],\n            [14, -38],\n            [13, -20],\n            [-4, -16]\n        ],\n        [\n            [9221, 4734],\n            [-15, -5],\n            [-4, -17],\n            [-15, -14],\n            [-15, -14],\n            [-14, 0],\n            [-23, 18],\n            [-16, 16],\n            [2, 18],\n            [25, -8],\n            [15, 4],\n            [5, 29],\n            [4, 1],\n            [2, -31],\n            [16, 4],\n            [8, 20],\n            [16, 21],\n            [-4, 35],\n            [17, 1],\n            [6, -9],\n            [-1, -33],\n            [-9, -36]\n        ],\n        [\n            [8916, 4904],\n            [48, -41],\n            [51, -34],\n            [19, -30],\n            [16, -30],\n            [4, -34],\n            [46, -37],\n            [7, -31],\n            [-25, -7],\n            [6, -39],\n            [25, -39],\n            [18, -62],\n            [15, 2],\n            [-1, -27],\n            [22, -10],\n            [-9, -11],\n            [30, -25],\n            [-3, -17],\n            [-18, -4],\n            [-7, 16],\n            [-24, 6],\n            [-28, 9],\n            [-22, 38],\n            [-16, 32],\n            [-14, 52],\n            [-36, 26],\n            [-24, -17],\n            [-17, -20],\n            [4, -43],\n            [-22, -20],\n            [-16, 9],\n            [-28, 3]\n        ],\n        [\n            [9253, 4792],\n            [-9, -16],\n            [-5, 35],\n            [-6, 23],\n            [-13, 19],\n            [-16, 25],\n            [-20, 18],\n            [8, 14],\n            [15, -17],\n            [9, -13],\n            [12, -14],\n            [11, -25],\n            [11, -19],\n            [3, -30]\n        ],\n        [\n            [5392, 8233],\n            [19, 18],\n            [43, 27],\n            [35, 20],\n            [28, -10],\n            [2, -14],\n            [27, -1]\n        ],\n        [\n            [5546, 8273],\n            [34, -7],\n            [51, 1]\n        ],\n        [\n            [5653, 8105],\n            [14, -52],\n            [-3, -17],\n            [-14, -6],\n            [-25, -50],\n            [7, -26],\n            [-6, 3]\n        ],\n        [\n            [5626, 7957],\n            [-26, 23],\n            [-20, -8],\n            [-13, 6],\n            [-17, -13],\n            [-14, 21],\n            [-11, -8],\n            [-2, 4]\n        ],\n        [\n            [3159, 6151],\n            [14, -5],\n            [5, -12],\n            [-7, -15],\n            [-21, 1],\n            [-17, -2],\n            [-1, 25],\n            [4, 9],\n            [23, -1]\n        ],\n        [\n            [8628, 7562],\n            [4, -10]\n        ],\n        [\n            [8632, 7552],\n            [-11, 3],\n            [-12, -20],\n            [-8, -20],\n            [1, -42],\n            [-14, -13],\n            [-5, -11],\n            [-11, -17],\n            [-18, -10],\n            [-12, -16],\n            [-1, -25],\n            [-3, -7],\n            [11, -9],\n            [15, -26]\n        ],\n        [\n            [8504, 7288],\n            [-13, 11],\n            [-4, -11],\n            [-8, -5],\n            [-1, 11],\n            [-7, 5],\n            [-8, 10],\n            [8, 26],\n            [7, 7],\n            [-3, 11],\n            [7, 31],\n            [-2, 10],\n            [-16, 7],\n            [-13, 15]\n        ],\n        [\n            [4792, 7249],\n            [-11, -15],\n            [-14, 8],\n            [-15, -6],\n            [5, 46],\n            [-3, 36],\n            [-12, 6],\n            [-7, 22],\n            [2, 39],\n            [11, 21],\n            [2, 24],\n            [6, 36],\n            [-1, 25],\n            [-5, 21],\n            [-1, 20]\n        ],\n        [\n            [6411, 6520],\n            [-2, 43],\n            [7, 31],\n            [8, 6],\n            [8, -18],\n            [1, -35],\n            [-6, -35]\n        ],\n        [\n            [6427, 6512],\n            [-8, -4],\n            [-8, 12]\n        ],\n        [\n            [5630, 7886],\n            [12, 13],\n            [17, -7],\n            [18, 0],\n            [13, -14],\n            [10, 9],\n            [20, 5],\n            [7, 14],\n            [12, 0]\n        ],\n        [\n            [5784, 7745],\n            [12, -11],\n            [13, 9],\n            [13, -10]\n        ],\n        [\n            [5822, 7733],\n            [0, -15],\n            [-13, -13],\n            [-9, 6],\n            [-7, -71]\n        ],\n        [\n            [5629, 7671],\n            [-5, 10],\n            [6, 10],\n            [-7, 7],\n            [-8, -13],\n            [-17, 17],\n            [-2, 25],\n            [-17, 14],\n            [-3, 18],\n            [-15, 24]\n        ],\n        [\n            [8989, 8056],\n            [28, -105],\n            [-41, 19],\n            [-17, -85],\n            [27, -61],\n            [-1, -41],\n            [-21, 36],\n            [-18, -46],\n            [-5, 50],\n            [3, 57],\n            [-3, 64],\n            [6, 45],\n            [2, 79],\n            [-17, 58],\n            [3, 80],\n            [25, 28],\n            [-11, 27],\n            [13, 8],\n            [7, -39],\n            [10, -57],\n            [-1, -58],\n            [11, -59]\n        ],\n        [\n            [5546, 8273],\n            [6, 26],\n            [38, 19]\n        ],\n        [\n            [0, 9132],\n            [68, -45],\n            [73, -59],\n            [-3, -37],\n            [19, -15],\n            [-6, 43],\n            [75, -8],\n            [55, -56],\n            [-28, -26],\n            [-46, -6],\n            [0, -57],\n            [-11, -13],\n            [-26, 2],\n            [-22, 21],\n            [-36, 17],\n            [-7, 26],\n            [-28, 9],\n            [-31, -7],\n            [-16, 20],\n            [6, 22],\n            [-33, -14],\n            [13, -28],\n            [-16, -25]\n        ],\n        [\n            [0, 8896],\n            [0, 236]\n        ],\n        [\n            [0, 9282],\n            [9999, -40],\n            [-30, -3],\n            [-5, 19],\n            [-9964, 24]\n        ],\n        [\n            [0, 9282],\n            [4, 3],\n            [23, 0],\n            [40, -17],\n            [-2, -8],\n            [-29, -14],\n            [-36, -4],\n            [0, 40]\n        ],\n        [\n            [8988, 9383],\n            [-42, -1],\n            [-57, 7],\n            [-5, 3],\n            [27, 23],\n            [34, 6],\n            [40, -23],\n            [3, -15]\n        ],\n        [\n            [9186, 9493],\n            [-32, -23],\n            [-44, 5],\n            [-52, 23],\n            [7, 20],\n            [51, -9],\n            [70, -16]\n        ],\n        [\n            [9029, 9522],\n            [-22, -44],\n            [-102, 1],\n            [-46, -14],\n            [-55, 39],\n            [15, 40],\n            [37, 11],\n            [73, -2],\n            [100, -31]\n        ],\n        [\n            [6598, 9235],\n            [-17, -5],\n            [-91, 8],\n            [-7, 26],\n            [-50, 16],\n            [-4, 32],\n            [28, 13],\n            [-1, 32],\n            [55, 50],\n            [-25, 7],\n            [66, 52],\n            [-7, 27],\n            [62, 31],\n            [91, 38],\n            [93, 11],\n            [48, 22],\n            [54, 8],\n            [19, -23],\n            [-19, -19],\n            [-98, -29],\n            [-85, -28],\n            [-86, -57],\n            [-42, -57],\n            [-43, -57],\n            [5, -49],\n            [54, -49]\n        ],\n        [\n            [0, 8896],\n            [9963, -26],\n            [-36, 4],\n            [25, -31],\n            [17, -49],\n            [13, -16],\n            [3, -24],\n            [-7, -16],\n            [-52, 13],\n            [-78, -44],\n            [-25, -7],\n            [-42, -42],\n            [-40, -36],\n            [-11, -27],\n            [-39, 41],\n            [-73, -46],\n            [-12, 22],\n            [-27, -26],\n            [-37, 8],\n            [-9, -38],\n            [-33, -58],\n            [1, -24],\n            [31, -13],\n            [-4, -86],\n            [-25, -2],\n            [-12, -49],\n            [11, -26],\n            [-48, -30],\n            [-10, -67],\n            [-41, -15],\n            [-9, -60],\n            [-40, -55],\n            [-10, 41],\n            [-12, 86],\n            [-15, 131],\n            [13, 82],\n            [23, 35],\n            [2, 28],\n            [43, 13],\n            [50, 75],\n            [47, 60],\n            [50, 48],\n            [23, 83],\n            [-34, -5],\n            [-17, -49],\n            [-70, -65],\n            [-23, 73],\n            [-72, -20],\n            [-69, -99],\n            [23, -36],\n            [-62, -16],\n            [-43, -6],\n            [2, 43],\n            [-43, 9],\n            [-35, -29],\n            [-85, 10],\n            [-91, -18],\n            [-90, -115],\n            [-106, -139],\n            [43, -8],\n            [14, -37],\n            [27, -13],\n            [18, 30],\n            [30, -4],\n            [40, -65],\n            [1, -50],\n            [-21, -59],\n            [-3, -71],\n            [-12, -94],\n            [-42, -86],\n            [-9, -41],\n            [-38, -69],\n            [-38, -68],\n            [-18, -35],\n            [-37, -34],\n            [-17, -1],\n            [-17, 29],\n            [-38, -44],\n            [-4, -19]\n        ],\n        [\n            [6363, 7799],\n            [-12, -35],\n            [-27, -10],\n            [-28, -61],\n            [25, -56],\n            [-2, -40],\n            [30, -70]\n        ],\n        [\n            [6109, 7624],\n            [-35, 49],\n            [-32, 23],\n            [-24, 34],\n            [20, 10],\n            [23, 49],\n            [-15, 24],\n            [41, 24],\n            [-1, 13],\n            [-25, -10]\n        ],\n        [\n            [6061, 7840],\n            [1, 26],\n            [14, 17],\n            [27, 4],\n            [5, 20],\n            [-7, 33],\n            [12, 30],\n            [-1, 18],\n            [-41, 19],\n            [-16, -1],\n            [-17, 28],\n            [-21, -9],\n            [-35, 20],\n            [0, 12],\n            [-10, 26],\n            [-22, 3],\n            [-2, 18],\n            [7, 12],\n            [-18, 33],\n            [-29, -5],\n            [-8, 3],\n            [-7, -14],\n            [-11, 3]\n        ],\n        [\n            [5777, 8571],\n            [31, 33],\n            [-29, 28]\n        ],\n        [\n            [5863, 9167],\n            [29, 20],\n            [46, -35],\n            [76, -14],\n            [105, -67],\n            [21, -28],\n            [2, -40],\n            [-31, -31],\n            [-45, -15],\n            [-124, 44],\n            [-21, -7],\n            [45, -43],\n            [2, -28],\n            [2, -60],\n            [36, -18],\n            [22, -15],\n            [3, 28],\n            [-17, 26],\n            [18, 22],\n            [67, -37],\n            [24, 15],\n            [-19, 43],\n            [65, 58],\n            [25, -4],\n            [26, -20],\n            [16, 40],\n            [-23, 35],\n            [14, 36],\n            [-21, 36],\n            [78, -18],\n            [16, -34],\n            [-35, -7],\n            [0, -33],\n            [22, -20],\n            [43, 13],\n            [7, 38],\n            [58, 28],\n            [97, 50],\n            [20, -3],\n            [-27, -35],\n            [35, -7],\n            [19, 21],\n            [52, 1],\n            [42, 25],\n            [31, -36],\n            [32, 39],\n            [-29, 35],\n            [14, 19],\n            [82, -18],\n            [39, -18],\n            [100, -68],\n            [19, 31],\n            [-28, 31],\n            [-1, 13],\n            [-34, 6],\n            [10, 28],\n            [-15, 46],\n            [-1, 19],\n            [51, 53],\n            [18, 54],\n            [21, 11],\n            [74, -15],\n            [5, -33],\n            [-26, -48],\n            [17, -19],\n            [9, -41],\n            [-6, -81],\n            [31, -36],\n            [-12, -40],\n            [-55, -84],\n            [32, -8],\n            [11, 21],\n            [31, 15],\n            [7, 29],\n            [24, 29],\n            [-16, 33],\n            [13, 39],\n            [-31, 5],\n            [-6, 33],\n            [22, 59],\n            [-36, 48],\n            [50, 40],\n            [-7, 42],\n            [14, 2],\n            [15, -33],\n            [-11, -57],\n            [29, -11],\n            [-12, 43],\n            [46, 23],\n            [58, 3],\n            [51, -34],\n            [-25, 49],\n            [-2, 63],\n            [48, 12],\n            [67, -2],\n            [60, 7],\n            [-23, 31],\n            [33, 39],\n            [31, 2],\n            [54, 29],\n            [74, 8],\n            [9, 16],\n            [73, 6],\n            [23, -14],\n            [62, 32],\n            [51, -1],\n            [8, 25],\n            [26, 25],\n            [66, 25],\n            [48, -19],\n            [-38, -15],\n            [63, -9],\n            [7, -29],\n            [25, 14],\n            [82, -1],\n            [62, -29],\n            [23, -22],\n            [-7, -30],\n            [-31, -18],\n            [-73, -33],\n            [-21, -17],\n            [35, -8],\n            [41, -15],\n            [25, 11],\n            [14, -38],\n            [12, 15],\n            [44, 10],\n            [90, -10],\n            [6, -28],\n            [116, -9],\n            [2, 46],\n            [59, -11],\n            [44, 1],\n            [45, -32],\n            [13, -37],\n            [-17, -25],\n            [35, -47],\n            [44, -24],\n            [27, 62],\n            [44, -26],\n            [48, 16],\n            [53, -18],\n            [21, 16],\n            [45, -8],\n            [-20, 55],\n            [37, 25],\n            [251, -38],\n            [24, -35],\n            [72, -45],\n            [112, 11],\n            [56, -10],\n            [23, -24],\n            [-4, -44],\n            [35, -16],\n            [37, 12],\n            [49, 1],\n            [52, -11],\n            [53, 6],\n            [49, -52],\n            [34, 19],\n            [-23, 37],\n            [13, 27],\n            [88, -17],\n            [58, 4],\n            [80, -29],\n            [-9960, -25]\n        ],\n        [\n            [7918, 9684],\n            [-157, -23],\n            [51, 77],\n            [23, 7],\n            [21, -4],\n            [70, -33],\n            [-8, -24]\n        ],\n        [\n            [6420, 9816],\n            [-37, -8],\n            [-25, -4],\n            [-4, -10],\n            [-33, -10],\n            [-30, 14],\n            [16, 19],\n            [-62, 2],\n            [54, 10],\n            [43, 1],\n            [5, -16],\n            [16, 14],\n            [26, 10],\n            [42, -13],\n            [-11, -9]\n        ],\n        [\n            [7775, 9718],\n            [-60, -8],\n            [-78, 17],\n            [-46, 23],\n            [-21, 42],\n            [-38, 12],\n            [72, 40],\n            [60, 14],\n            [54, -30],\n            [64, -57],\n            [-7, -53]\n        ],\n        [\n            [5844, 4990],\n            [11, -33],\n            [-1, -35],\n            [-8, -7]\n        ],\n        [\n            [5821, 4978],\n            [7, -6],\n            [16, 18]\n        ],\n        [\n            [4526, 6298],\n            [1, 25]\n        ],\n        [\n            [6188, 6023],\n            [-4, 26],\n            [-8, 17],\n            [-2, 24],\n            [-15, 21],\n            [-15, 50],\n            [-7, 48],\n            [-20, 40],\n            [-12, 10],\n            [-18, 56],\n            [-4, 41],\n            [2, 35],\n            [-16, 66],\n            [-13, 23],\n            [-15, 12],\n            [-10, 34],\n            [2, 13],\n            [-8, 31],\n            [-8, 13],\n            [-11, 44],\n            [-17, 48],\n            [-14, 40],\n            [-14, 0],\n            [5, 33],\n            [1, 20],\n            [3, 24]\n        ],\n        [\n            [6344, 6744],\n            [11, -51],\n            [14, -13],\n            [5, -21],\n            [18, -25],\n            [2, -24],\n            [-3, -20],\n            [4, -20],\n            [8, -16],\n            [4, -20],\n            [4, -14]\n        ],\n        [\n            [6427, 6512],\n            [5, -22]\n        ],\n        [\n            [6444, 6180],\n            [-80, -23],\n            [-26, -26],\n            [-20, -62],\n            [-13, -10],\n            [-7, 20],\n            [-11, -3],\n            [-27, 6],\n            [-5, 5],\n            [-32, -1],\n            [-7, -5],\n            [-12, 15],\n            [-7, -29],\n            [3, -25],\n            [-12, -19]\n        ],\n        [\n            [5943, 5617],\n            [-4, 1],\n            [0, 29],\n            [-3, 20],\n            [-14, 24],\n            [-4, 42],\n            [4, 44],\n            [-13, 4],\n            [-2, -13],\n            [-17, -3],\n            [7, -17],\n            [2, -36],\n            [-15, -32],\n            [-14, -43],\n            [-14, -6],\n            [-23, 34],\n            [-11, -12],\n            [-3, -17],\n            [-14, -11],\n            [-1, -12],\n            [-28, 0],\n            [-3, 12],\n            [-20, 2],\n            [-10, -10],\n            [-8, 5],\n            [-14, 34],\n            [-5, 17],\n            [-20, -9],\n            [-8, -27],\n            [-7, -53],\n            [-10, -11],\n            [-8, -6]\n        ],\n        [\n            [5663, 5567],\n            [-2, 2]\n        ],\n        [\n            [5635, 5716],\n            [0, 14],\n            [-10, 17],\n            [-1, 35],\n            [-5, 23],\n            [-10, -4],\n            [3, 22],\n            [7, 25],\n            [-3, 24],\n            [9, 18],\n            [-6, 14],\n            [7, 36],\n            [13, 44],\n            [24, -4],\n            [-1, 234]\n        ],\n        [\n            [6023, 6357],\n            [9, -58],\n            [-6, -10],\n            [4, -61],\n            [11, -71],\n            [10, -14],\n            [15, -22]\n        ],\n        [\n            [5943, 5624],\n            [0, -7]\n        ],\n        [\n            [5943, 5617],\n            [0, -46]\n        ],\n        [\n            [5944, 5309],\n            [-17, -28],\n            [-20, 1],\n            [-22, -14],\n            [-18, 13],\n            [-11, -16]\n        ],\n        [\n            [5682, 5544],\n            [-19, 23]\n        ],\n        [\n            [4535, 5861],\n            [-11, 46],\n            [-14, 21],\n            [12, 11],\n            [14, 41],\n            [6, 31]\n        ],\n        [\n            [4536, 5789],\n            [-4, 45]\n        ],\n        [\n            [9502, 4438],\n            [8, -20],\n            [-19, 0],\n            [-11, 37],\n            [17, -15],\n            [5, -2]\n        ],\n        [\n            [9467, 4474],\n            [-11, -1],\n            [-17, 6],\n            [-5, 9],\n            [1, 23],\n            [19, -9],\n            [9, -12],\n            [4, -16]\n        ],\n        [\n            [9490, 4490],\n            [-4, -11],\n            [-21, 52],\n            [-5, 35],\n            [9, 0],\n            [10, -47],\n            [11, -29]\n        ],\n        [\n            [9440, 4565],\n            [1, -12],\n            [-22, 25],\n            [-15, 21],\n            [-10, 20],\n            [4, 6],\n            [13, -14],\n            [23, -27],\n            [6, -19]\n        ],\n        [\n            [9375, 4623],\n            [-5, -3],\n            [-13, 14],\n            [-11, 24],\n            [1, 10],\n            [17, -25],\n            [11, -20]\n        ],\n        [\n            [4682, 5458],\n            [-8, 5],\n            [-20, 24],\n            [-14, 31],\n            [-5, 22],\n            [-3, 43]\n        ],\n        [\n            [2561, 5848],\n            [-3, -14],\n            [-16, 1],\n            [-10, 6],\n            [-12, 12],\n            [-15, 3],\n            [-8, 13]\n        ],\n        [\n            [6198, 5735],\n            [9, -11],\n            [5, -25],\n            [13, -24],\n            [14, -1],\n            [26, 16],\n            [30, 7],\n            [25, 18],\n            [13, 4],\n            [10, 11],\n            [16, 2]\n        ],\n        [\n            [6359, 5732],\n            [0, -1],\n            [0, -25],\n            [0, -59],\n            [0, -31],\n            [-13, -36],\n            [-19, -50]\n        ],\n        [\n            [6359, 5732],\n            [9, 1],\n            [13, 9],\n            [14, 6],\n            [14, 20],\n            [10, 0],\n            [1, -16],\n            [-3, -35],\n            [0, -31],\n            [-6, -21],\n            [-7, -64],\n            [-14, -66],\n            [-17, -75],\n            [-24, -87],\n            [-23, -66],\n            [-33, -81],\n            [-28, -48],\n            [-42, -58],\n            [-25, -45],\n            [-31, -72],\n            [-6, -31],\n            [-6, -14]\n        ],\n        [\n            [3412, 5410],\n            [34, -11],\n            [2, 10],\n            [23, 4],\n            [30, -15]\n        ],\n        [\n            [3489, 5306],\n            [10, -35],\n            [-4, -25]\n        ],\n        [\n            [5626, 7957],\n            [-8, -15],\n            [-5, -24]\n        ],\n        [\n            [5380, 7746],\n            [7, 5]\n        ],\n        [\n            [5663, 8957],\n            [-47, -17],\n            [-27, -41],\n            [4, -36],\n            [-44, -48],\n            [-54, -50],\n            [-20, -84],\n            [20, -41],\n            [26, -33],\n            [-25, -67],\n            [-29, -14],\n            [-11, -99],\n            [-15, -55],\n            [-34, 6],\n            [-16, -47],\n            [-32, -3],\n            [-9, 56],\n            [-23, 67],\n            [-21, 84]\n        ],\n        [\n            [5890, 3478],\n            [-5, -26],\n            [-17, -6],\n            [-16, 32],\n            [0, 20],\n            [7, 22],\n            [3, 17],\n            [8, 5],\n            [14, -11]\n        ],\n        [\n            [5999, 7104],\n            [-2, 45],\n            [7, 25]\n        ],\n        [\n            [6004, 7174],\n            [7, 13],\n            [7, 13],\n            [2, 33],\n            [9, -12],\n            [31, 17],\n            [14, -12],\n            [23, 1],\n            [32, 22],\n            [15, -1],\n            [32, 9]\n        ],\n        [\n            [5051, 5420],\n            [-22, -12]\n        ],\n        [\n            [7849, 5777],\n            [-25, 28],\n            [-24, -2],\n            [4, 47],\n            [-24, 0],\n            [-2, -65],\n            [-15, -87],\n            [-10, -52],\n            [2, -43],\n            [18, -2],\n            [12, -53],\n            [5, -52],\n            [15, -33],\n            [17, -7],\n            [14, -31]\n        ],\n        [\n            [7779, 5439],\n            [-11, 23],\n            [-4, 29],\n            [-15, 34],\n            [-14, 28],\n            [-4, -35],\n            [-5, 33],\n            [3, 37],\n            [8, 56]\n        ],\n        [\n            [6883, 7252],\n            [16, 60],\n            [-6, 44],\n            [-20, 14],\n            [7, 26],\n            [23, -3],\n            [13, 33],\n            [9, 38],\n            [37, 13],\n            [-6, -27],\n            [4, -17],\n            [12, 2]\n        ],\n        [\n            [6497, 7255],\n            [-5, 42],\n            [4, 62],\n            [-22, 20],\n            [8, 40],\n            [-19, 4],\n            [6, 49],\n            [26, -14],\n            [25, 19],\n            [-20, 35],\n            [-8, 34],\n            [-23, -15],\n            [-3, -43],\n            [-8, 38]\n        ],\n        [\n            [6554, 7498],\n            [31, 1],\n            [-4, 29],\n            [24, 21],\n            [23, 34],\n            [37, -31],\n            [3, -47],\n            [11, -12],\n            [30, 2],\n            [9, -10],\n            [14, -61],\n            [32, -41],\n            [18, -28],\n            [29, -29],\n            [37, -25],\n            [-1, -36]\n        ],\n        [\n            [8471, 4532],\n            [3, 14],\n            [24, 13],\n            [19, 2],\n            [9, 8],\n            [10, -8],\n            [-10, -16],\n            [-29, -25],\n            [-23, -17]\n        ],\n        [\n            [3286, 5693],\n            [16, 8],\n            [6, -2],\n            [-1, -44],\n            [-23, -7],\n            [-5, 6],\n            [8, 16],\n            [-1, 23]\n        ],\n        [\n            [5233, 7240],\n            [31, 24],\n            [19, -7],\n            [-1, -30],\n            [24, 22],\n            [2, -12],\n            [-14, -29],\n            [0, -27],\n            [9, -15],\n            [-3, -51],\n            [-19, -29],\n            [6, -33],\n            [14, -1],\n            [7, -28],\n            [11, -9]\n        ],\n        [\n            [6004, 7174],\n            [-11, 27],\n            [11, 22],\n            [-17, -5],\n            [-23, 13],\n            [-19, -34],\n            [-43, -6],\n            [-22, 31],\n            [-30, 2],\n            [-6, -24],\n            [-20, -7],\n            [-26, 31],\n            [-31, -1],\n            [-16, 59],\n            [-21, 33],\n            [14, 46],\n            [-18, 28],\n            [31, 56],\n            [43, 3],\n            [12, 45],\n            [53, -8],\n            [33, 38],\n            [32, 17],\n            [46, 1],\n            [49, -42],\n            [40, -22],\n            [32, 9],\n            [24, -6],\n            [33, 31]\n        ],\n        [\n            [5777, 7539],\n            [3, -23],\n            [25, -19],\n            [-5, -14],\n            [-33, -3],\n            [-12, -19],\n            [-23, -31],\n            [-9, 27],\n            [0, 12]\n        ],\n        [\n            [8382, 6499],\n            [-17, -95],\n            [-12, -49],\n            [-14, 50],\n            [-4, 44],\n            [17, 58],\n            [22, 45],\n            [13, -18],\n            [-5, -35]\n        ],\n        [\n            [6088, 4781],\n            [-12, -73],\n            [1, -33],\n            [18, -22],\n            [1, -15],\n            [-8, -36],\n            [2, -18],\n            [-2, -28],\n            [10, -37],\n            [11, -58],\n            [10, -13]\n        ],\n        [\n            [5909, 4512],\n            [-15, 18],\n            [-18, 10],\n            [-11, 10],\n            [-12, 15]\n        ],\n        [\n            [5844, 4990],\n            [10, 8],\n            [31, -1],\n            [56, 4]\n        ],\n        [\n            [6061, 7840],\n            [-22, -5],\n            [-18, -19],\n            [-26, -3],\n            [-24, -22],\n            [1, -37],\n            [14, -14],\n            [28, 4],\n            [-5, -21],\n            [-31, -11],\n            [-37, -34],\n            [-16, 12],\n            [6, 28],\n            [-30, 17],\n            [5, 12],\n            [26, 19],\n            [-8, 14],\n            [-43, 15],\n            [-2, 22],\n            [-25, -8],\n            [-11, -32],\n            [-21, -44]\n        ],\n        [\n            [3517, 3063],\n            [-12, -38],\n            [-31, -32],\n            [-21, 11],\n            [-15, -6],\n            [-26, 25],\n            [-18, -1],\n            [-17, 32]\n        ],\n        [\n            [679, 6185],\n            [-4, -10],\n            [-7, 8],\n            [1, 17],\n            [-4, 21],\n            [1, 7],\n            [5, 10],\n            [-2, 11],\n            [1, 6],\n            [3, -1],\n            [10, -10],\n            [5, -5],\n            [5, -8],\n            [7, -21],\n            [-1, -3],\n            [-11, -13],\n            [-9, -9]\n        ],\n        [\n            [664, 6277],\n            [-9, -4],\n            [-5, 12],\n            [-3, 5],\n            [0, 4],\n            [3, 5],\n            [9, -6],\n            [8, -9],\n            [-3, -7]\n        ],\n        [\n            [646, 6309],\n            [-1, -7],\n            [-15, 2],\n            [2, 7],\n            [14, -2]\n        ],\n        [\n            [621, 6317],\n            [-2, -3],\n            [-2, 1],\n            [-9, 2],\n            [-4, 13],\n            [-1, 2],\n            [7, 8],\n            [3, -3],\n            [8, -20]\n        ],\n        [\n            [574, 6356],\n            [-4, -6],\n            [-9, 11],\n            [1, 4],\n            [5, 6],\n            [6, -1],\n            [1, -14]\n        ],\n        [\n            [3135, 7724],\n            [5, -19],\n            [-30, -29],\n            [-29, -20],\n            [-29, -18],\n            [-15, -35],\n            [-4, -13],\n            [-1, -31],\n            [10, -32],\n            [11, -1],\n            [-3, 21],\n            [8, -13],\n            [-2, -17],\n            [-19, -9],\n            [-13, 1],\n            [-20, -10],\n            [-12, -3],\n            [-17, -3],\n            [-23, -17],\n            [41, 11],\n            [8, -11],\n            [-39, -18],\n            [-17, 0],\n            [0, 7],\n            [-8, -16],\n            [8, -3],\n            [-6, -43],\n            [-20, -45],\n            [-2, 15],\n            [-6, 3],\n            [-9, 15],\n            [5, -32],\n            [7, -10],\n            [1, -23],\n            [-9, -23],\n            [-16, -47],\n            [-2, 3],\n            [8, 40],\n            [-14, 22],\n            [-3, 49],\n            [-5, -25],\n            [5, -38],\n            [-18, 10],\n            [19, -19],\n            [1, -57],\n            [8, -4],\n            [3, -20],\n            [4, -59],\n            [-17, -44],\n            [-29, -18],\n            [-18, -34],\n            [-14, -4],\n            [-14, -22],\n            [-4, -20],\n            [-31, -38],\n            [-16, -28],\n            [-13, -35],\n            [-4, -42],\n            [5, -41],\n            [9, -51],\n            [13, -41],\n            [0, -26],\n            [13, -69],\n            [-1, -39],\n            [-1, -23],\n            [-7, -36],\n            [-8, -8],\n            [-14, 7],\n            [-4, 26],\n            [-11, 14],\n            [-15, 51],\n            [-13, 45],\n            [-4, 23],\n            [6, 39],\n            [-8, 33],\n            [-22, 49],\n            [-10, 9],\n            [-28, -27],\n            [-5, 3],\n            [-14, 28],\n            [-17, 14],\n            [-32, -7],\n            [-24, 7],\n            [-21, -5],\n            [-12, -9],\n            [5, -15],\n            [0, -24],\n            [5, -12],\n            [-5, -8],\n            [-10, 9],\n            [-11, -11],\n            [-20, 2],\n            [-20, 31],\n            [-25, -8],\n            [-20, 14],\n            [-17, -4],\n            [-24, -14],\n            [-25, -44],\n            [-27, -25],\n            [-16, -28],\n            [-6, -27],\n            [0, -41],\n            [1, -28],\n            [5, -20]\n        ],\n        [\n            [1746, 6980],\n            [-4, 30],\n            [-18, 34],\n            [-13, 7],\n            [-3, 17],\n            [-16, 3],\n            [-10, 16],\n            [-26, 6],\n            [-7, 9],\n            [-3, 32],\n            [-27, 60],\n            [-23, 82],\n            [1, 14],\n            [-13, 19],\n            [-21, 50],\n            [-4, 48],\n            [-15, 32],\n            [6, 49],\n            [-1, 51],\n            [-8, 45],\n            [10, 56],\n            [4, 53],\n            [3, 54],\n            [-5, 79],\n            [-9, 51],\n            [-8, 27],\n            [4, 12],\n            [40, -20],\n            [15, -56],\n            [7, 15],\n            [-5, 49],\n            [-9, 48]\n        ],\n        [\n            [750, 8432],\n            [-28, -23],\n            [-14, 15],\n            [-4, 28],\n            [25, 21],\n            [15, 9],\n            [18, -4],\n            [12, -18],\n            [-24, -28]\n        ],\n        [\n            [401, 8597],\n            [-18, -9],\n            [-18, 11],\n            [-17, 16],\n            [28, 10],\n            [22, -6],\n            [3, -22]\n        ],\n        [\n            [230, 8826],\n            [17, -12],\n            [17, 6],\n            [23, -15],\n            [27, -8],\n            [-2, -7],\n            [-21, -12],\n            [-21, 13],\n            [-11, 11],\n            [-24, -4],\n            [-7, 5],\n            [2, 23]\n        ],\n        [\n            [1374, 8295],\n            [-15, 22],\n            [-25, 19],\n            [-8, 52],\n            [-36, 47],\n            [-15, 56],\n            [-26, 4],\n            [-44, 2],\n            [-33, 17],\n            [-57, 61],\n            [-27, 11],\n            [-49, 21],\n            [-38, -5],\n            [-55, 27],\n            [-33, 25],\n            [-30, -12],\n            [5, -41],\n            [-15, -4],\n            [-32, -12],\n            [-25, -20],\n            [-30, -13],\n            [-4, 35],\n            [12, 58],\n            [30, 18],\n            [-8, 15],\n            [-35, -33],\n            [-19, -39],\n            [-40, -42],\n            [20, -29],\n            [-26, -42],\n            [-30, -25],\n            [-28, -18],\n            [-7, -26],\n            [-43, -31],\n            [-9, -28],\n            [-32, -25],\n            [-20, 5],\n            [-25, -17],\n            [-29, -20],\n            [-23, -20],\n            [-47, -16],\n            [-5, 9],\n            [31, 28],\n            [27, 18],\n            [29, 33],\n            [35, 6],\n            [14, 25],\n            [38, 35],\n            [6, 12],\n            [21, 21],\n            [5, 44],\n            [14, 35],\n            [-32, -18],\n            [-9, 11],\n            [-15, -22],\n            [-18, 30],\n            [-8, -21],\n            [-10, 29],\n            [-28, -23],\n            [-17, 0],\n            [-3, 35],\n            [5, 21],\n            [-17, 22],\n            [-37, -12],\n            [-23, 28],\n            [-19, 14],\n            [0, 34],\n            [-22, 25],\n            [11, 34],\n            [23, 33],\n            [10, 30],\n            [22, 4],\n            [19, -9],\n            [23, 28],\n            [20, -5],\n            [21, 19],\n            [-5, 27],\n            [-16, 10],\n            [21, 23],\n            [-17, -1],\n            [-30, -13],\n            [-8, -13],\n            [-22, 13],\n            [-39, -6],\n            [-41, 14],\n            [-12, 24],\n            [-35, 34],\n            [39, 25],\n            [62, 29],\n            [23, 0],\n            [-4, -30],\n            [59, 2],\n            [-23, 37],\n            [-34, 23],\n            [-20, 29],\n            [-26, 25],\n            [-38, 19],\n            [15, 31],\n            [49, 2],\n            [35, 27],\n            [7, 29],\n            [28, 28],\n            [28, 6],\n            [52, 27],\n            [26, -4],\n            [42, 31],\n            [42, -12],\n            [21, -27],\n            [12, 11],\n            [47, -3],\n            [-2, -14],\n            [43, -10],\n            [28, 6],\n            [59, -18],\n            [53, -6],\n            [21, -8],\n            [37, 10],\n            [42, -18],\n            [31, -8]\n        ],\n        [\n            [3018, 5753],\n            [-1, -14],\n            [-16, -7],\n            [9, -26],\n            [0, -31],\n            [-12, -35],\n            [10, -47],\n            [12, 4],\n            [6, 43],\n            [-8, 21],\n            [-2, 45],\n            [35, 24],\n            [-4, 27],\n            [10, 19],\n            [10, -41],\n            [19, -1],\n            [18, -33],\n            [1, -20],\n            [25, 0],\n            [30, 6],\n            [16, -27],\n            [21, -7],\n            [16, 18],\n            [0, 15],\n            [34, 4],\n            [34, 1],\n            [-24, -18],\n            [10, -28],\n            [22, -4],\n            [21, -29],\n            [4, -48],\n            [15, 2],\n            [11, -14]\n        ],\n        [\n            [8001, 6331],\n            [-37, -51],\n            [-24, -56],\n            [-6, -41],\n            [22, -62],\n            [25, -77],\n            [26, -37],\n            [17, -47],\n            [12, -109],\n            [-3, -104],\n            [-24, -39],\n            [-31, -38],\n            [-23, -49],\n            [-35, -55],\n            [-10, 37],\n            [8, 40],\n            [-21, 34]\n        ],\n        [\n            [9661, 4085],\n            [-9, -8],\n            [-9, 26],\n            [1, 16],\n            [17, -34]\n        ],\n        [\n            [9641, 4175],\n            [4, -47],\n            [-7, 7],\n            [-6, -3],\n            [-4, 16],\n            [0, 45],\n            [13, -18]\n        ],\n        [\n            [6475, 6041],\n            [-21, -16],\n            [-5, -26],\n            [-1, -20],\n            [-27, -25],\n            [-45, -28],\n            [-24, -41],\n            [-13, -3],\n            [-8, 3],\n            [-16, -25],\n            [-18, -11],\n            [-23, -3],\n            [-7, -3],\n            [-6, -16],\n            [-8, -4],\n            [-4, -15],\n            [-14, 1],\n            [-9, -8],\n            [-19, 3],\n            [-7, 35],\n            [1, 32],\n            [-5, 17],\n            [-5, 44],\n            [-8, 24],\n            [5, 3],\n            [-2, 27],\n            [3, 12],\n            [-1, 25]\n        ],\n        [\n            [5817, 3752],\n            [11, 0],\n            [14, -10],\n            [9, 7],\n            [15, -6]\n        ],\n        [\n            [5911, 3478],\n            [-7, -43],\n            [-3, -49],\n            [-7, -27],\n            [-19, -30],\n            [-5, -8],\n            [-12, -30],\n            [-8, -31],\n            [-16, -42],\n            [-31, -61],\n            [-20, -36],\n            [-21, -26],\n            [-29, -23],\n            [-14, -3],\n            [-3, -17],\n            [-17, 9],\n            [-14, -11],\n            [-30, 11],\n            [-17, -7],\n            [-12, 3],\n            [-28, -23],\n            [-24, -10],\n            [-17, -22],\n            [-13, -1],\n            [-11, 21],\n            [-10, 1],\n            [-12, 26],\n            [-1, -8],\n            [-4, 16],\n            [0, 34],\n            [-9, 40],\n            [9, 11],\n            [0, 45],\n            [-19, 55],\n            [-14, 50],\n            [0, 1],\n            [-20, 76]\n        ],\n        [\n            [5840, 4141],\n            [-21, -8],\n            [-15, -23],\n            [-4, -21],\n            [-10, -4],\n            [-24, -49],\n            [-15, -38],\n            [-10, -2],\n            [-9, 7],\n            [-31, 7]\n        ]\n    ],\n    \"transform\": {\n        \"scale\": [0.036003600360036005, 0.016927109510951093],\n        \"translate\": [-180, -85.609038]\n    }\n}\n;\n  Datamap.prototype.abwTopo = '__ABW__';\n  Datamap.prototype.afgTopo = '__AFG__';\n  Datamap.prototype.agoTopo = '__AGO__';\n  Datamap.prototype.aiaTopo = '__AIA__';\n  Datamap.prototype.albTopo = '__ALB__';\n  Datamap.prototype.aldTopo = '__ALD__';\n  Datamap.prototype.andTopo = '__AND__';\n  Datamap.prototype.areTopo = '__ARE__';\n  Datamap.prototype.argTopo = '__ARG__';\n  Datamap.prototype.armTopo = '__ARM__';\n  Datamap.prototype.asmTopo = '__ASM__';\n  Datamap.prototype.ataTopo = '__ATA__';\n  Datamap.prototype.atcTopo = '__ATC__';\n  Datamap.prototype.atfTopo = '__ATF__';\n  Datamap.prototype.atgTopo = '__ATG__';\n  Datamap.prototype.ausTopo = '__AUS__';\n  Datamap.prototype.autTopo = '__AUT__';\n  Datamap.prototype.azeTopo = '__AZE__';\n  Datamap.prototype.bdiTopo = '__BDI__';\n  Datamap.prototype.belTopo = '__BEL__';\n  Datamap.prototype.benTopo = '__BEN__';\n  Datamap.prototype.bfaTopo = '__BFA__';\n  Datamap.prototype.bgdTopo = '__BGD__';\n  Datamap.prototype.bgrTopo = '__BGR__';\n  Datamap.prototype.bhrTopo = '__BHR__';\n  Datamap.prototype.bhsTopo = '__BHS__';\n  Datamap.prototype.bihTopo = '__BIH__';\n  Datamap.prototype.bjnTopo = '__BJN__';\n  Datamap.prototype.blmTopo = '__BLM__';\n  Datamap.prototype.blrTopo = '__BLR__';\n  Datamap.prototype.blzTopo = '__BLZ__';\n  Datamap.prototype.bmuTopo = '__BMU__';\n  Datamap.prototype.bolTopo = '__BOL__';\n  Datamap.prototype.braTopo = '__BRA__';\n  Datamap.prototype.brbTopo = '__BRB__';\n  Datamap.prototype.brnTopo = '__BRN__';\n  Datamap.prototype.btnTopo = '__BTN__';\n  Datamap.prototype.norTopo = '__NOR__';\n  Datamap.prototype.bwaTopo = '__BWA__';\n  Datamap.prototype.cafTopo = '__CAF__';\n  Datamap.prototype.canTopo = '__CAN__';\n  Datamap.prototype.cheTopo = '__CHE__';\n  Datamap.prototype.chlTopo = '__CHL__';\n  Datamap.prototype.chnTopo = '__CHN__';\n  Datamap.prototype.civTopo = '__CIV__';\n  Datamap.prototype.clpTopo = '__CLP__';\n  Datamap.prototype.cmrTopo = '__CMR__';\n  Datamap.prototype.codTopo = '__COD__';\n  Datamap.prototype.cogTopo = '__COG__';\n  Datamap.prototype.cokTopo = '__COK__';\n  Datamap.prototype.colTopo = '__COL__';\n  Datamap.prototype.comTopo = '__COM__';\n  Datamap.prototype.cpvTopo = '__CPV__';\n  Datamap.prototype.criTopo = '__CRI__';\n  Datamap.prototype.csiTopo = '__CSI__';\n  Datamap.prototype.cubTopo = '__CUB__';\n  Datamap.prototype.cuwTopo = '__CUW__';\n  Datamap.prototype.cymTopo = '__CYM__';\n  Datamap.prototype.cynTopo = '__CYN__';\n  Datamap.prototype.cypTopo = '__CYP__';\n  Datamap.prototype.czeTopo = '__CZE__';\n  Datamap.prototype.deuTopo = '__DEU__';\n  Datamap.prototype.djiTopo = '__DJI__';\n  Datamap.prototype.dmaTopo = '__DMA__';\n  Datamap.prototype.dnkTopo = '__DNK__';\n  Datamap.prototype.domTopo = '__DOM__';\n  Datamap.prototype.dzaTopo = '__DZA__';\n  Datamap.prototype.ecuTopo = '__ECU__';\n  Datamap.prototype.egyTopo = '__EGY__';\n  Datamap.prototype.eriTopo = '__ERI__';\n  Datamap.prototype.esbTopo = '__ESB__';\n  Datamap.prototype.espTopo = '__ESP__';\n  Datamap.prototype.estTopo = '__EST__';\n  Datamap.prototype.ethTopo = '__ETH__';\n  Datamap.prototype.finTopo = '__FIN__';\n  Datamap.prototype.fjiTopo = '__FJI__';\n  Datamap.prototype.flkTopo = '__FLK__';\n  Datamap.prototype.fraTopo = '__FRA__';\n  Datamap.prototype.froTopo = '__FRO__';\n  Datamap.prototype.fsmTopo = '__FSM__';\n  Datamap.prototype.gabTopo = '__GAB__';\n  Datamap.prototype.psxTopo = '__PSX__';\n  Datamap.prototype.gbrTopo = '__GBR__';\n  Datamap.prototype.geoTopo = '__GEO__';\n  Datamap.prototype.ggyTopo = '__GGY__';\n  Datamap.prototype.ghaTopo = '__GHA__';\n  Datamap.prototype.gibTopo = '__GIB__';\n  Datamap.prototype.ginTopo = '__GIN__';\n  Datamap.prototype.gmbTopo = '__GMB__';\n  Datamap.prototype.gnbTopo = '__GNB__';\n  Datamap.prototype.gnqTopo = '__GNQ__';\n  Datamap.prototype.grcTopo = '__GRC__';\n  Datamap.prototype.grdTopo = '__GRD__';\n  Datamap.prototype.grlTopo = '__GRL__';\n  Datamap.prototype.gtmTopo = '__GTM__';\n  Datamap.prototype.gumTopo = '__GUM__';\n  Datamap.prototype.guyTopo = '__GUY__';\n  Datamap.prototype.hkgTopo = '__HKG__';\n  Datamap.prototype.hmdTopo = '__HMD__';\n  Datamap.prototype.hndTopo = '__HND__';\n  Datamap.prototype.hrvTopo = '__HRV__';\n  Datamap.prototype.htiTopo = '__HTI__';\n  Datamap.prototype.hunTopo = '__HUN__';\n  Datamap.prototype.idnTopo = '__IDN__';\n  Datamap.prototype.imnTopo = '__IMN__';\n  Datamap.prototype.indTopo = '__IND__';\n  Datamap.prototype.ioaTopo = '__IOA__';\n  Datamap.prototype.iotTopo = '__IOT__';\n  Datamap.prototype.irlTopo = '__IRL__';\n  Datamap.prototype.irnTopo = '__IRN__';\n  Datamap.prototype.irqTopo = '__IRQ__';\n  Datamap.prototype.islTopo = '__ISL__';\n  Datamap.prototype.isrTopo = '__ISR__';\n  Datamap.prototype.itaTopo = '__ITA__';\n  Datamap.prototype.jamTopo = '__JAM__';\n  Datamap.prototype.jeyTopo = '__JEY__';\n  Datamap.prototype.jorTopo = '__JOR__';\n  Datamap.prototype.jpnTopo = '__JPN__';\n  Datamap.prototype.kabTopo = '__KAB__';\n  Datamap.prototype.kasTopo = '__KAS__';\n  Datamap.prototype.kazTopo = '__KAZ__';\n  Datamap.prototype.kenTopo = '__KEN__';\n  Datamap.prototype.kgzTopo = '__KGZ__';\n  Datamap.prototype.khmTopo = '__KHM__';\n  Datamap.prototype.kirTopo = '__KIR__';\n  Datamap.prototype.knaTopo = '__KNA__';\n  Datamap.prototype.korTopo = '__KOR__';\n  Datamap.prototype.kosTopo = '__KOS__';\n  Datamap.prototype.kwtTopo = '__KWT__';\n  Datamap.prototype.laoTopo = '__LAO__';\n  Datamap.prototype.lbnTopo = '__LBN__';\n  Datamap.prototype.lbrTopo = '__LBR__';\n  Datamap.prototype.lbyTopo = '__LBY__';\n  Datamap.prototype.lcaTopo = '__LCA__';\n  Datamap.prototype.lieTopo = '__LIE__';\n  Datamap.prototype.lkaTopo = '__LKA__';\n  Datamap.prototype.lsoTopo = '__LSO__';\n  Datamap.prototype.ltuTopo = '__LTU__';\n  Datamap.prototype.luxTopo = '__LUX__';\n  Datamap.prototype.lvaTopo = '__LVA__';\n  Datamap.prototype.macTopo = '__MAC__';\n  Datamap.prototype.mafTopo = '__MAF__';\n  Datamap.prototype.marTopo = '__MAR__';\n  Datamap.prototype.mcoTopo = '__MCO__';\n  Datamap.prototype.mdaTopo = '__MDA__';\n  Datamap.prototype.mdgTopo = '__MDG__';\n  Datamap.prototype.mdvTopo = '__MDV__';\n  Datamap.prototype.mexTopo = '__MEX__';\n  Datamap.prototype.mhlTopo = '__MHL__';\n  Datamap.prototype.mkdTopo = '__MKD__';\n  Datamap.prototype.mliTopo = '__MLI__';\n  Datamap.prototype.mltTopo = '__MLT__';\n  Datamap.prototype.mmrTopo = '__MMR__';\n  Datamap.prototype.mneTopo = '__MNE__';\n  Datamap.prototype.mngTopo = '__MNG__';\n  Datamap.prototype.mnpTopo = '__MNP__';\n  Datamap.prototype.mozTopo = '__MOZ__';\n  Datamap.prototype.mrtTopo = '__MRT__';\n  Datamap.prototype.msrTopo = '__MSR__';\n  Datamap.prototype.musTopo = '__MUS__';\n  Datamap.prototype.mwiTopo = '__MWI__';\n  Datamap.prototype.mysTopo = '__MYS__';\n  Datamap.prototype.namTopo = '__NAM__';\n  Datamap.prototype.nclTopo = '__NCL__';\n  Datamap.prototype.nerTopo = '__NER__';\n  Datamap.prototype.nfkTopo = '__NFK__';\n  Datamap.prototype.ngaTopo = '__NGA__';\n  Datamap.prototype.nicTopo = '__NIC__';\n  Datamap.prototype.niuTopo = '__NIU__';\n  Datamap.prototype.nldTopo = '__NLD__';\n  Datamap.prototype.nplTopo = '__NPL__';\n  Datamap.prototype.nruTopo = '__NRU__';\n  Datamap.prototype.nulTopo = '__NUL__';\n  Datamap.prototype.nzlTopo = '__NZL__';\n  Datamap.prototype.omnTopo = '__OMN__';\n  Datamap.prototype.pakTopo = '__PAK__';\n  Datamap.prototype.panTopo = '__PAN__';\n  Datamap.prototype.pcnTopo = '__PCN__';\n  Datamap.prototype.perTopo = '__PER__';\n  Datamap.prototype.pgaTopo = '__PGA__';\n  Datamap.prototype.phlTopo = '__PHL__';\n  Datamap.prototype.plwTopo = '__PLW__';\n  Datamap.prototype.pngTopo = '__PNG__';\n  Datamap.prototype.polTopo = '__POL__';\n  Datamap.prototype.priTopo = '__PRI__';\n  Datamap.prototype.prkTopo = '__PRK__';\n  Datamap.prototype.prtTopo = '__PRT__';\n  Datamap.prototype.pryTopo = '__PRY__';\n  Datamap.prototype.pyfTopo = '__PYF__';\n  Datamap.prototype.qatTopo = '__QAT__';\n  Datamap.prototype.rouTopo = '__ROU__';\n  Datamap.prototype.rusTopo = '__RUS__';\n  Datamap.prototype.rwaTopo = '__RWA__';\n  Datamap.prototype.sahTopo = '__SAH__';\n  Datamap.prototype.sauTopo = '__SAU__';\n  Datamap.prototype.scrTopo = '__SCR__';\n  Datamap.prototype.sdnTopo = '__SDN__';\n  Datamap.prototype.sdsTopo = '__SDS__';\n  Datamap.prototype.senTopo = '__SEN__';\n  Datamap.prototype.serTopo = '__SER__';\n  Datamap.prototype.sgpTopo = '__SGP__';\n  Datamap.prototype.sgsTopo = '__SGS__';\n  Datamap.prototype.shnTopo = '__SHN__';\n  Datamap.prototype.slbTopo = '__SLB__';\n  Datamap.prototype.sleTopo = '__SLE__';\n  Datamap.prototype.slvTopo = '__SLV__';\n  Datamap.prototype.smrTopo = '__SMR__';\n  Datamap.prototype.solTopo = '__SOL__';\n  Datamap.prototype.somTopo = '__SOM__';\n  Datamap.prototype.spmTopo = '__SPM__';\n  Datamap.prototype.srbTopo = '__SRB__';\n  Datamap.prototype.stpTopo = '__STP__';\n  Datamap.prototype.surTopo = '__SUR__';\n  Datamap.prototype.svkTopo = '__SVK__';\n  Datamap.prototype.svnTopo = '__SVN__';\n  Datamap.prototype.sweTopo = '__SWE__';\n  Datamap.prototype.swzTopo = '__SWZ__';\n  Datamap.prototype.sxmTopo = '__SXM__';\n  Datamap.prototype.sycTopo = '__SYC__';\n  Datamap.prototype.syrTopo = '__SYR__';\n  Datamap.prototype.tcaTopo = '__TCA__';\n  Datamap.prototype.tcdTopo = '__TCD__';\n  Datamap.prototype.tgoTopo = '__TGO__';\n  Datamap.prototype.thaTopo = '__THA__';\n  Datamap.prototype.tjkTopo = '__TJK__';\n  Datamap.prototype.tkmTopo = '__TKM__';\n  Datamap.prototype.tlsTopo = '__TLS__';\n  Datamap.prototype.tonTopo = '__TON__';\n  Datamap.prototype.ttoTopo = '__TTO__';\n  Datamap.prototype.tunTopo = '__TUN__';\n  Datamap.prototype.turTopo = '__TUR__';\n  Datamap.prototype.tuvTopo = '__TUV__';\n  Datamap.prototype.twnTopo = '__TWN__';\n  Datamap.prototype.tzaTopo = '__TZA__';\n  Datamap.prototype.ugaTopo = '__UGA__';\n  Datamap.prototype.ukrTopo = '__UKR__';\n  Datamap.prototype.umiTopo = '__UMI__';\n  Datamap.prototype.uryTopo = '__URY__';\n  Datamap.prototype.usaTopo = {\"type\":\"Topology\",\"transform\":{\"scale\":[0.03514630243024302,0.005240860686068607],\"translate\":[-178.123152,18.948267]},\"objects\":{\"usa\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"Polygon\",\"id\":\"AL\",\"arcs\":[[0,1,2,3,4]],\"properties\":{\"name\":\"Alabama\"}},{\"type\":\"MultiPolygon\",\"id\":\"AK\",\"arcs\":[[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],\"properties\":{\"name\":\"Alaska\"}},{\"type\":\"Polygon\",\"id\":\"AZ\",\"arcs\":[[44,45,46,47,48]],\"properties\":{\"name\":\"Arizona\"}},{\"type\":\"Polygon\",\"id\":\"AR\",\"arcs\":[[49,50,51,52,53,54]],\"properties\":{\"name\":\"Arkansas\"}},{\"type\":\"Polygon\",\"id\":\"CA\",\"arcs\":[[55,-47,56,57]],\"properties\":{\"name\":\"California\"}},{\"type\":\"Polygon\",\"id\":\"CO\",\"arcs\":[[58,59,60,61,62,63]],\"properties\":{\"name\":\"Colorado\"}},{\"type\":\"Polygon\",\"id\":\"CT\",\"arcs\":[[64,65,66,67]],\"properties\":{\"name\":\"Connecticut\"}},{\"type\":\"Polygon\",\"id\":\"DE\",\"arcs\":[[68,69,70,71]],\"properties\":{\"name\":\"Delaware\"}},{\"type\":\"Polygon\",\"id\":\"DC\",\"arcs\":[[72,73]],\"properties\":{\"name\":\"District of Columbia\"}},{\"type\":\"Polygon\",\"id\":\"FL\",\"arcs\":[[74,75,-2]],\"properties\":{\"name\":\"Florida\"}},{\"type\":\"Polygon\",\"id\":\"GA\",\"arcs\":[[76,77,-75,-1,78,79]],\"properties\":{\"name\":\"Georgia\"}},{\"type\":\"MultiPolygon\",\"id\":\"HI\",\"arcs\":[[[80]],[[81]],[[82]],[[83]],[[84]]],\"properties\":{\"name\":\"Hawaii\"}},{\"type\":\"Polygon\",\"id\":\"ID\",\"arcs\":[[85,86,87,88,89,90,91]],\"properties\":{\"name\":\"Idaho\"}},{\"type\":\"Polygon\",\"id\":\"IL\",\"arcs\":[[92,93,94,95,96,97]],\"properties\":{\"name\":\"Illinois\"}},{\"type\":\"Polygon\",\"id\":\"IN\",\"arcs\":[[98,99,-95,100,101]],\"properties\":{\"name\":\"Indiana\"}},{\"type\":\"Polygon\",\"id\":\"IA\",\"arcs\":[[102,-98,103,104,105,106]],\"properties\":{\"name\":\"Iowa\"}},{\"type\":\"Polygon\",\"id\":\"KS\",\"arcs\":[[107,108,-60,109]],\"properties\":{\"name\":\"Kansas\"}},{\"type\":\"Polygon\",\"id\":\"KY\",\"arcs\":[[110,111,112,113,-96,-100,114]],\"properties\":{\"name\":\"Kentucky\"}},{\"type\":\"Polygon\",\"id\":\"LA\",\"arcs\":[[115,116,117,-52]],\"properties\":{\"name\":\"Louisiana\"}},{\"type\":\"Polygon\",\"id\":\"ME\",\"arcs\":[[118,119]],\"properties\":{\"name\":\"Maine\"}},{\"type\":\"MultiPolygon\",\"id\":\"MD\",\"arcs\":[[[120]],[[-71,121,122,123,124,-74,125,126,127]]],\"properties\":{\"name\":\"Maryland\"}},{\"type\":\"Polygon\",\"id\":\"MA\",\"arcs\":[[128,129,130,131,-68,132,133,134]],\"properties\":{\"name\":\"Massachusetts\"}},{\"type\":\"MultiPolygon\",\"id\":\"MI\",\"arcs\":[[[-102,135,136]],[[137]],[[138,139]],[[140]]],\"properties\":{\"name\":\"Michigan\"}},{\"type\":\"Polygon\",\"id\":\"MN\",\"arcs\":[[-107,141,142,143,144]],\"properties\":{\"name\":\"Minnesota\"}},{\"type\":\"Polygon\",\"id\":\"MS\",\"arcs\":[[-4,145,-116,-51,146]],\"properties\":{\"name\":\"Mississippi\"}},{\"type\":\"Polygon\",\"id\":\"MO\",\"arcs\":[[-97,-114,147,-55,148,-108,149,-104]],\"properties\":{\"name\":\"Missouri\"}},{\"type\":\"Polygon\",\"id\":\"MT\",\"arcs\":[[150,151,-92,152,153]],\"properties\":{\"name\":\"Montana\"}},{\"type\":\"Polygon\",\"id\":\"NE\",\"arcs\":[[-105,-150,-110,-59,154,155]],\"properties\":{\"name\":\"Nebraska\"}},{\"type\":\"Polygon\",\"id\":\"NV\",\"arcs\":[[156,-48,-56,157,-88]],\"properties\":{\"name\":\"Nevada\"}},{\"type\":\"Polygon\",\"id\":\"NH\",\"arcs\":[[-135,158,159,-120,160]],\"properties\":{\"name\":\"New Hampshire\"}},{\"type\":\"Polygon\",\"id\":\"NJ\",\"arcs\":[[161,-69,162,163]],\"properties\":{\"name\":\"New Jersey\"}},{\"type\":\"Polygon\",\"id\":\"NM\",\"arcs\":[[164,165,166,-45,-62]],\"properties\":{\"name\":\"New Mexico\"}},{\"type\":\"Polygon\",\"id\":\"NY\",\"arcs\":[[-133,-67,167,-164,168,169,170]],\"properties\":{\"name\":\"New York\"}},{\"type\":\"Polygon\",\"id\":\"NC\",\"arcs\":[[171,172,-80,173,174]],\"properties\":{\"name\":\"North Carolina\"}},{\"type\":\"Polygon\",\"id\":\"ND\",\"arcs\":[[175,-154,176,-143]],\"properties\":{\"name\":\"North Dakota\"}},{\"type\":\"Polygon\",\"id\":\"OH\",\"arcs\":[[177,-115,-99,-137,178,179]],\"properties\":{\"name\":\"Ohio\"}},{\"type\":\"Polygon\",\"id\":\"OK\",\"arcs\":[[-149,-54,180,-165,-61,-109]],\"properties\":{\"name\":\"Oklahoma\"}},{\"type\":\"Polygon\",\"id\":\"OR\",\"arcs\":[[-89,-158,-58,181,182]],\"properties\":{\"name\":\"Oregon\"}},{\"type\":\"Polygon\",\"id\":\"PA\",\"arcs\":[[-163,-72,-128,183,-180,184,-169]],\"properties\":{\"name\":\"Pennsylvania\"}},{\"type\":\"MultiPolygon\",\"id\":\"RI\",\"arcs\":[[[185,-130]],[[186,-65,-132]]],\"properties\":{\"name\":\"Rhode Island\"}},{\"type\":\"Polygon\",\"id\":\"SC\",\"arcs\":[[187,-77,-173]],\"properties\":{\"name\":\"South Carolina\"}},{\"type\":\"Polygon\",\"id\":\"SD\",\"arcs\":[[-142,-106,-156,188,-151,-176]],\"properties\":{\"name\":\"South Dakota\"}},{\"type\":\"Polygon\",\"id\":\"TN\",\"arcs\":[[189,-174,-79,-5,-147,-50,-148,-113]],\"properties\":{\"name\":\"Tennessee\"}},{\"type\":\"Polygon\",\"id\":\"TX\",\"arcs\":[[-53,-118,190,-166,-181]],\"properties\":{\"name\":\"Texas\"}},{\"type\":\"Polygon\",\"id\":\"UT\",\"arcs\":[[191,-63,-49,-157,-87]],\"properties\":{\"name\":\"Utah\"}},{\"type\":\"Polygon\",\"id\":\"VT\",\"arcs\":[[-134,-171,192,-159]],\"properties\":{\"name\":\"Vermont\"}},{\"type\":\"MultiPolygon\",\"id\":\"VA\",\"arcs\":[[[193,-123]],[[120]],[[-126,-73,-125,194,-175,-190,-112,195]]],\"properties\":{\"name\":\"Virginia\"}},{\"type\":\"MultiPolygon\",\"id\":\"WA\",\"arcs\":[[[-183,196,-90]],[[197]],[[198]]],\"properties\":{\"name\":\"Washington\"}},{\"type\":\"Polygon\",\"id\":\"WV\",\"arcs\":[[-184,-127,-196,-111,-178]],\"properties\":{\"name\":\"West Virginia\"}},{\"type\":\"Polygon\",\"id\":\"WI\",\"arcs\":[[199,-93,-103,-145,200,-140]],\"properties\":{\"name\":\"Wisconsin\"}},{\"type\":\"Polygon\",\"id\":\"WY\",\"arcs\":[[-189,-155,-64,-192,-86,-152]],\"properties\":{\"name\":\"Wyoming\"}}]}},\"arcs\":[[[2632,3060],[5,-164],[7,-242],[4,-53],[3,-30],[-2,-19],[4,-11],[-5,-25],[0,-24],[-2,-32],[2,-57],[-2,-51],[3,-52]],[[2649,2300],[-14,-1],[-59,0],[-1,-25],[6,-37],[-1,-31],[2,-16],[-4,-28]],[[2578,2162],[-4,-6],[-7,31],[-1,47],[-2,6],[-3,-36],[-1,-34],[-7,9]],[[2553,2179],[-2,291],[6,363],[4,209],[-3,20]],[[2558,3062],[24,1],[50,-3]],[[1324,6901],[1,32],[6,-19],[-1,-32],[-8,4],[2,15]],[[1317,6960],[5,-23],[-3,-33],[-2,11],[0,45]],[[1285,7153],[6,5],[3,-8],[-1,-28],[-6,-6],[-5,17],[3,20]],[[1267,7137],[12,-7],[3,-36],[13,-41],[4,-25],[0,-21],[3,-4],[1,-27],[5,-27],[0,-25],[3,8],[2,-19],[1,-74],[-3,-17],[-7,3],[-3,38],[-2,-3],[-6,28],[-2,-10],[-5,10],[1,-28],[5,7],[3,-10],[-2,-39],[-5,4],[-9,49],[-2,25],[1,26],[-7,-2],[0,20],[5,2],[5,18],[-2,31],[-6,7],[-1,50],[-2,25],[-4,-18],[-2,28],[4,14],[-3,32],[2,8]],[[1263,6985],[5,-12],[4,15],[4,-7],[-4,-28],[-6,8],[-3,24]],[[1258,7247],[-4,19],[5,13],[15,-18],[7,1],[5,-36],[9,-29],[-1,-22],[-5,-11],[-6,5],[-5,-14],[-6,9],[-7,-9],[-1,45],[0,30],[-5,1],[-1,16]],[[1252,7162],[-4,14],[-4,32],[0,24],[3,11],[4,-11],[0,20],[12,-35],[1,-33],[-4,-5],[-3,-37],[3,-11],[-3,-43],[-5,9],[0,-27],[-3,13],[-2,54],[5,25]],[[1207,7331],[8,38],[3,-16],[7,-13],[6,-2],[0,-30],[6,-99],[0,-85],[-1,-22],[-4,13],[-10,84],[-7,25],[3,20],[-3,48],[-8,39]],[[1235,7494],[10,-15],[5,2],[0,-14],[8,-52],[-5,8],[-2,-18],[6,-27],[2,-48],[-6,-13],[-2,-16],[-10,-35],[-3,1],[-1,37],[2,22],[-1,32],[-3,40],[0,21],[-2,51],[-4,22],[-1,38],[7,-36]],[[1203,7324],[4,0],[4,-35],[-2,-24],[-6,-5],[0,38],[0,26]],[[1207,7331],[-5,7],[-3,26],[-6,18],[-5,37],[-6,17],[1,30],[4,10],[1,26],[3,-11],[8,-1],[6,17],[8,-23],[-5,-26],[2,-9],[4,28],[10,-9],[5,-21],[-3,-38],[3,-3],[3,-50],[-7,-7],[-14,41],[0,-42],[-4,-17]],[[883,7871],[-12,-48],[-1,-19],[-9,-12],[2,29],[10,30],[7,34],[3,-14]],[[870,7943],[-2,-39],[-4,-41],[-6,14],[5,47],[7,19]],[[863,9788],[3,-8],[15,-9],[8,5],[10,0],[12,-7],[7,4],[7,-15],[12,-18],[16,-4],[5,10],[11,6],[4,14],[12,2],[0,-9],[7,5],[15,-15],[9,-24],[10,-11],[2,-11],[8,-2],[8,-18],[1,-11],[5,9],[6,-7],[0,-1783],[13,-16],[2,17],[14,-24],[8,30],[18,4],[-3,-52],[4,-17],[10,-17],[2,-27],[29,-101],[4,-63],[6,17],[12,31],[7,1],[3,23],[0,34],[5,0],[1,31],[9,7],[13,26],[13,-45],[-1,-27],[3,-27],[7,-7],[10,-40],[-1,-12],[4,-22],[12,-25],[19,-110],[3,-29],[6,-29],[8,-65],[9,-55],[-3,-23],[9,-9],[-2,-33],[7,-14],[1,-38],[7,2],[14,-40],[9,-7],[5,-19],[4,-5],[1,-19],[9,-5],[3,-23],[-4,-43],[1,-36],[4,-58],[-4,-15],[-6,-53],[-10,-39],[-3,20],[-4,-6],[-3,39],[1,17],[-3,20],[7,21],[-2,7],[-7,-26],[-3,17],[-4,-10],[-12,42],[4,46],[-8,-15],[0,-23],[-6,17],[-1,22],[4,24],[-1,24],[-6,-19],[-6,42],[-3,-8],[-2,36],[5,23],[6,0],[-2,28],[3,36],[-5,-1],[-9,32],[-6,37],[-15,27],[0,77],[-4,9],[1,31],[-5,9],[-8,42],[-2,22],[-12,7],[-14,56],[-6,132],[-3,-30],[1,-27],[6,-53],[-1,-8],[3,-43],[0,-28],[-6,6],[-4,31],[-6,6],[-8,-9],[0,45],[-5,38],[-5,-12],[-17,40],[-2,-11],[10,-13],[7,-31],[3,-1],[1,-25],[4,-30],[-10,-16],[-5,10],[0,-26],[-8,20],[-2,14],[-5,0],[-13,38],[-10,33],[-1,20],[-5,30],[-14,21],[-9,21],[-14,26],[-9,24],[1,26],[2,-9],[3,17],[-3,38],[4,21],[-2,9],[-7,-40],[-14,-26],[-18,10],[-14,24],[-1,18],[-7,-4],[-7,14],[-17,12],[-9,1],[-21,-10],[-8,-7],[-10,27],[-12,12],[-3,17],[-2,28],[-8,-2],[-3,-25],[-15,34],[-2,14],[-15,-27],[-7,-32],[-3,30],[3,17],[4,-5],[14,22],[-2,17],[-6,-8],[-3,22],[-6,3],[-6,55],[-3,-13],[-8,-8],[-3,8],[-3,-18],[-11,6],[-1,-20],[-7,-5],[-3,7],[2,36],[-3,-1],[-5,-38],[7,-12],[1,-27],[4,-30],[-3,-31],[-5,10],[-2,-15],[6,-7],[3,-41],[-8,-9],[-4,9],[-7,-12],[-3,10],[-9,-2],[0,16],[-4,-10],[-3,-20],[-3,18],[-5,-25],[2,-12],[-6,-15],[-6,-2],[-3,-20],[-6,-17],[-4,6],[-5,-21],[-4,1],[-8,-43],[-9,-3],[-3,14],[-5,-23],[-11,17],[2,33],[8,11],[4,-2],[2,13],[8,25],[0,21],[-11,-28],[-9,16],[-1,12],[5,48],[8,34],[1,29],[2,5],[1,30],[-4,34],[10,12],[19,48],[4,-19],[6,-5],[9,20],[-10,26],[-4,20],[-7,-2],[-5,9],[-2,-8],[-9,-14],[-4,-26],[-9,-6],[-9,-30],[-1,-20],[-7,-11],[-2,-22],[-5,-13],[-2,-39],[-10,-25],[5,-20],[-4,-29],[-9,-5],[-1,-38],[-8,-13],[-3,15],[-4,-29],[-5,-1],[1,-21],[-11,-13],[-2,-57],[12,-3],[10,-16],[3,-19],[-4,-30],[-7,-19],[-6,-1],[0,-17],[-4,-6],[1,-21],[-4,-31],[-9,-29],[-5,0],[-5,-11],[-5,2],[-4,-11],[2,-16],[-7,-8],[-2,-23],[-5,14],[-5,-45],[-9,4],[1,-24],[-6,6],[-3,-11],[0,-32],[-6,-50],[-10,-6],[-7,-23],[-2,-13],[-5,18],[-8,-48],[-2,13],[-5,-4],[-1,-27],[-5,-10],[-6,4],[-4,-27],[8,-9],[-9,-60],[-25,-20],[-6,-54],[-2,12],[1,33],[-5,6],[-6,-13],[-1,-14],[-10,-22],[-4,-25],[-1,18],[-2,-21],[-6,14],[-10,-33],[-8,2],[1,25],[-4,24],[-3,-20],[1,-21],[-11,-64],[-3,16],[-1,-24],[-8,4],[-1,38],[-4,8],[-2,-14],[4,-16],[-2,-27],[-5,-13],[-5,29],[-5,2],[-1,-11],[5,-17],[-9,-27],[6,-7],[0,-13],[-5,9],[-7,-25],[-15,1],[-7,-16],[0,-13],[-8,-15],[-6,6],[-2,35],[6,12],[4,43],[6,1],[13,28],[10,1],[4,-27],[3,20],[-1,23],[6,10],[7,0],[8,50],[10,45],[12,40],[15,18],[6,-9],[6,12],[1,-17],[-3,-19],[4,-14],[1,23],[7,2],[2,-15],[5,-5],[0,18],[-8,15],[0,11],[5,49],[6,28],[9,27],[15,24],[10,35],[5,-13],[4,5],[-1,22],[1,21],[8,44],[11,28],[8,38],[0,21],[7,148],[11,40],[-1,31],[-27,-45],[-8,6],[-2,18],[-5,9],[-1,21],[-4,-10],[-3,-32],[5,-41],[-6,-18],[-5,7],[-9,64],[-6,33],[-4,0],[-2,-24],[-3,-4],[-4,19],[-5,4],[-2,32],[-16,-37],[-13,-26],[-1,-14],[-11,-22],[-6,20],[5,23],[-1,54],[-4,57],[7,24],[-6,49],[-5,27],[-4,39],[-6,17],[-2,-34],[-7,-8],[-12,-22],[-14,-9],[-7,2],[-7,12],[-1,30],[-5,9],[-9,42],[-8,8],[-8,46],[6,21],[1,39],[-5,-8],[0,24],[2,19],[-6,18],[0,-19],[-7,8],[-1,32],[-6,4],[-3,22],[0,27],[-5,-12],[-1,26],[7,6],[-6,30],[10,2],[0,35],[2,24],[18,77],[4,23],[3,-5],[-2,33],[7,55],[6,22],[11,9],[8,-9],[12,-33],[8,4],[11,32],[11,49],[6,6],[1,-13],[13,0],[12,10],[11,52],[0,12],[-5,48],[-1,28],[-8,31],[-3,26],[8,-7],[8,22],[0,20],[-10,39],[-8,-30],[-7,5],[-6,-17],[-8,-4],[-2,-11],[-9,-17],[-2,-28],[-5,-12],[-2,34],[-5,7],[-4,-26],[-2,12],[-10,19],[-20,-1],[-14,-21],[-6,-3],[-11,13],[-22,14],[-6,12],[-3,19],[2,26],[-8,22],[2,24],[5,12],[-2,31],[-8,0],[-6,8],[-13,6],[-7,16],[-10,16],[-1,19],[16,27],[20,43],[15,27],[8,-15],[8,-3],[2,21],[-5,3],[-1,18],[20,29],[22,22],[12,2],[7,-7],[-4,-32],[2,-22],[-3,-15],[4,-26],[8,5],[10,-5],[11,6],[4,-10],[7,-2],[7,10],[8,-11],[9,42],[5,2],[5,-8],[2,24],[-12,11],[-11,-9],[1,31],[-8,34],[-10,10],[-2,30],[7,8],[9,-31],[-1,-24],[4,-18],[10,-22],[2,23],[-11,30],[5,54],[-4,10],[-11,-12],[-11,3],[-2,10],[-6,-10],[-24,23],[0,24],[-7,54],[-6,19],[-9,17],[-19,46],[-9,18],[-8,4],[-13,31],[-12,18],[-1,6],[9,10],[4,29],[1,59],[25,-4],[31,13],[8,11],[12,29],[12,45],[3,45],[5,38],[10,33],[5,24],[13,38],[2,-10],[11,-3],[16,20],[10,21],[24,64],[9,4],[1,-10],[9,7],[9,-2],[18,9],[17,28],[17,58],[7,13],[2,-10],[26,-24],[2,-17],[-9,-22],[-4,-1],[0,-29],[14,9],[0,16],[6,14],[2,-8],[5,33],[13,-30],[-2,-23],[8,-6],[5,-14],[7,22],[13,1],[7,7],[18,-7],[10,-8],[-5,-45],[17,-12],[2,-11],[16,-20],[1,9],[12,13],[11,-1],[0,-11],[7,-1],[7,15],[11,2],[9,-6],[11,-16],[5,3],[7,-22],[4,9],[7,-7],[5,-13]],[[717,7456],[-1,-8],[-9,13],[7,49],[6,4],[4,45],[5,-40],[4,14],[8,-22],[0,-31],[-11,-4],[-5,-13],[-8,-7]],[[688,7363],[8,25],[-8,6],[0,22],[6,14],[5,-10],[0,-22],[3,15],[0,32],[5,-15],[1,21],[5,-12],[5,0],[5,11],[7,-20],[0,-55],[9,4],[-6,-37],[-11,15],[4,-24],[-3,-20],[-6,10],[0,-38],[-8,-10],[-3,-16],[-5,15],[-6,-40],[-4,-4],[-5,-18],[-2,43],[-6,-23],[-1,13],[-6,14],[0,39],[-6,15],[4,45],[11,28],[7,-2],[1,-21]],[[671,7185],[-6,-39],[-2,6],[8,33]],[[640,7055],[4,-2],[-1,-40],[-8,6],[-1,13],[6,23]],[[519,6933],[-2,-41],[-9,-33],[5,51],[2,-5],[4,28]],[[501,6947],[5,0],[0,-20],[-5,-23],[-5,15],[-3,-14],[-2,35],[2,12],[8,-5]],[[451,6875],[1,-16],[-3,-11],[-3,18],[5,9]],[[447,8527],[-4,-19],[-2,16],[6,3]],[[436,6781],[6,-7],[-1,-16],[-5,1],[0,22]],[[358,6745],[2,-22],[-5,-10],[-1,23],[4,9]],[[352,6718],[-8,-21],[-2,14],[3,19],[7,-12]],[[335,7902],[6,7],[2,-14],[5,3],[6,-12],[1,-54],[-3,-18],[-7,-11],[-2,-18],[-11,20],[-5,-1],[-10,28],[-4,0],[-6,15],[-3,25],[4,7],[10,-7],[5,20],[5,2],[3,14],[4,-6]],[[334,6690],[5,-14],[-10,-36],[1,-6],[12,26],[0,-15],[-5,-17],[-8,-12],[-1,-18],[-8,-18],[-7,-1],[-5,-18],[-9,-16],[-5,17],[9,20],[3,-3],[8,16],[-2,19],[4,20],[6,-9],[1,12],[-7,4],[-4,14],[4,23],[11,13],[2,-26],[5,25]],[[266,6527],[10,37],[1,16],[4,17],[7,9],[3,-10],[1,-25],[-12,-27],[-6,-40],[-6,-13],[-2,36]],[[238,6477],[2,-19],[-8,-1],[-1,13],[7,7]],[[227,7303],[-4,-18],[-1,18],[5,0]],[[212,6440],[2,-18],[-5,-13],[-1,19],[4,12]],[[182,8542],[22,-28],[13,24],[6,-2],[5,-14],[2,-23],[11,-12],[4,-12],[15,-5],[8,-8],[-4,-28],[-7,6],[-8,-5],[-4,-13],[-4,-28],[-5,26],[-6,18],[-6,2],[-3,20],[-15,25],[-6,1],[-11,-22],[-7,11],[-4,23],[4,44]],[[162,6381],[0,-22],[-5,-4],[1,19],[4,7]],[[128,6335],[4,-8],[10,1],[1,-7],[-13,-9],[-2,23]],[[108,6360],[0,19],[4,7],[6,-19],[-2,-17],[-4,1],[1,-20],[-5,-2],[-12,-21],[-6,6],[2,15],[7,-2],[9,33]],[[47,6279],[5,3],[0,-24],[-6,3],[-8,-28],[-4,37],[4,1],[0,29],[5,1],[0,-21],[4,-1]],[[28,6296],[3,-9],[-2,-32],[-5,-10],[0,20],[4,31]],[[0,6291],[5,-1],[4,-23],[-4,-27],[-5,51]],[[9993,6496],[6,-13],[0,-19],[-11,-12],[-8,31],[0,15],[13,-2]],[[1966,3444],[-1,-1081]],[[1965,2363],[-57,0],[-34,71],[-73,150],[3,43]],[[1804,2627],[6,8],[1,16],[-1,36],[-4,1],[-2,71],[6,27],[0,28],[-1,45],[4,34],[4,12],[4,25],[-6,27],[-4,51],[-5,31],[0,24]],[[1806,3063],[2,26],[0,36],[-3,36],[-2,112],[11,7],[3,-23],[3,1],[3,33],[0,153]],[[1823,3444],[101,2],[42,-2]],[[2515,3253],[-1,-35],[-4,-11],[-1,-29],[-5,-31],[0,-46],[-3,-34],[-3,-5]],[[2498,3062],[2,-17],[-4,-14],[-2,-33],[-3,-8],[0,-38],[-5,-10],[0,-13],[-6,-31],[2,-21],[-5,-30],[-5,-59],[5,-25],[-2,-16],[1,-39],[-2,-26]],[[2474,2682],[-69,3],[-13,0]],[[2392,2685],[0,101],[-4,8],[-5,-9],[-3,18]],[[2380,2803],[1,335],[-5,211]],[[2376,3349],[4,0],[123,-1],[2,-36],[-4,-23],[-4,-36],[18,0]],[[1654,4398],[0,-331],[0,-241],[36,-171],[35,-169],[27,-137],[20,-101],[34,-185]],[[1804,2627],[-38,-18],[-30,-16],[-4,25],[0,40],[-2,47],[-4,33],[-9,46],[-12,43],[-2,-12],[-4,8],[1,18],[-5,39],[-7,-8],[-12,28],[-2,23],[-8,28],[-9,-1],[-7,13],[-10,-6],[-5,26],[1,53],[-1,8],[1,38],[-8,28],[0,39],[-3,2],[-4,33],[-4,8],[-1,20],[-11,79],[-5,23],[-1,61],[2,-5],[2,37],[-4,33],[-5,-4],[-7,30],[-2,24],[0,23],[-3,31],[0,50],[5,0],[-2,70],[-2,-7],[-1,-35],[-5,-7],[-7,26],[-1,45],[-4,35],[-6,22],[-3,25],[-9,50],[2,14],[-4,64],[2,35],[-3,54],[-7,52],[-7,29],[-2,35],[7,83],[2,29],[-2,22],[3,57],[-2,52],[-3,13],[1,42]],[[1534,4399],[28,1],[24,1],[38,-3],[30,0]],[[2107,4208],[57,0],[0,-191]],[[2164,4017],[1,-574]],[[2165,3443],[-28,1]],[[2137,3444],[-38,-1],[-72,0],[-15,1],[-46,0]],[[1966,3444],[0,223],[-1,21],[0,162],[0,357]],[[1965,4207],[32,1],[63,-1],[47,1]],[[3025,4400],[0,-113],[-2,-18]],[[3023,4269],[-2,3],[-12,-14],[-15,4],[-7,-26],[-7,-9],[-8,-22]],[[2972,4205],[-2,22],[7,21],[-2,16],[2,144]],[[2977,4408],[12,-2],[36,-3],[0,-3]],[[2922,3980],[-2,-23]],[[2920,3957],[-3,-13],[0,-30],[5,-29],[1,-47],[6,-49],[3,-2],[1,-66]],[[2933,3721],[-19,2],[-2,241]],[[2912,3964],[5,21],[5,-5]],[[2876,3786],[-2,27]],[[2874,3813],[2,12],[4,-19],[-4,-20]],[[2649,2300],[4,-55],[39,-13],[37,-14],[1,-41],[4,1],[1,39],[-1,35],[2,15],[7,-16],[8,-7]],[[2751,2244],[1,-83],[4,-93],[8,-122],[13,-131],[-2,-9],[1,-61],[5,-68],[8,-137],[2,-42],[0,-44],[-3,-158],[-3,-3],[-3,-49],[1,-16],[-5,-36],[-2,9],[-6,-15],[-9,-8],[-2,20],[1,29],[-7,85],[-5,15],[-4,-11],[-3,47],[-1,38],[-6,43],[-2,28],[1,41],[-3,8],[1,-24],[-3,-7],[-9,104],[-4,26],[9,76],[-6,-4],[-4,-24],[-3,38],[5,104],[1,87],[-4,21],[-1,28],[-5,6],[-7,46],[-5,19],[0,28],[-4,11],[-3,31],[-11,42],[-9,-10],[0,-29],[-3,5],[-12,-35],[-12,-9],[0,21],[-3,25],[-15,57],[-10,24],[-10,6],[-8,-4],[-17,-18]],[[2703,3063],[-6,-41],[0,-20],[9,-40],[3,3],[5,-42],[1,-22],[4,-40],[7,-24],[3,-35],[8,-33],[0,-22],[5,-35],[7,-29],[2,-32],[1,-40],[3,-14],[5,-51],[0,-33],[7,-16]],[[2767,2497],[-7,-65],[-2,-34],[-3,-29],[0,-30],[-3,-14],[-1,-81]],[[2632,3060],[37,1]],[[2669,3061],[20,-1],[14,3]],[[640,0],[-7,17],[-1,16],[1,43],[-5,73],[4,24],[2,34],[-2,22],[1,23],[8,-27],[9,-20],[5,-29],[0,-26],[8,-40],[-5,-34],[-8,-15],[-7,-25],[-3,-36]],[[613,397],[3,-26],[4,11],[9,-30],[-1,-27],[-9,-14],[-2,6],[-1,33],[-5,7],[-1,19],[3,21]],[[602,432],[-3,-20],[-7,0],[2,22],[8,-2]],[[574,525],[3,-45],[-2,-26],[-6,-5],[-4,54],[4,1],[5,21]],[[531,626],[3,-2],[2,-20],[-1,-28],[-4,-18],[-9,22],[1,31],[8,15]],[[1908,4871],[0,-472]],[[1908,4399],[-31,-1],[-54,0]],[[1823,4398],[-85,1]],[[1738,4399],[0,349],[4,62],[-2,16],[-6,3],[-2,26],[6,68],[3,6],[3,29],[-1,17],[4,23],[1,34],[6,56],[-2,26],[-7,14],[-4,32]],[[1741,5160],[0,34],[-3,33],[0,16],[0,255],[0,236]],[[1738,5734],[28,0]],[[1766,5734],[0,-195],[9,-54],[1,-52],[5,-23],[6,-8],[0,-14],[11,-51],[1,-21],[8,-20],[0,-12],[8,1],[-4,-71],[-1,-45],[3,-29],[-5,-21],[2,-20],[-1,-21],[6,-20],[7,26],[3,21],[5,-19],[-1,-15],[3,-37],[5,-39],[3,-13],[0,-37],[3,-16],[6,-2],[4,-61],[3,-11],[3,18],[9,-1],[7,17],[3,-10],[7,9],[2,-11],[5,8],[7,39],[4,-33],[5,-20]],[[2489,4496],[53,-3],[28,0]],[[2570,4493],[-1,-37],[4,-43],[5,-70]],[[2578,4343],[0,-450],[-3,-35],[3,-40],[1,-34],[-4,-27],[-1,-25],[-5,-41],[-3,-3],[0,-24],[-2,-9],[-1,-45],[0,-13]],[[2563,3597],[-3,-27],[2,-34],[-11,-17],[-1,-20],[2,-25],[-3,-16],[-11,29],[-3,-2],[-4,-33],[1,-11]],[[2532,3441],[-5,2],[-6,55],[2,12],[-2,37],[0,29],[-9,41],[-3,-4],[-3,25],[-9,38],[0,31],[5,49],[-1,18],[3,23],[-4,13],[-6,9],[-3,-18],[-3,11],[-1,63],[-10,41],[-9,49],[-3,58],[-1,39],[3,27]],[[2467,4089],[0,35],[8,21],[1,29],[4,19],[0,33],[-4,27],[2,34],[11,9],[9,24],[0,29],[4,13],[1,37],[0,24],[-7,18],[-1,20],[-6,35]],[[2655,4340],[0,-228],[0,-266]],[[2655,3846],[-2,-9],[2,-52],[-5,-1],[-5,-18],[-8,9],[1,-38],[-5,-16],[-2,-24],[-5,-9],[-3,-48],[-3,-13],[-6,18],[-1,22],[-7,-24],[1,-21],[-7,-7],[-1,19],[-8,-19],[-2,-20],[-7,28],[-4,-6],[-2,13],[-3,-13],[-7,-2],[-3,-18]],[[2578,4343],[3,-12],[8,0],[9,22]],[[2598,4353],[23,0],[34,0],[0,-13]],[[2473,4685],[0,-28],[4,-19],[-3,-23],[1,-43],[2,-30],[10,-22],[2,-24]],[[2467,4089],[-3,7],[-6,38],[-3,-1],[-40,-5],[-39,-2],[-33,3]],[[2343,4129],[-3,25],[2,49],[-3,43],[0,48],[-5,17],[-1,26],[2,23],[-2,33],[-4,13],[-5,86]],[[2324,4492],[-5,41],[2,29],[1,37],[2,14],[-3,19],[1,33],[-2,16],[4,4]],[[2324,4685],[144,0],[5,0]],[[2356,4017],[3,-18],[9,-14],[-6,-56],[4,-18],[4,-45],[6,-10],[0,-412]],[[2376,3444],[-156,0],[-55,-1]],[[2164,4017],[5,0],[187,0]],[[2718,3716],[-1,-57],[4,-37],[4,-28],[2,-22],[5,-22],[4,-3]],[[2736,3547],[-11,-51],[-11,-29],[0,-14],[-4,-13],[0,-16],[-6,-8],[-1,-21],[-16,-27]],[[2687,3368],[0,-3],[-24,2],[-22,6],[-5,-2],[-32,8],[-36,-5],[-6,9],[1,-35],[-36,2],[-3,-2]],[[2524,3348],[1,24],[5,-8],[2,77]],[[2655,3846],[11,0],[5,-40],[1,-17],[9,-7],[6,-26],[5,13],[10,-14],[4,19],[4,6],[1,-32],[3,-6],[4,-26]],[[2474,2682],[3,-22],[-2,-9],[-1,-38],[5,-24],[0,-57],[-3,-44],[-7,-27],[-2,-43],[-2,4],[-1,-70],[-3,-2],[2,-37],[-2,-14],[54,0],[-3,-63],[4,-41],[1,-32],[4,-20]],[[2521,2143],[-9,-26],[0,-19],[7,-12],[3,30],[6,-30],[-1,-24],[-3,-11],[-7,10],[1,-18],[-2,-27],[5,-24],[9,-7],[3,-29],[3,-4],[-5,-32],[-5,6],[-4,33],[-10,18],[0,33],[-6,-11],[1,-27],[-3,-25],[-3,-4],[-3,28],[-7,1],[-2,-29],[-4,-9],[-5,18],[-4,2],[-3,47],[-7,21],[-2,-3],[-3,40],[-7,-5],[0,24],[-8,-23],[1,-18],[-5,-17],[-9,8],[-10,27],[-7,11],[-16,-9],[-2,-8]],[[2398,2049],[-2,19],[6,68],[-2,37],[2,20],[-1,26],[3,19],[3,50],[0,40],[-8,78],[0,41],[-7,42],[0,196]],[[3046,5029],[12,26],[-2,13],[5,30],[4,13],[-1,12],[5,18],[-1,33],[2,50],[5,17],[1,53],[22,147],[6,-7],[0,-35],[4,-13],[9,21],[6,0],[4,14],[8,-31],[4,-25],[1,-214],[-1,-51],[10,-14],[-2,-22],[3,-21],[-2,-18],[4,-30],[5,7],[5,-68],[-6,-31],[-3,12],[-3,-21],[-4,5],[0,-18],[-6,2],[-8,-40],[-2,28],[-3,2],[1,-30],[-6,-15],[-2,24],[-3,-12],[-7,0],[0,28],[-5,-6],[1,-20],[-4,-42],[1,-12],[-6,-23],[-5,9],[-3,-24],[-4,-3],[-4,-20],[-4,4],[-1,21],[-7,-34],[2,-21],[-5,-7],[0,-18],[-5,-22],[-5,-50]],[[3056,4600],[-3,14],[0,19],[-4,22],[-2,250],[-1,124]],[[2904,3626],[2,0],[-1,0],[-1,0]],[[2933,3721],[-6,-80]],[[2927,3641],[-4,-3],[-8,-12]],[[2915,3626],[-6,-8],[0,31],[-2,13],[3,13],[-4,32],[-2,-14],[-6,3],[-2,35],[2,0],[0,45],[2,18],[-2,60],[3,36],[5,6],[0,37],[-3,-5],[0,-18],[-8,-25],[-2,-21],[0,-56],[-3,-26],[1,-44],[4,-30],[-1,-23],[3,-23],[-2,-16],[-6,30],[-10,15],[-2,29],[-6,-16],[-2,23],[5,29]],[[2874,3756],[2,30]],[[2874,3813],[-4,18],[-6,10],[0,28],[-3,15],[-4,4]],[[2857,3888],[-4,53],[-4,0],[-5,18],[-3,-15],[-5,1],[-1,-21],[-8,14],[-6,-28],[-3,6],[-6,-33],[-6,-17],[1,98]],[[2807,3964],[105,0]],[[3053,4565],[1,-34],[-1,-27],[-5,-25],[0,-29],[6,-4],[4,-31],[0,-24],[3,-6],[0,-22],[8,-19],[9,18],[-2,-26],[-13,-23],[-5,-1],[-3,18],[-5,-6],[0,-13],[-5,-9]],[[3045,4302],[-3,35]],[[3042,4337],[0,6]],[[3042,4343],[-3,14],[-2,45],[-4,0],[-8,-2]],[[2977,4408],[0,7],[6,126]],[[2983,4541],[23,-3]],[[3006,4538],[34,-7],[3,18],[7,19],[3,-3]],[[2598,4353],[5,25],[4,43],[4,26],[3,36],[1,52],[0,57],[-9,111],[3,42],[-2,50],[6,51],[2,43],[-1,23],[5,9],[0,31],[8,9],[5,34],[0,-69],[3,-3],[3,35],[1,58],[2,15],[8,9],[-3,41],[5,35],[7,2],[7,-22],[7,-3],[3,-28],[6,-2],[9,-25],[3,1],[4,-41],[-3,-21],[3,-29],[2,-32],[-2,-71],[-6,-18],[-1,-37],[-7,-12],[-4,-44],[2,-17],[6,-15],[6,24],[6,49],[10,19],[5,-15],[3,-27],[3,-80],[0,-39],[3,-48],[-3,-69],[-4,-11],[-1,25],[-3,-7],[-3,-58],[-6,-21],[-2,-44],[-7,-37],[0,-16]],[[2694,4347],[-39,-7]],[[2635,5110],[1,-23],[-4,-4],[1,33],[2,-6]],[[2496,5270],[11,20],[5,23],[12,9],[8,29],[4,1],[3,20],[9,28],[4,24],[7,15],[6,-13],[-11,-59],[-2,-19],[0,-36],[5,27],[10,-4],[8,-19],[7,-52],[3,-10],[7,9],[2,-12],[7,-6],[16,44],[8,4],[10,-2],[7,15],[6,1],[1,-54],[5,-7],[6,8],[2,-12],[4,16],[8,5],[1,-67],[3,-28],[6,-8],[1,19],[5,0],[3,-20],[-3,-14],[-15,12],[-8,-8],[-8,23],[-2,-21],[1,-18],[-4,4],[-5,27],[-9,15],[-5,1],[-4,-25],[-8,-6],[-8,5],[-3,-10],[-1,-21],[-9,-18],[1,25],[-4,5],[-2,-26],[-6,-1],[-3,-11],[-5,-45],[-8,-58],[1,-5]],[[2576,4989],[-4,20],[2,27],[-7,4],[3,26],[0,34],[-5,23],[-4,24],[-12,19],[-4,-7],[-12,29],[-29,38],[-3,33],[-5,11]],[[2541,5539],[-7,-24],[-4,-3],[1,19],[18,45],[-4,-31],[-4,-6]],[[2324,4685],[0,343],[-7,22],[-5,36],[8,41],[1,22]],[[2321,5149],[-1,76],[-4,20],[-2,42],[0,51],[-1,8],[-1,123],[-5,65],[-3,36],[0,77],[1,27],[-3,60]],[[2302,5734],[59,0],[0,73],[5,-2],[4,-14],[4,-100],[3,-11],[9,-3],[1,-10],[11,-4],[1,-21],[10,5],[0,9],[7,10],[6,-4],[8,-16],[2,-19],[4,2],[4,-43],[2,18],[7,8],[1,-18],[9,-12],[0,-17],[4,-14],[8,8],[5,18],[8,12],[2,-28],[5,6],[6,-6],[6,4],[8,-24],[7,4],[0,-10],[-10,-24],[-13,-19],[-9,-20],[-12,-49],[-5,-31],[-8,-34],[-13,-46],[2,-16]],[[2450,5296],[-2,9],[-6,-16],[0,-113],[-2,-11],[-8,-16],[-6,-41],[-1,-27],[3,-2],[4,-24],[-3,-29],[0,-33],[-2,-70],[8,-34],[6,-3],[3,-21],[8,-21],[2,-25],[8,-33],[5,-7],[5,-42],[-1,-30],[2,-22]],[[2553,2179],[-3,-8],[-7,4],[-3,12],[-7,-8],[-9,-22],[-3,-14]],[[2498,3062],[53,0],[7,0]],[[2524,3348],[-2,0],[-2,0],[1,-47],[-6,-48]],[[2376,3349],[0,95]],[[2356,4017],[-7,50],[-6,62]],[[2108,5151],[0,-181],[-1,0]],[[2107,4970],[-53,1],[-90,0],[-56,0],[0,-100]],[[1766,5734],[130,-1],[58,1],[154,0]],[[2108,5734],[0,-217],[0,-366]],[[2107,4208],[0,382]],[[2107,4590],[21,0],[49,-1],[88,0],[1,-10],[15,-34],[4,19],[4,-4],[13,0],[15,-36],[2,-27],[5,-5]],[[1823,4398],[0,-954]],[[1654,4398],[37,-1],[47,2]],[[3006,4538],[-2,14],[0,28],[3,11],[-1,27],[3,81],[5,37],[2,43],[3,16],[-1,47],[10,17],[5,33],[-3,31],[4,32],[0,18]],[[3034,4973],[4,49],[6,-5],[2,12]],[[3056,4600],[-3,-35]],[[2962,4152],[-5,-13],[-2,-29],[8,-14],[0,-22],[-3,-103],[-9,-76],[-6,-22],[-5,-48],[-3,31],[-8,16],[-10,42],[-1,28],[0,4],[2,11]],[[2922,3980],[8,15],[0,15],[9,31],[2,17],[-9,39],[0,24],[-3,6],[-1,22],[5,33],[-3,20],[7,40],[2,21],[4,13]],[[2943,4276],[13,-41],[9,-28],[-3,-55]],[[2137,3444],[0,-95]],[[2137,3349],[-1,0],[0,-474],[0,-193],[0,-192],[-101,0],[-1,-18],[3,-22]],[[2037,2450],[-48,0],[0,-87],[-24,0]],[[2972,4205],[13,-15],[2,11],[10,0],[6,6],[8,31],[1,-22],[5,-10],[-11,-28],[-22,-42],[-9,-8],[-6,2],[-5,-9],[-2,31]],[[2943,4276],[-2,14],[-4,1],[-5,32],[1,29],[-4,22],[-2,-2],[-3,27],[-125,0],[0,48],[0,3]],[[2799,4450],[17,54],[3,26],[5,18],[-2,32],[-2,7],[-2,52],[17,22],[15,-1],[6,-5],[6,-21],[4,8],[12,-1],[8,14],[8,34],[5,1],[0,52],[3,31],[-7,21],[2,24],[11,32],[4,28],[14,64],[13,32],[19,-5],[23,4]],[[2981,4973],[1,-39],[-2,-36],[3,-34],[-1,-37],[-3,-39],[2,-52],[-1,-16],[4,-31],[-1,-132],[0,-16]],[[2909,3359],[4,-77],[-8,8],[-1,-10],[-10,-11],[-1,-11],[-7,-3],[0,-13],[8,9],[1,-8],[9,9],[3,-18],[5,8],[2,-46],[-2,-22],[-3,-2],[-8,-47],[-9,-2],[-2,-33],[4,-32],[4,-6],[-6,-54],[-6,7],[-9,-6],[-6,-11],[-10,-37],[-7,-48],[-4,-60],[-6,13],[-11,-12]],[[2833,2844],[-32,181],[-32,4],[1,21],[-5,33],[-3,-12],[0,20],[-35,10],[-8,-8],[-6,-17],[-10,-13]],[[2669,3061],[1,45],[5,4],[3,31],[7,29],[7,1],[7,29],[8,10],[6,43],[4,13],[1,-19],[11,37],[5,-8],[4,36],[5,9],[1,45]],[[2744,3366],[20,-5],[19,-3],[23,-1],[103,2]],[[2321,5149],[-213,2]],[[2108,5734],[194,0]],[[2777,4138],[-4,-10],[2,-21],[0,-29],[-4,-46],[-3,-70],[-11,-62],[-3,-8],[-4,12],[-3,-27],[-3,1],[-4,-36],[1,-22],[-3,-18],[-4,29],[-5,-46],[1,-29],[-3,-11],[-1,-25],[-8,-4]],[[2694,4347],[11,-26],[3,-15],[3,14],[6,-30],[4,-9],[14,25],[7,-6],[9,36],[12,34],[14,24]],[[2777,4394],[0,-256]],[[2380,2803],[-11,21],[-3,22],[-7,18],[-2,-16],[-8,1],[-1,10],[-7,-19],[-3,11],[-6,-10],[-5,-29],[-2,17],[-6,14],[-7,0],[-2,21],[-7,-42],[-2,24],[-3,-8],[-3,16],[-7,15],[-5,-25],[-2,26],[-4,3],[-2,21],[-6,8],[-3,-18],[-3,16],[-5,-2],[-6,17],[-6,-2],[-2,36],[-9,2],[-4,-6],[-6,37],[-2,-3],[0,370],[-52,0],[-34,0]],[[1534,4399],[-4,22],[-2,61],[0,43],[-4,33],[3,32],[2,51],[4,54],[2,48],[3,162],[0,22],[3,71],[1,99],[-2,54],[1,32],[12,29]],[[1553,5212],[5,-22],[4,5],[3,2],[6,-20],[3,-23],[1,-57],[15,-21],[12,30],[8,3],[9,-10],[1,-13],[16,27],[3,-9],[9,5],[7,19],[12,17],[12,4],[4,12],[58,-1]],[[2807,3964],[-30,0],[0,174]],[[2777,4394],[5,11],[17,45]],[[3045,4302],[-6,-4],[3,39]],[[3042,4343],[-4,3],[-3,-28],[-1,-40],[-11,-9]],[[2833,2844],[-5,-10],[-6,-31],[-6,-49],[-1,-40],[-5,-31],[-6,0],[-2,-23],[-6,-25],[-4,-28],[-6,-11],[-6,-29],[-1,-14],[-6,-16],[-6,-40]],[[2107,4590],[0,380]],[[2687,3368],[57,-2]],[[2398,2049],[-5,-1],[-14,-26],[-6,15],[-1,31],[-3,-22],[-3,5],[-1,-27],[3,-11],[0,-36],[-5,-37],[-9,-47],[-17,-51],[-2,9],[-5,-13],[0,12],[-7,-9],[-3,24],[-2,-5],[7,-49],[-5,-16],[-5,10],[-1,-35],[-7,-35],[-6,-66],[-4,-69],[-3,5],[-1,-25],[3,6],[-2,-50],[-2,-2],[0,-28],[3,-16],[1,-57],[3,-20],[0,-37],[3,-32],[-9,-20],[-3,25],[-7,10],[-9,-3],[-8,32],[-5,3],[-5,25],[-6,8],[-4,24],[-2,58],[-5,34],[0,30],[-2,31],[1,27],[-4,30],[-3,4],[-5,27],[-1,34],[-5,32],[-6,26],[-3,57],[-2,16],[-4,46],[-1,38],[-4,27],[-6,24],[-1,16],[-6,15],[-4,42],[-13,9],[-7,-2],[-7,15],[-1,-20],[-7,-6],[-5,-40],[-3,-64],[-2,-1],[-4,-37],[-5,-1],[-7,29],[-17,47],[-4,25],[-6,24],[-5,54],[-1,49],[-4,40],[-2,35],[-3,22],[-11,32],[-6,44],[-4,15],[-6,38],[-7,20],[-5,50],[-4,11]],[[1908,4399],[0,-192],[57,0]],[[2981,4973],[30,-2],[23,2]],[[2927,3641],[-4,-32],[-3,-12],[-3,-44],[-6,-71],[-5,-15],[-1,27],[2,58],[8,74]],[[2874,3756],[-4,-8],[-2,-28],[1,-19],[8,6],[1,-31],[10,-12],[3,-24],[8,-26],[-4,-54],[4,-41],[-4,-20],[-1,-24],[4,-15],[-4,-23],[-6,30],[-1,-10],[5,-22],[14,-5],[3,-71]],[[2736,3547],[-1,-16],[4,-32],[5,-16],[4,1],[5,25],[4,-20],[7,11],[13,36],[1,-11],[5,17],[0,34],[4,30],[5,29],[2,34],[6,36],[2,44],[5,-27],[4,-8],[3,16],[6,68],[4,-17],[13,77],[2,57],[15,-64],[3,37]],[[1553,5212],[-5,7],[-4,-12],[-6,17],[1,26],[4,14],[-6,40],[-4,103],[-2,14],[-3,73],[-6,28],[-2,56],[3,38],[6,-18],[11,-24],[8,1],[8,-9],[8,9],[3,-16],[7,1],[5,-42],[3,3],[1,-56],[2,-52],[3,6],[-3,43],[1,43],[4,44],[-3,18],[-1,31],[-3,35],[2,25],[-2,29],[-5,4],[-4,22],[1,21],[163,0]],[[1576,5602],[4,9],[0,-39],[-5,15],[1,15]],[[1568,5655],[3,25],[4,-30],[-1,-27],[-7,8],[1,24]],[[2576,4989],[-1,-23],[-6,-4],[-4,-44],[-2,-30],[3,-6],[5,20],[4,38],[6,15],[5,48],[6,10],[-1,-25],[-4,-23],[-8,-79],[-2,-44],[0,-32],[-3,-10],[-2,-43],[1,-37],[-3,-24],[-3,-59],[0,-47],[4,-42],[-1,-55]],[[2450,5296],[6,-2],[20,33],[8,17],[2,-13],[-4,-25],[9,-33],[5,-3]]]};\n  Datamap.prototype.usgTopo = '__USG__';\n  Datamap.prototype.uzbTopo = '__UZB__';\n  Datamap.prototype.vatTopo = '__VAT__';\n  Datamap.prototype.vctTopo = '__VCT__';\n  Datamap.prototype.venTopo = '__VEN__';\n  Datamap.prototype.vgbTopo = '__VGB__';\n  Datamap.prototype.virTopo = '__VIR__';\n  Datamap.prototype.vnmTopo = '__VNM__';\n  Datamap.prototype.vutTopo = '__VUT__';\n  Datamap.prototype.wlfTopo = '__WLF__';\n  Datamap.prototype.wsbTopo = '__WSB__';\n  Datamap.prototype.wsmTopo = '__WSM__';\n  Datamap.prototype.yemTopo = '__YEM__';\n  Datamap.prototype.zafTopo = '__ZAF__';\n  Datamap.prototype.zmbTopo = '__ZMB__';\n  Datamap.prototype.zweTopo = '__ZWE__';\n\n  /**************************************\n                Utilities\n  ***************************************/\n\n  // Convert lat/lng coords to X / Y coords\n  Datamap.prototype.latLngToXY = function(lat, lng) {\n     return this.projection([lng, lat]);\n  };\n\n  // Add <g> layer to root SVG\n  Datamap.prototype.addLayer = function( className, id, first ) {\n    var layer;\n    if ( first ) {\n      layer = this.svg.insert('g', ':first-child')\n    }\n    else {\n      layer = this.svg.append('g')\n    }\n    return layer.attr('id', id || '')\n      .attr('class', className || '');\n  };\n\n  Datamap.prototype.updateChoropleth = function(data, options) {\n    var svg = this.svg;\n    var that = this;\n\n    // When options.reset = true, reset all the fill colors to the defaultFill and kill all data-info\n    if ( options && options.reset === true ) {\n      svg.selectAll('.datamaps-subunit')\n        .attr('data-info', function() {\n           return \"{}\"\n        })\n        .transition().style('fill', this.options.fills.defaultFill)\n    }\n\n    for ( var subunit in data ) {\n      if ( data.hasOwnProperty(subunit) ) {\n        var color;\n        var subunitData = data[subunit]\n        if ( ! subunit ) {\n          continue;\n        }\n        else if ( typeof subunitData === \"string\" ) {\n          color = subunitData;\n        }\n        else if ( typeof subunitData.color === \"string\" ) {\n          color = subunitData.color;\n        }\n        else if ( typeof subunitData.fillColor === \"string\" ) {\n          color = subunitData.fillColor;\n        }\n        else {\n          color = this.options.fills[ subunitData.fillKey ];\n        }\n        // If it's an object, overriding the previous data\n        if ( subunitData === Object(subunitData) ) {\n          this.options.data[subunit] = defaults(subunitData, this.options.data[subunit] || {});\n          var geo = this.svg.select('.' + subunit).attr('data-info', JSON.stringify(this.options.data[subunit]));\n        }\n        svg\n          .selectAll('.' + subunit)\n          .transition()\n            .style('fill', color);\n      }\n    }\n  };\n\n  Datamap.prototype.updatePopup = function (element, d, options) {\n    var self = this;\n    element.on('mousemove', null);\n    element.on('mousemove', function() {\n      var position = d3.mouse(self.options.element);\n      d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover')\n        .style('top', ( (position[1] + 30)) + \"px\")\n        .html(function() {\n          var data = JSON.parse(element.attr('data-info'));\n          try {\n            return options.popupTemplate(d, data);\n          } catch (e) {\n            return \"\";\n          }\n        })\n        .style('left', ( position[0]) + \"px\");\n    });\n\n    d3.select(self.svg[0][0].parentNode).select('.datamaps-hoverover').style('display', 'block');\n  };\n\n  Datamap.prototype.addPlugin = function( name, pluginFn ) {\n    var self = this;\n    if ( typeof Datamap.prototype[name] === \"undefined\" ) {\n      Datamap.prototype[name] = function(data, options, callback, createNewLayer) {\n        var layer;\n        if ( typeof createNewLayer === \"undefined\" ) {\n          createNewLayer = false;\n        }\n\n        if ( typeof options === 'function' ) {\n          callback = options;\n          options = undefined;\n        }\n\n        options = defaults(options || {}, self.options[name + 'Config']);\n\n        // Add a single layer, reuse the old layer\n        if ( !createNewLayer && this.options[name + 'Layer'] ) {\n          layer = this.options[name + 'Layer'];\n          options = options || this.options[name + 'Options'];\n        }\n        else {\n          layer = this.addLayer(name);\n          this.options[name + 'Layer'] = layer;\n          this.options[name + 'Options'] = options;\n        }\n        pluginFn.apply(this, [layer, data, options]);\n        if ( callback ) {\n          callback(layer);\n        }\n      };\n    }\n  };\n\n  // Expose library\n  if (typeof exports === 'object') {\n    d3 = require('d3');\n    topojson = require('topojson');\n    module.exports = Datamap;\n  }\n  else if ( typeof define === \"function\" && define.amd ) {\n    define( \"datamaps\", [\"require\", \"d3\", \"topojson\"], function(require) {\n      d3 = require('d3');\n      topojson = require('topojson');\n\n      return Datamap;\n    });\n  }\n  else {\n    window.Datamap = window.Datamaps = Datamap;\n  }\n\n  if ( window.jQuery ) {\n    window.jQuery.fn.datamaps = function(options, callback) {\n      options = options || {};\n      options.element = this[0];\n      var datamap = new Datamap(options);\n      if ( typeof callback === \"function\" ) {\n        callback(datamap, options);\n      }\n      return this;\n    };\n  }\n})();\n"],
  "mappings": "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AAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,GAAG,GAAG;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,C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C,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,GAAG,GAAG;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,GAAG,GAAG;AAAA,YACP,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,CAAC;AAAA,YACP,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,GAAG,GAAG;AAAA,YACP,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,IAAI,EAAE;AAAA,YACP,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,CAAC;AAAA,YACP,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,EAAE;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,GAAG,GAAG;AAAA,YACP,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAA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AAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B,cAAQ,UAAU,UAAU;AAC5B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",
  "names": ["key", "keyValue", "values", "map", "n", "s", "group", "i", "node", "name", "window", "h", "callback", "request", "row", "d", "utc", "day", "d3_time_format", "λ0", "λ1", "range", "point", "code", "listener", "ρ", "resample", "x", "y", "x1", "y1", "x2", "y2", "string", "size", "o", "childs", "j", "subgroup", "g", "exports", "o", "arcs", "ring", "fragmentByEnd", "fragmentByStart", "i", "neighbors", "polygon", "polygons", "object", "svg", "hoverover", "data", "require"]
}
